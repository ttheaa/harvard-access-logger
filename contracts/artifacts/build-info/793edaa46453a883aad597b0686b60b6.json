{
	"id": "793edaa46453a883aad597b0686b60b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EventTickets.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title EventTickets_Simple\n * @dev Simplified version: Manages creation and sale for events with a single ticket type.\n * For EasyA x Polkadot Harvard Hackathon.\n */\ncontract EventTickets_Simple {\n\n    // --- Struct ---\n    // Simplified Event Info - NO Tiers array\n    struct EventInfo {\n        address owner;          // Who created the event (contract owner for simplicity)\n        string name;           // Name of the event\n        uint256 price;          // Price per ticket (single tier)\n        uint256 maxSupply;      // Max tickets for this event\n        uint256 issuedSupply;   // How many tickets issued\n        uint256 saleStartTime;  // Unix timestamp when sale starts\n        uint256 saleEndTime;    // Timestamp when sale ends\n        // Mapping: userAddress -> ownsTicket? (Simplified)\n        mapping(address => bool) userHasTicket;\n        // REMOVED: userCheckedIn mapping\n    }\n\n    // --- State Variables ---\n\n    address public contractOwner;\n    uint256 public nextEventId;\n    mapping(uint256 => EventInfo) public events;\n\n    // --- Events --- (Simplified)\n\n    event EventCreated(uint256 indexed eventId, address indexed owner, string name, uint256 price, uint256 maxSupply, uint256 saleStartTime, uint256 saleEndTime);\n    event TicketBought(uint256 indexed eventId, address indexed buyer, uint256 price);\n    // REMOVED: AttendeeCheckedIn event\n    event FeesWithdrawn(address indexed owner, uint256 amount);\n\n    // --- Errors --- (Simplified)\n\n    error SaleNotActive();\n    error SaleEnded();\n    error SoldOut();\n    error InsufficientPayment();\n    error AlreadyOwnsTicket();\n    error NotOwner();\n    // REMOVED: AttendeeHasNoTicket, AlreadyCheckedIn, InvalidTierIndex\n    error NoFeesToWithdraw();\n    error EventDoesNotExist();\n\n    // --- Modifier ---\n\n    modifier onlyOwner() {\n        if (msg.sender != contractOwner) revert NotOwner();\n        _;\n    }\n\n    // --- Constructor ---\n\n    constructor() {\n        contractOwner = msg.sender;\n    }\n\n    // --- Owner Functions ---\n\n    /**\n     * @notice Creates a new event with a single ticket type.\n     */\n    function createEvent(\n        string memory _eventName,\n        uint256 _price,         // Single price\n        uint256 _maxSupply,     // Single supply\n        uint256 _saleStartTime,\n        uint256 _saleEndTime\n    ) public onlyOwner {\n        require(_saleEndTime > _saleStartTime, \"Sale end time must be after start time\");\n        require(_maxSupply > 0, \"Max supply must be greater than 0\");\n\n        uint256 eventId = nextEventId;\n        EventInfo storage newEvent = events[eventId];\n\n        newEvent.owner = contractOwner;\n        newEvent.name = _eventName;\n        newEvent.price = _price;\n        newEvent.maxSupply = _maxSupply;\n        // newEvent.issuedSupply defaults to 0\n        newEvent.saleStartTime = _saleStartTime;\n        newEvent.saleEndTime = _saleEndTime;\n        // Mappings default to false/empty\n\n        nextEventId++;\n        emit EventCreated(eventId, contractOwner, _eventName, _price, _maxSupply, _saleStartTime, _saleEndTime);\n    }\n\n    // REMOVED: checkInAttendee function\n\n    /**\n     * @notice Allows the contract owner to withdraw all accumulated WND fees.\n     */\n    function withdrawFees() public onlyOwner {\n        uint256 balance = address(this).balance;\n        if (balance == 0) revert NoFeesToWithdraw();\n        (bool success, ) = contractOwner.call{value: balance}(\"\");\n        require(success, \"Transfer failed\");\n        emit FeesWithdrawn(contractOwner, balance);\n    }\n\n    // --- Public Functions ---\n\n    /**\n     * @notice Allows a user to buy a ticket for a specific event (single tier).\n     */\n    function buyTicket(uint256 eventId) public payable {\n        require(eventId < nextEventId, \"Event does not exist\");\n        EventInfo storage currentEvent = events[eventId];\n\n        // Check conditions (simplified - no tierIndex)\n        if (block.timestamp < currentEvent.saleStartTime) revert SaleNotActive();\n        if (block.timestamp >= currentEvent.saleEndTime) revert SaleEnded();\n        if (currentEvent.issuedSupply >= currentEvent.maxSupply) revert SoldOut();\n        if (msg.value != currentEvent.price) revert InsufficientPayment();\n        if (currentEvent.userHasTicket[msg.sender]) revert AlreadyOwnsTicket();\n\n        // Update state (simplified)\n        currentEvent.userHasTicket[msg.sender] = true;\n        currentEvent.issuedSupply++;\n\n        // Emit event (simplified)\n        emit TicketBought(eventId, msg.sender, currentEvent.price);\n    }\n\n    // --- View Functions ---\n\n    /**\n     * @notice Gets the total number of events created.\n     */\n    function getEventCount() public view returns (uint256) {\n        return nextEventId;\n    }\n\n    /**\n     * @notice Gets details for a specific event.\n     */\n    function getEventDetails(uint256 eventId) public view returns (\n        address owner,\n        string memory name,\n        uint256 price,\n        uint256 maxSupply,\n        uint256 issuedSupply,\n        uint256 saleStartTime,\n        uint256 saleEndTime\n    ) {\n        require(eventId < nextEventId, \"Event does not exist\");\n        EventInfo storage E = events[eventId];\n        return (\n            E.owner,\n            E.name,\n            E.price,\n            E.maxSupply,\n            E.issuedSupply,\n            E.saleStartTime,\n            E.saleEndTime\n        );\n    }\n\n    /**\n     * @notice Checks if a user owns a ticket for a specific event.\n     */\n    function hasTicket(uint256 eventId, address user) public view returns (bool) {\n        // No need to check eventId validity here, non-existent events have no tickets\n        return events[eventId].userHasTicket[user];\n    }\n\n    // REMOVED: isAttendeeCheckedIn function\n    // REMOVED: getTierDetails function\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/EventTickets.sol": {
				"EventTickets_Simple": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyOwnsTicket",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EventDoesNotExist",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InsufficientPayment",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoFeesToWithdraw",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SaleEnded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SaleNotActive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoldOut",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "eventId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "saleStartTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "saleEndTime",
									"type": "uint256"
								}
							],
							"name": "EventCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeesWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "eventId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "TicketBought",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eventId",
									"type": "uint256"
								}
							],
							"name": "buyTicket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_eventName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_saleStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_saleEndTime",
									"type": "uint256"
								}
							],
							"name": "createEvent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "events",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "issuedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEventCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eventId",
									"type": "uint256"
								}
							],
							"name": "getEventDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "issuedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleStartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "saleEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eventId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "hasTicket",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextEventId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyOwnsTicket\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EventDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoFeesToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleEnded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SaleNotActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoldOut\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"}],\"name\":\"EventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TicketBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleEndTime\",\"type\":\"uint256\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEventCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"getEventDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issuedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasTicket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextEventId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simplified version: Manages creation and sale for events with a single ticket type. For EasyA x Polkadot Harvard Hackathon.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EventTickets_Simple\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTicket(uint256)\":{\"notice\":\"Allows a user to buy a ticket for a specific event (single tier).\"},\"createEvent(string,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a new event with a single ticket type.\"},\"getEventCount()\":{\"notice\":\"Gets the total number of events created.\"},\"getEventDetails(uint256)\":{\"notice\":\"Gets details for a specific event.\"},\"hasTicket(uint256,address)\":{\"notice\":\"Checks if a user owns a ticket for a specific event.\"},\"withdrawFees()\":{\"notice\":\"Allows the contract owner to withdraw all accumulated WND fees.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EventTickets.sol\":\"EventTickets_Simple\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EventTickets.sol\":{\"keccak256\":\"0xc47d14880f2b8fa45f60c3bf866fb8c15e410f6df97a17fc2b69b8d1d6759f41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57a5da334c232bc6f7fefd845a418a59ed1f289a7fa8473d3cdd53bc8d2958ee\",\"dweb:/ipfs/QmVKR73RXsr4XCAbnkhojtubMzWcrwYXimN3uYfHTFymGF\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"details": "Simplified version: Manages creation and sale for events with a single ticket type. For EasyA x Polkadot Harvard Hackathon.",
						"kind": "dev",
						"methods": {},
						"title": "EventTickets_Simple",
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyTicket(uint256)": {
								"notice": "Allows a user to buy a ticket for a specific event (single tier)."
							},
							"createEvent(string,uint256,uint256,uint256,uint256)": {
								"notice": "Creates a new event with a single ticket type."
							},
							"getEventCount()": {
								"notice": "Gets the total number of events created."
							},
							"getEventDetails(uint256)": {
								"notice": "Gets details for a specific event."
							},
							"hasTicket(uint256,address)": {
								"notice": "Checks if a user owns a ticket for a specific event."
							},
							"withdrawFees()": {
								"notice": "Allows the contract owner to withdraw all accumulated WND fees."
							}
						},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 23,
								"contract": "contracts/EventTickets.sol:EventTickets_Simple",
								"label": "contractOwner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 25,
								"contract": "contracts/EventTickets.sol:EventTickets_Simple",
								"label": "nextEventId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "contracts/EventTickets.sol:EventTickets_Simple",
								"label": "events",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(EventInfo)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(EventInfo)21_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct EventTickets_Simple.EventInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(EventInfo)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(EventInfo)21_storage": {
								"encoding": "inplace",
								"label": "struct EventTickets_Simple.EventInfo",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "owner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 6,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 8,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "maxSupply",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 12,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "issuedSupply",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 14,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "saleStartTime",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 16,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "saleEndTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 20,
										"contract": "contracts/EventTickets.sol:EventTickets_Simple",
										"label": "userHasTicket",
										"offset": 0,
										"slot": "7",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 96/65648 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 11751\n// Code size = 38391 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20060]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20060] = a1\n    42: a1 = 0x20070\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20070\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 40)\n   420: sp = sp + 0xffffffffffffffa0\n   423: u64 [sp + 0x58] = ra\n   426: u64 [sp + 0x50] = s0\n   429: u64 [sp + 0x48] = s1\n   432: s0 = sp + 0x60\n   435: sp = sp & 0xffffffffffffffe0\n   438: s1 = a0\n   440: a0 = u64 [a2 + 0x18]\n   443: a3 = u64 [a2 + 0x10]\n   446: a4 = u64 [a2 + 0x8]\n   449: a2 = u64 [a2]\n   451: u64 [sp + 0x18] = a0\n   454: u64 [sp + 0x10] = a3\n   457: u64 [sp + 0x8] = a4\n   460: u64 [sp] = a2\n   462: u64 [sp + 56] = 0\n   465: u64 [sp + 48] = 0\n   468: u64 [sp + 40] = 0\n   471: u64 [sp + 32] = 0\n   474: u32 [sp + 64] = 0x20\n   478: a0 = 0\n   480: i32 a1 = sp + 0\n   482: i32 a3 = sp + 0x20\n   485: i32 a4 = sp + 0x40\n   488: a2 = 0xffffffffffffffff\n   491: ecalli 7 // 'get_storage'\n   493: a0 = u64 [sp + 0x38]\n   496: a1 = u64 [sp + 0x30]\n   499: a2 = u64 [sp + 0x28]\n   502: a3 = u64 [sp + 0x20]\n   505: u64 [s1 + 0x18] = a0\n   508: u64 [s1 + 0x10] = a1\n   511: u64 [s1 + 0x8] = a2\n   514: u64 [s1] = a3\n   516: sp = s0 + 0xffffffffffffffa0\n   519: ra = u64 [sp + 0x58]\n   522: s0 = u64 [sp + 0x50]\n   525: s1 = u64 [sp + 0x48]\n   528: sp = sp + 0x60\n   531: ret\n      : @26 [@dyn 2] (gas: 34)\n   533: a1 = reverse s1\n   535: a2 = u64 [sp]\n   537: a2 = reverse a2\n   539: a3 = u64 [sp + 0x8]\n   542: a3 = reverse a3\n   544: a4 = u64 [sp + 0x10]\n   547: a4 = reverse a4\n   549: u64 [sp + 0x58] = a4\n   552: u64 [sp + 0x50] = a3\n   555: u64 [sp + 0x48] = a2\n   558: u64 [sp + 0x40] = a1\n   561: a1 = u64 [sp + 0x18]\n   564: a1 = reverse a1\n   566: a2 = u64 [sp + 0x20]\n   569: a2 = reverse a2\n   571: a3 = u64 [sp + 0x28]\n   574: a3 = reverse a3\n   576: a4 = u64 [sp + 0x38]\n   579: a4 = reverse a4\n   581: u64 [sp + 0x78] = a4\n   584: u64 [sp + 0x70] = a3\n   587: u64 [sp + 0x68] = a2\n   590: u64 [sp + 0x60] = a1\n   593: i32 a2 = a0 + 0\n   595: i32 a0 = sp + 0x40\n   598: a1 = 0x2\n   601: a3 = u64 [sp + 0x30]\n   604: ecalli 6 // 'deposit_event'\n   606: sp = s0 + 0xffffffffffffff60\n   610: ra = u64 [sp + 0x98]\n   614: s0 = u64 [sp + 0x90]\n   618: s1 = u64 [sp + 0x88]\n   622: sp = sp + 0xa0\n   626: ret\n      : @27 (gas: 33)\n   628: sp = sp + 0xffffffffffffff20\n   632: u64 [sp + 0xd8] = ra\n   636: u64 [sp + 0xd0] = s0\n   640: u64 [sp + 0xc8] = s1\n   644: s0 = sp + 0xe0\n   648: sp = sp & 0xffffffffffffffe0\n   651: a5 = u64 [a4]\n   653: u64 [sp + 0x40] = a5\n   656: a5 = u64 [a4 + 0x8]\n   659: u64 [sp + 0x48] = a5\n   662: a5 = u64 [a4 + 0x10]\n   665: u64 [sp + 0x50] = a5\n   668: a4 = u64 [a4 + 0x18]\n   671: u64 [sp + 0x58] = a4\n   674: a4 = u64 [a3]\n   676: u64 [sp + 0x18] = a4\n   679: a4 = u64 [a3 + 0x8]\n   682: u64 [sp + 0x20] = a4\n   685: a4 = u64 [a3 + 0x10]\n   688: u64 [sp + 0x28] = a4\n   691: a3 = u64 [a3 + 0x18]\n   694: u64 [sp + 0x30] = a3\n   697: s1 = u64 [a2]\n   699: a3 = u64 [a2 + 0x8]\n   702: u64 [sp] = a3\n   704: a3 = u64 [a2 + 0x10]\n   707: u64 [sp + 0x8] = a3\n   710: a2 = u64 [a2 + 0x18]\n   713: u64 [sp + 0x10] = a2\n   716: i32 a0 = a0 + 0\n   718: i32 a1 = a1 + 0\n   720: u64 [sp + 0x38] = a1\n   723: ra = 6, jump @0\n      : @28 [@dyn 3] (gas: 46)\n   728: a1 = reverse s1\n   730: u64 [sp + 0x78] = a1\n   733: a1 = u64 [sp]\n   735: a1 = reverse a1\n   737: u64 [sp + 0x70] = a1\n   740: a1 = u64 [sp + 0x8]\n   743: a1 = reverse a1\n   745: u64 [sp + 0x68] = a1\n   748: a1 = u64 [sp + 0x10]\n   751: a1 = reverse a1\n   753: u64 [sp + 0x60] = a1\n   756: a1 = u64 [sp + 0x18]\n   759: a1 = reverse a1\n   761: u64 [sp + 0x98] = a1\n   765: a1 = u64 [sp + 0x20]\n   768: a1 = reverse a1\n   770: u64 [sp + 0x90] = a1\n   774: a1 = u64 [sp + 0x28]\n   777: a1 = reverse a1\n   779: u64 [sp + 0x88] = a1\n   783: a1 = u64 [sp + 0x30]\n   786: a1 = reverse a1\n   788: u64 [sp + 0x80] = a1\n   792: a1 = u64 [sp + 0x40]\n   795: a1 = reverse a1\n   797: u64 [sp + 0xb8] = a1\n   801: a1 = u64 [sp + 0x48]\n   804: a1 = reverse a1\n   806: u64 [sp + 0xb0] = a1\n   810: a1 = u64 [sp + 0x50]\n   813: a1 = reverse a1\n   815: u64 [sp + 0xa8] = a1\n   819: a1 = u64 [sp + 0x58]\n   822: a1 = reverse a1\n   824: u64 [sp + 0xa0] = a1\n   828: i32 a2 = a0 + 0\n   830: i32 a0 = sp + 0x60\n   833: a1 = 0x3\n   836: a3 = u64 [sp + 0x38]\n   839: ecalli 6 // 'deposit_event'\n   841: sp = s0 + 0xffffffffffffff20\n   845: ra = u64 [sp + 0xd8]\n   849: s0 = u64 [sp + 0xd0]\n   853: s1 = u64 [sp + 0xc8]\n   857: sp = sp + 0xe0\n   861: ret\n      : @29 (gas: 6)\n   863: sp = sp + 0xfffffffffffffff0\n   866: u64 [sp + 0x8] = ra\n   869: u64 [sp] = s0\n   871: s0 = a0 & 0x1\n   874: ecalli 4 // 'call_data_size'\n   876: fallthrough\n      : @30 (gas: 2)\n   877: u32 [0x20064] = a0\n   882: jump @32 if s0 == 0\n      : @31 (gas: 1)\n   885: ra = 8, jump @33\n      : @32 [@dyn 4] (gas: 1)\n   889: ra = 10, jump @44\n      : @33 [@dyn 5] (gas: 9)\n   894: sp = sp + 0xffffffffffffff20\n   898: u64 [sp + 0xd8] = ra\n   902: u64 [sp + 0xd0] = s0\n   906: u64 [sp + 0xc8] = s1\n   910: s0 = sp + 0xe0\n   914: sp = sp & 0xffffffffffffffe0\n   917: a0 = 0x40\n   920: a1 = 0x20\n   923: ra = 12, jump @0\n      : @34 [@dyn 6] (gas: 39)\n   928: u8 [a0 + 31] = 0x80\n   933: u8 [a0 + 30] = 0\n   936: u8 [a0 + 29] = 0\n   939: u8 [a0 + 28] = 0\n   942: u8 [a0 + 27] = 0\n   945: u8 [a0 + 26] = 0\n   948: u8 [a0 + 25] = 0\n   951: u8 [a0 + 24] = 0\n   954: u8 [a0 + 23] = 0\n   957: u8 [a0 + 22] = 0\n   960: u8 [a0 + 21] = 0\n   963: u8 [a0 + 20] = 0\n   966: u8 [a0 + 19] = 0\n   969: u8 [a0 + 18] = 0\n   972: u8 [a0 + 17] = 0\n   975: u8 [a0 + 16] = 0\n   978: u8 [a0 + 15] = 0\n   981: u8 [a0 + 14] = 0\n   984: u8 [a0 + 13] = 0\n   987: u8 [a0 + 12] = 0\n   990: u8 [a0 + 11] = 0\n   993: u8 [a0 + 10] = 0\n   996: u8 [a0 + 9] = 0\n   999: u8 [a0 + 8] = 0\n  1002: u8 [a0 + 7] = 0\n  1005: u8 [a0 + 6] = 0\n  1008: u8 [a0 + 5] = 0\n  1011: u8 [a0 + 4] = 0\n  1014: u8 [a0 + 3] = 0\n  1017: u8 [a0 + 2] = 0\n  1020: u8 [a0 + 1] = 0\n  1023: u8 [a0 + 0] = 0\n  1025: u64 [sp + 56] = 0\n  1028: u64 [sp + 32] = 0\n  1031: u64 [sp + 40] = 0\n  1034: u64 [sp + 48] = 0\n  1037: i32 a0 = sp + 0x20\n  1040: ecalli 16 // 'value_transferred'\n  1042: fallthrough\n      : @35 (gas: 8)\n  1043: a0 = u64 [sp + 0x30]\n  1046: a1 = u64 [sp + 0x38]\n  1049: a2 = u64 [sp + 0x28]\n  1052: a3 = u64 [sp + 0x20]\n  1055: a1 = a1 | a2\n  1058: a0 = a0 | a3\n  1061: a0 = a0 | a1\n  1064: jump @38 if a0 == 0\n      : @36 (gas: 3)\n  1067: a0 = 0\n  1069: a1 = 0\n  1071: ra = 14, jump @0\n      : @37 [@dyn 7] (gas: 5)\n  1076: i32 a1 = a0 + 0\n  1078: a0 = 0x1\n  1081: a2 = 0\n  1083: ecalli 13 // 'seal_return'\n  1085: fallthrough\n      : @38 (gas: 55)\n  1086: i32 a0 = sp + 0x40\n  1089: ecalli 5 // 'caller'\n  1091: a0 = u64 [sp + 0x48]\n  1094: a1 = i32 [sp + 0x50]\n  1097: a2 = u64 [sp + 0x40]\n  1100: a0 = reverse a0\n  1102: a3 = a0 << 0x20\n  1105: a1 = reverse a1\n  1107: a1 = a1 >> 0x20\n  1110: a1 = a1 | a3\n  1113: u64 [sp + 0x18] = a1\n  1116: a0 = a0 >> 0x20\n  1119: s1 = reverse a2\n  1121: a1 = s1 << 0x20\n  1124: a0 = a0 | a1\n  1127: u64 [sp + 0x10] = a0\n  1130: s1 = s1 >> 0x20\n  1133: u64 [sp + 152] = 0\n  1137: u64 [sp + 144] = 0\n  1141: u64 [sp + 136] = 0\n  1145: u64 [sp + 128] = 0\n  1149: u64 [sp + 184] = 0\n  1153: u64 [sp + 176] = 0\n  1157: u64 [sp + 168] = 0\n  1161: u64 [sp + 160] = 0\n  1165: u32 [sp + 96] = 0x20\n  1169: i32 a1 = sp + 0x80\n  1173: i32 a3 = sp + 0xa0\n  1177: i32 a4 = sp + 0x60\n  1180: a2 = 0xffffffffffffffff\n  1183: a0 = 0\n  1185: ecalli 7 // 'get_storage'\n  1187: a0 = u32 [sp + 0xb4]\n  1191: a0 = a0 << 0x20\n  1194: a1 = u64 [sp + 0xb8]\n  1198: a0 = a0 | s1\n  1201: u64 [sp + 152] = 0\n  1205: u64 [sp + 144] = 0\n  1209: u64 [sp + 136] = 0\n  1213: u64 [sp + 128] = 0\n  1217: u64 [sp + 0xb8] = a1\n  1221: u64 [sp + 0xb0] = a0\n  1225: a0 = u64 [sp + 0x10]\n  1228: u64 [sp + 0xa8] = a0\n  1232: a0 = u64 [sp + 0x18]\n  1235: u64 [sp + 0xa0] = a0\n  1239: i32 a1 = sp + 0x80\n  1243: i32 a3 = sp + 0xa0\n  1247: a2 = 0xffffffffffffffff\n  1250: a4 = 0x20\n  1253: a0 = 0\n  1255: ecalli 15 // 'set_storage'\n  1257: a0 = 0x80\n  1261: a1 = 0\n  1263: ra = 16, jump @0\n      : @39 [@dyn 8] (gas: 5)\n  1268: i32 a0 = a0 + 0\n  1270: a1 = 0\n  1272: a2 = 0\n  1274: ecalli 2 // 'call_data_copy'\n  1276: fallthrough\n      : @40 (gas: 2)\n  1277: a1 = i32 [0x20068]\n  1282: jump @42 if a1 == 0\n      : @41 (gas: 4)\n  1285: a0 = 0x30070\n  1290: i32 a0 = a0 + 0\n  1292: ecalli 14 // 'set_immutable_data'\n  1294: fallthrough\n      : @42 (gas: 3)\n  1295: a0 = 0x80\n  1299: a1 = 0\n  1301: ra = 18, jump @0\n      : @43 [@dyn 9] (gas: 6)\n  1306: i32 a1 = a0 + 0\n  1308: a0 = 0\n  1310: a2 = 0\n  1312: ra = 0x14\n  1315: ecalli 13 // 'seal_return'\n  1317: fallthrough\n      : @44 [@dyn 10] (gas: 11)\n  1318: sp = sp + 0xfffffffffffff808\n  1322: u64 [sp + 0x7f0] = ra\n  1326: u64 [sp + 0x7e8] = s0\n  1330: u64 [sp + 0x7e0] = s1\n  1334: s0 = sp + 0x7f8\n  1338: sp = sp + 0xfffffffffffff978\n  1342: sp = sp & 0xffffffffffffffe0\n  1345: s1 = sp\n  1347: a0 = 0x40\n  1350: a1 = 0x20\n  1353: ra = 22, jump @0\n      : @45 [@dyn 11] (gas: 36)\n  1358: u8 [a0 + 31] = 0x80\n  1363: u8 [a0 + 30] = 0\n  1366: u8 [a0 + 29] = 0\n  1369: u8 [a0 + 28] = 0\n  1372: u8 [a0 + 27] = 0\n  1375: u8 [a0 + 26] = 0\n  1378: u8 [a0 + 25] = 0\n  1381: u8 [a0 + 24] = 0\n  1384: u8 [a0 + 23] = 0\n  1387: u8 [a0 + 22] = 0\n  1390: u8 [a0 + 21] = 0\n  1393: u8 [a0 + 20] = 0\n  1396: u8 [a0 + 19] = 0\n  1399: u8 [a0 + 18] = 0\n  1402: u8 [a0 + 17] = 0\n  1405: u8 [a0 + 16] = 0\n  1408: u8 [a0 + 15] = 0\n  1411: u8 [a0 + 14] = 0\n  1414: u8 [a0 + 13] = 0\n  1417: u8 [a0 + 12] = 0\n  1420: u8 [a0 + 11] = 0\n  1423: u8 [a0 + 10] = 0\n  1426: u8 [a0 + 9] = 0\n  1429: u8 [a0 + 8] = 0\n  1432: u8 [a0 + 7] = 0\n  1435: u8 [a0 + 3] = 0\n  1438: a1 = 0x20064\n  1443: u8 [a0 + 2] = 0\n  1446: u8 [a0 + 1] = 0\n  1449: u8 [a0 + 0] = 0\n  1451: u64 [s1 + 0x1d8] = a1\n  1455: a1 = i32 [0x20064]\n  1460: u8 [a0 + 6] = 0\n  1463: u8 [a0 + 5] = 0\n  1466: u8 [a0 + 4] = 0\n  1469: jump @47 if a1 >=u 4\n      : @46 (gas: 1)\n  1473: jump @361\n      : @47 (gas: 5)\n  1476: a0 = s1 + 0x1000\n  1480: i32 a0 = a0 + 0xfffffffffffffb00\n  1484: a1 = 0\n  1486: ecalli 3 // 'call_data_load'\n  1488: fallthrough\n      : @48 (gas: 4)\n  1489: a0 = s1 + 0x7ff\n  1493: a0 = a0 + 0x159\n  1497: a0 = i32 [a0 + 0x1c4]\n  1501: jump @73 if a0 <=s 3963147679\n      : @49 (gas: 1)\n  1509: jump @100 if a0 <=s 1197687789\n      : @50 (gas: 1)\n  1517: jump @52 if a0 != 1197687790\n      : @51 (gas: 1)\n  1524: jump @117\n      : @52 (gas: 1)\n  1527: jump @54 if a0 == 1212404401\n      : @53 (gas: 1)\n  1534: jump @201\n      : @54 (gas: 11)\n  1537: a0 = sp + 0xffffffffffffffe0\n  1540: a0 = a0 & 0xffffffffffffffe0\n  1543: u64 [s1 + 0x1d0] = a0\n  1547: sp = a0\n  1549: u64 [a0 + 24] = 0\n  1552: u64 [a0 + 16] = 0\n  1555: u64 [a0 + 8] = 0\n  1558: u64 [a0 + 0] = 0\n  1560: i32 a0 = a0 + 0\n  1562: ecalli 16 // 'value_transferred'\n  1564: fallthrough\n      : @55 (gas: 9)\n  1565: a3 = u64 [s1 + 0x1d0]\n  1569: a0 = u64 [a3 + 0x10]\n  1572: a1 = u64 [a3 + 0x18]\n  1575: a2 = u64 [a3 + 0x8]\n  1578: a3 = u64 [a3]\n  1580: a1 = a1 | a2\n  1583: a0 = a0 | a3\n  1586: a0 = a0 | a1\n  1589: jump @57 if a0 == 0\n      : @56 (gas: 1)\n  1592: jump @361\n      : @57 (gas: 3)\n  1595: a0 = u64 [s1 + 0x1d8]\n  1599: a0 = i32 [a0]\n  1601: jump @59 if a0 >u 67\n      : @58 (gas: 1)\n  1605: jump @361\n      : @59 (gas: 5)\n  1608: a0 = s1 + 0x1000\n  1612: i32 a0 = a0 + 0xfffffffffffffc00\n  1616: a1 = 0x24\n  1619: ecalli 3 // 'call_data_load'\n  1621: fallthrough\n      : @60 (gas: 14)\n  1622: a2 = s1 + 0x7ff\n  1626: a2 = a2 + 0x159\n  1630: a1 = u64 [a2 + 0x2b8]\n  1634: a3 = u64 [a2 + 0x2c0]\n  1638: a0 = 0x100000000\n  1648: a0 = a0 ^ a1\n  1651: a0 = a0 | a3\n  1654: u64 [s1 + 0x1d8] = a1\n  1658: a1 = a1 >> 0x20\n  1661: a1 = a1 <u 0x1\n  1664: u64 [s1 + 0x1d0] = a3\n  1668: a1 = 0 if a3 != 0\n  1670: a1 = 0 if a0 == 0\n  1672: jump @62 if a1 != 0\n      : @61 (gas: 1)\n  1675: jump @364\n      : @62 (gas: 21)\n  1678: a0 = u64 [a2 + 0x2b0]\n  1682: u64 [s1 + 0x1c0] = a0\n  1686: a0 = u64 [a2 + 0x2a8]\n  1690: u64 [s1 + 0x1c8] = a0\n  1694: a0 = s1 + 0x1000\n  1698: i32 a0 = a0 + 0xfffffffffffffc20\n  1702: a1 = 0x4\n  1705: ecalli 3 // 'call_data_load'\n  1707: a0 = s1 + 0x7ff\n  1711: a0 = a0 + 0x159\n  1715: a1 = u64 [a0 + 0x2c8]\n  1719: u64 [s1 + 0x1b8] = a1\n  1723: a1 = u64 [a0 + 0x2d0]\n  1727: u64 [s1 + 0x1b0] = a1\n  1731: a1 = u64 [a0 + 0x2d8]\n  1735: u64 [s1 + 0x1a8] = a1\n  1739: a0 = u64 [a0 + 0x2e0]\n  1743: u64 [s1 + 0x1a0] = a0\n  1747: a1 = 0x20\n  1750: a0 = 0\n  1752: ra = 24, jump @0\n      : @63 [@dyn 12] (gas: 71)\n  1757: a1 = u64 [s1 + 0x1a0]\n  1761: a1 = reverse a1\n  1763: a2 = u64 [s1 + 0x1a8]\n  1767: a2 = reverse a2\n  1769: a3 = u64 [s1 + 0x1b0]\n  1773: a3 = reverse a3\n  1775: a4 = u64 [s1 + 0x1b8]\n  1779: a4 = reverse a4\n  1781: a5 = a4 >> 0x38\n  1784: u8 [a0 + 0x1f] = a5\n  1787: a5 = a4 >> 0x30\n  1790: u8 [a0 + 0x1e] = a5\n  1793: a5 = a4 >> 0x28\n  1796: u8 [a0 + 0x1d] = a5\n  1799: a5 = a4 >> 0x20\n  1802: u8 [a0 + 0x1c] = a5\n  1805: a5 = a4 >> 0x18\n  1808: u8 [a0 + 0x1b] = a5\n  1811: a5 = a4 >> 0x10\n  1814: u8 [a0 + 0x1a] = a5\n  1817: a5 = a4 >> 0x8\n  1820: u8 [a0 + 0x19] = a5\n  1823: u8 [a0 + 0x18] = a4\n  1826: a4 = a3 >> 0x38\n  1829: u8 [a0 + 0x17] = a4\n  1832: a4 = a3 >> 0x30\n  1835: u8 [a0 + 0x16] = a4\n  1838: a4 = a3 >> 0x28\n  1841: u8 [a0 + 0x15] = a4\n  1844: a4 = a3 >> 0x20\n  1847: u8 [a0 + 0x14] = a4\n  1850: a4 = a3 >> 0x18\n  1853: u8 [a0 + 0x13] = a4\n  1856: a4 = a3 >> 0x10\n  1859: u8 [a0 + 0x12] = a4\n  1862: a4 = a3 >> 0x8\n  1865: u8 [a0 + 0x11] = a4\n  1868: u8 [a0 + 0x10] = a3\n  1871: a3 = a2 >> 0x38\n  1874: u8 [a0 + 0xf] = a3\n  1877: a3 = a2 >> 0x30\n  1880: u8 [a0 + 0xe] = a3\n  1883: a3 = a2 >> 0x28\n  1886: u8 [a0 + 0xd] = a3\n  1889: a3 = a2 >> 0x20\n  1892: u8 [a0 + 0xc] = a3\n  1895: a3 = a2 >> 0x18\n  1898: u8 [a0 + 0xb] = a3\n  1901: a3 = a2 >> 0x10\n  1904: u8 [a0 + 0xa] = a3\n  1907: a3 = a2 >> 0x8\n  1910: u8 [a0 + 0x9] = a3\n  1913: u8 [a0 + 0x8] = a2\n  1916: a2 = a1 >> 0x38\n  1919: u8 [a0 + 0x7] = a2\n  1922: a2 = a1 >> 0x30\n  1925: u8 [a0 + 0x6] = a2\n  1928: a2 = a1 >> 0x28\n  1931: u8 [a0 + 0x5] = a2\n  1934: a2 = a1 >> 0x20\n  1937: u8 [a0 + 0x4] = a2\n  1940: a2 = a1 >> 0x18\n  1943: u8 [a0 + 0x3] = a2\n  1946: a2 = a1 >> 0x10\n  1949: u8 [a0 + 0x2] = a2\n  1952: a2 = a1 >> 0x8\n  1955: u8 [a0 + 0x1] = a2\n  1958: u8 [a0] = a1\n  1960: a0 = 0x20\n  1963: a1 = 0x20\n  1966: ra = 26, jump @0\n      : @64 [@dyn 13] (gas: 35)\n  1971: u8 [a0 + 31] = 0x2\n  1975: u8 [a0 + 30] = 0\n  1978: u8 [a0 + 29] = 0\n  1981: u8 [a0 + 28] = 0\n  1984: u8 [a0 + 27] = 0\n  1987: u8 [a0 + 26] = 0\n  1990: u8 [a0 + 25] = 0\n  1993: u8 [a0 + 24] = 0\n  1996: u8 [a0 + 23] = 0\n  1999: u8 [a0 + 22] = 0\n  2002: u8 [a0 + 21] = 0\n  2005: u8 [a0 + 20] = 0\n  2008: u8 [a0 + 19] = 0\n  2011: u8 [a0 + 18] = 0\n  2014: u8 [a0 + 17] = 0\n  2017: u8 [a0 + 16] = 0\n  2020: u8 [a0 + 15] = 0\n  2023: u8 [a0 + 14] = 0\n  2026: u8 [a0 + 13] = 0\n  2029: u8 [a0 + 12] = 0\n  2032: u8 [a0 + 11] = 0\n  2035: u8 [a0 + 10] = 0\n  2038: u8 [a0 + 9] = 0\n  2041: u8 [a0 + 8] = 0\n  2044: u8 [a0 + 7] = 0\n  2047: u8 [a0 + 6] = 0\n  2050: u8 [a0 + 5] = 0\n  2053: u8 [a0 + 4] = 0\n  2056: u8 [a0 + 3] = 0\n  2059: u8 [a0 + 2] = 0\n  2062: u8 [a0 + 1] = 0\n  2065: u8 [a0 + 0] = 0\n  2067: a1 = 0x40\n  2070: a0 = 0\n  2072: ra = 28, jump @0\n      : @65 [@dyn 14] (gas: 32)\n  2077: a1 = sp + 0xffffffffffffffe0\n  2080: a1 = a1 & 0xffffffffffffffe0\n  2083: u64 [s1 + 0x1b8] = a1\n  2087: sp = a1\n  2089: i32 a0 = a0 + 0\n  2091: i32 a2 = a1 + 0\n  2093: a1 = 0x40\n  2096: ecalli 8 // 'hash_keccak_256'\n  2098: a3 = u64 [s1 + 0x1b8]\n  2102: a0 = u64 [a3]\n  2104: a1 = u64 [a3 + 0x8]\n  2107: a2 = u64 [a3 + 0x10]\n  2110: a3 = u64 [a3 + 0x18]\n  2113: a0 = reverse a0\n  2115: a1 = reverse a1\n  2117: a2 = reverse a2\n  2119: a3 = reverse a3\n  2121: a4 = a3 + 0x7\n  2124: u64 [s1 + 0x1b8] = a4\n  2128: a3 = a4 <u a3\n  2131: a4 = a2 + a3\n  2134: u64 [s1 + 0x1b0] = a4\n  2138: a2 = a4 <u a2\n  2141: a2 = a3 if a3 == 0\n  2144: a2 = a2 + a1\n  2147: u64 [s1 + 0x1a8] = a2\n  2151: a1 = a2 <u a1\n  2154: a0 = a0 + a1\n  2157: u64 [s1 + 0x1a0] = a0\n  2161: a1 = 0x20\n  2164: a0 = 0\n  2166: ra = 30, jump @0\n      : @66 [@dyn 15] (gas: 71)\n  2171: a1 = u64 [s1 + 0x1d0]\n  2175: a1 = reverse a1\n  2177: a2 = u64 [s1 + 0x1d8]\n  2181: a2 = reverse a2\n  2183: a3 = u64 [s1 + 0x1c0]\n  2187: a3 = reverse a3\n  2189: a4 = u64 [s1 + 0x1c8]\n  2193: a4 = reverse a4\n  2195: a5 = a4 >> 0x38\n  2198: u8 [a0 + 0x1f] = a5\n  2201: a5 = a4 >> 0x30\n  2204: u8 [a0 + 0x1e] = a5\n  2207: a5 = a4 >> 0x28\n  2210: u8 [a0 + 0x1d] = a5\n  2213: a5 = a4 >> 0x20\n  2216: u8 [a0 + 0x1c] = a5\n  2219: a5 = a4 >> 0x18\n  2222: u8 [a0 + 0x1b] = a5\n  2225: a5 = a4 >> 0x10\n  2228: u8 [a0 + 0x1a] = a5\n  2231: a5 = a4 >> 0x8\n  2234: u8 [a0 + 0x19] = a5\n  2237: u8 [a0 + 0x18] = a4\n  2240: a4 = a3 >> 0x38\n  2243: u8 [a0 + 0x17] = a4\n  2246: a4 = a3 >> 0x30\n  2249: u8 [a0 + 0x16] = a4\n  2252: a4 = a3 >> 0x28\n  2255: u8 [a0 + 0x15] = a4\n  2258: a4 = a3 >> 0x20\n  2261: u8 [a0 + 0x14] = a4\n  2264: a4 = a3 >> 0x18\n  2267: u8 [a0 + 0x13] = a4\n  2270: a4 = a3 >> 0x10\n  2273: u8 [a0 + 0x12] = a4\n  2276: a4 = a3 >> 0x8\n  2279: u8 [a0 + 0x11] = a4\n  2282: u8 [a0 + 0x10] = a3\n  2285: a3 = a2 >> 0x38\n  2288: u8 [a0 + 0xf] = a3\n  2291: a3 = a2 >> 0x30\n  2294: u8 [a0 + 0xe] = a3\n  2297: a3 = a2 >> 0x28\n  2300: u8 [a0 + 0xd] = a3\n  2303: a3 = a2 >> 0x20\n  2306: u8 [a0 + 0xc] = a3\n  2309: a3 = a2 >> 0x18\n  2312: u8 [a0 + 0xb] = a3\n  2315: a3 = a2 >> 0x10\n  2318: u8 [a0 + 0xa] = a3\n  2321: a3 = a2 >> 0x8\n  2324: u8 [a0 + 0x9] = a3\n  2327: u8 [a0 + 0x8] = a2\n  2330: a2 = a1 >> 0x38\n  2333: u8 [a0 + 0x7] = a2\n  2336: a2 = a1 >> 0x30\n  2339: u8 [a0 + 0x6] = a2\n  2342: a2 = a1 >> 0x28\n  2345: u8 [a0 + 0x5] = a2\n  2348: a2 = a1 >> 0x20\n  2351: u8 [a0 + 0x4] = a2\n  2354: a2 = a1 >> 0x18\n  2357: u8 [a0 + 0x3] = a2\n  2360: a2 = a1 >> 0x10\n  2363: u8 [a0 + 0x2] = a2\n  2366: a2 = a1 >> 0x8\n  2369: u8 [a0 + 0x1] = a2\n  2372: u8 [a0] = a1\n  2374: a0 = 0x20\n  2377: a1 = 0x20\n  2380: ra = 32, jump @0\n      : @67 [@dyn 16] (gas: 71)\n  2385: a1 = u64 [s1 + 0x1a0]\n  2389: a1 = reverse a1\n  2391: a2 = u64 [s1 + 0x1a8]\n  2395: a2 = reverse a2\n  2397: a3 = u64 [s1 + 0x1b0]\n  2401: a3 = reverse a3\n  2403: a4 = u64 [s1 + 0x1b8]\n  2407: a4 = reverse a4\n  2409: a5 = a4 >> 0x38\n  2412: u8 [a0 + 0x1f] = a5\n  2415: a5 = a4 >> 0x30\n  2418: u8 [a0 + 0x1e] = a5\n  2421: a5 = a4 >> 0x28\n  2424: u8 [a0 + 0x1d] = a5\n  2427: a5 = a4 >> 0x20\n  2430: u8 [a0 + 0x1c] = a5\n  2433: a5 = a4 >> 0x18\n  2436: u8 [a0 + 0x1b] = a5\n  2439: a5 = a4 >> 0x10\n  2442: u8 [a0 + 0x1a] = a5\n  2445: a5 = a4 >> 0x8\n  2448: u8 [a0 + 0x19] = a5\n  2451: u8 [a0 + 0x18] = a4\n  2454: u8 [a0 + 0x10] = a3\n  2457: a4 = a3 >> 0x38\n  2460: u8 [a0 + 0x17] = a4\n  2463: a4 = a3 >> 0x30\n  2466: u8 [a0 + 0x16] = a4\n  2469: a4 = a3 >> 0x28\n  2472: u8 [a0 + 0x15] = a4\n  2475: a4 = a3 >> 0x20\n  2478: u8 [a0 + 0x14] = a4\n  2481: a4 = a3 >> 0x18\n  2484: u8 [a0 + 0x13] = a4\n  2487: a4 = a3 >> 0x10\n  2490: u8 [a0 + 0x12] = a4\n  2493: a3 = a3 >> 0x8\n  2496: u8 [a0 + 0x11] = a3\n  2499: u8 [a0 + 0x8] = a2\n  2502: a3 = a2 >> 0x38\n  2505: u8 [a0 + 0xf] = a3\n  2508: a3 = a2 >> 0x30\n  2511: u8 [a0 + 0xe] = a3\n  2514: a3 = a2 >> 0x28\n  2517: u8 [a0 + 0xd] = a3\n  2520: a3 = a2 >> 0x20\n  2523: u8 [a0 + 0xc] = a3\n  2526: a3 = a2 >> 0x18\n  2529: u8 [a0 + 0xb] = a3\n  2532: a3 = a2 >> 0x10\n  2535: u8 [a0 + 0xa] = a3\n  2538: a2 = a2 >> 0x8\n  2541: u8 [a0 + 0x9] = a2\n  2544: u8 [a0] = a1\n  2546: a2 = a1 >> 0x38\n  2549: u8 [a0 + 0x7] = a2\n  2552: a2 = a1 >> 0x30\n  2555: u8 [a0 + 0x6] = a2\n  2558: a2 = a1 >> 0x28\n  2561: u8 [a0 + 0x5] = a2\n  2564: a2 = a1 >> 0x20\n  2567: u8 [a0 + 0x4] = a2\n  2570: a2 = a1 >> 0x18\n  2573: u8 [a0 + 0x3] = a2\n  2576: a2 = a1 >> 0x10\n  2579: u8 [a0 + 0x2] = a2\n  2582: a1 = a1 >> 0x8\n  2585: u8 [a0 + 0x1] = a1\n  2588: a1 = 0x40\n  2591: a0 = 0\n  2593: ra = 34, jump @0\n      : @68 [@dyn 17] (gas: 44)\n  2598: a1 = sp + 0xffffffffffffffe0\n  2601: a1 = a1 & 0xffffffffffffffe0\n  2604: u64 [s1 + 0x1d8] = a1\n  2608: sp = a1\n  2610: i32 a0 = a0 + 0\n  2612: i32 a2 = a1 + 0\n  2614: a1 = 0x40\n  2617: ecalli 8 // 'hash_keccak_256'\n  2619: a3 = u64 [s1 + 0x1d8]\n  2623: a0 = u64 [a3 + 0x18]\n  2626: a1 = u64 [a3 + 0x10]\n  2629: a2 = u64 [a3 + 0x8]\n  2632: a3 = u64 [a3]\n  2634: a0 = reverse a0\n  2636: a1 = reverse a1\n  2638: a2 = reverse a2\n  2640: a3 = reverse a3\n  2642: a4 = s1 + 0x7ff\n  2646: a4 = a4 + 0x159\n  2650: u64 [a4 + 0x4c0] = a3\n  2654: u64 [a4 + 0x4b8] = a2\n  2658: u64 [a4 + 0x4b0] = a1\n  2662: u64 [a4 + 0x4a8] = a0\n  2666: u64 [a4 + 1248] = 0\n  2670: u64 [a4 + 1240] = 0\n  2674: u64 [a4 + 1232] = 0\n  2678: u64 [a4 + 1224] = 0\n  2682: u32 [a4 + 1256] = 0x20\n  2687: a0 = s1 + 0x1000\n  2691: i32 a1 = a0 + 0xfffffffffffffe00\n  2695: a0 = s1 + 0x1000\n  2699: i32 a3 = a0 + 0xfffffffffffffe20\n  2703: a0 = s1 + 0x1000\n  2707: i32 a4 = a0 + 0xfffffffffffffe40\n  2711: a2 = 0xffffffffffffffff\n  2714: a0 = 0\n  2716: ecalli 7 // 'get_storage'\n  2718: a0 = s1 + 0x7ff\n  2722: a0 = a0 + 0x159\n  2726: a0 = u64 [a0 + 0x4c8]\n  2730: u64 [s1 + 0x1d8] = a0\n  2734: a0 = 0x40\n  2737: a1 = 0x20\n  2740: ra = 36, jump @0\n      : @69 [@dyn 18] (gas: 100)\n  2745: a1 = u8 [a0 + 0x11]\n  2748: a2 = u8 [a0 + 0x10]\n  2751: a3 = u8 [a0 + 0x12]\n  2754: a4 = u8 [a0 + 0x13]\n  2757: a1 = a1 << 0x8\n  2760: a1 = a1 | a2\n  2763: a3 = a3 << 0x10\n  2766: a4 = a4 << 0x18\n  2769: a3 = a3 | a4\n  2772: a1 = a1 | a3\n  2775: a2 = u8 [a0 + 0x15]\n  2778: a3 = u8 [a0 + 0x14]\n  2781: a4 = u8 [a0 + 0x16]\n  2784: a5 = u8 [a0 + 0x17]\n  2787: a2 = a2 << 0x8\n  2790: a2 = a2 | a3\n  2793: a4 = a4 << 0x10\n  2796: a5 = a5 << 0x18\n  2799: a4 = a4 | a5\n  2802: a2 = a2 | a4\n  2805: a2 = a2 << 0x20\n  2808: t0 = a2 | a1\n  2811: a2 = u8 [a0 + 0x1]\n  2814: a3 = u8 [a0]\n  2816: a4 = u8 [a0 + 0x2]\n  2819: a5 = u8 [a0 + 0x3]\n  2822: a2 = a2 << 0x8\n  2825: a2 = a2 | a3\n  2828: a4 = a4 << 0x10\n  2831: a5 = a5 << 0x18\n  2834: a4 = a4 | a5\n  2837: a2 = a2 | a4\n  2840: a3 = u8 [a0 + 0x5]\n  2843: a4 = u8 [a0 + 0x4]\n  2846: a5 = u8 [a0 + 0x6]\n  2849: a1 = u8 [a0 + 0x7]\n  2852: a3 = a3 << 0x8\n  2855: a3 = a3 | a4\n  2858: a5 = a5 << 0x10\n  2861: a1 = a1 << 0x18\n  2864: a1 = a1 | a5\n  2867: a1 = a1 | a3\n  2870: a1 = a1 << 0x20\n  2873: t1 = a1 | a2\n  2876: a1 = u8 [a0 + 0x19]\n  2879: a3 = u8 [a0 + 0x18]\n  2882: a4 = u8 [a0 + 0x1a]\n  2885: a5 = u8 [a0 + 0x1b]\n  2888: a1 = a1 << 0x8\n  2891: a1 = a1 | a3\n  2894: a4 = a4 << 0x10\n  2897: a5 = a5 << 0x18\n  2900: a4 = a4 | a5\n  2903: a1 = a1 | a4\n  2906: a3 = u8 [a0 + 0x1d]\n  2909: a4 = u8 [a0 + 0x1c]\n  2912: a5 = u8 [a0 + 0x1e]\n  2915: a2 = u8 [a0 + 0x1f]\n  2918: a3 = a3 << 0x8\n  2921: a3 = a3 | a4\n  2924: a5 = a5 << 0x10\n  2927: a2 = a2 << 0x18\n  2930: a2 = a2 | a5\n  2933: a2 = a2 | a3\n  2936: a2 = a2 << 0x20\n  2939: a3 = a2 | a1\n  2942: a1 = u8 [a0 + 0x9]\n  2945: a2 = u8 [a0 + 0x8]\n  2948: a4 = u8 [a0 + 0xa]\n  2951: a5 = u8 [a0 + 0xb]\n  2954: a1 = a1 << 0x8\n  2957: a1 = a1 | a2\n  2960: a4 = a4 << 0x10\n  2963: a5 = a5 << 0x18\n  2966: a4 = a4 | a5\n  2969: a1 = a1 | a4\n  2972: a2 = u8 [a0 + 0xd]\n  2975: a4 = u8 [a0 + 0xc]\n  2978: a5 = u8 [a0 + 0xe]\n  2981: a0 = u8 [a0 + 0xf]\n  2984: a2 = a2 << 0x8\n  2987: a2 = a2 | a4\n  2990: a5 = a5 << 0x10\n  2993: a0 = a0 << 0x18\n  2996: a0 = a0 | a5\n  2999: a0 = a0 | a2\n  3002: a0 = a0 << 0x20\n  3005: a0 = a0 | a1\n  3008: a1 = reverse a0\n  3010: a0 = reverse a3\n  3012: a2 = reverse t1\n  3014: a3 = reverse t0\n  3016: a2 = a2 | a3\n  3019: a3 = a0 | a1\n  3022: a3 = a3 | a2\n  3025: a3 = a3 >> 0x20\n  3028: a1 = a1 | a2\n  3031: a1 = a1 << 0x20\n  3034: a1 = a1 | a3\n  3037: jump @71 if a1 == 0\n      : @70 (gas: 1)\n  3040: jump @256\n      : @71 (gas: 7)\n  3043: a1 = u8 [s1 + 0x1d8]\n  3047: a1 = a1 >u 0\n  3049: u64 [s1 + 0x1d0] = a1\n  3053: i32 a0 = a0 + 0\n  3055: u64 [s1 + 0x1d8] = a0\n  3059: a1 = 0x20\n  3062: ra = 38, jump @0\n      : @72 [@dyn 19] (gas: 37)\n  3067: a1 = u64 [s1 + 0x1d0]\n  3071: u8 [a0 + 0x1f] = a1\n  3074: u8 [a0 + 30] = 0\n  3077: u8 [a0 + 29] = 0\n  3080: u8 [a0 + 28] = 0\n  3083: u8 [a0 + 27] = 0\n  3086: u8 [a0 + 26] = 0\n  3089: u8 [a0 + 25] = 0\n  3092: u8 [a0 + 24] = 0\n  3095: u8 [a0 + 23] = 0\n  3098: u8 [a0 + 22] = 0\n  3101: u8 [a0 + 21] = 0\n  3104: u8 [a0 + 20] = 0\n  3107: u8 [a0 + 19] = 0\n  3110: u8 [a0 + 18] = 0\n  3113: u8 [a0 + 17] = 0\n  3116: u8 [a0 + 16] = 0\n  3119: u8 [a0 + 15] = 0\n  3122: u8 [a0 + 14] = 0\n  3125: u8 [a0 + 13] = 0\n  3128: u8 [a0 + 12] = 0\n  3131: u8 [a0 + 11] = 0\n  3134: u8 [a0 + 10] = 0\n  3137: u8 [a0 + 9] = 0\n  3140: u8 [a0 + 8] = 0\n  3143: u8 [a0 + 7] = 0\n  3146: u8 [a0 + 6] = 0\n  3149: u8 [a0 + 5] = 0\n  3152: u8 [a0 + 4] = 0\n  3155: u8 [a0 + 3] = 0\n  3158: u8 [a0 + 2] = 0\n  3161: u8 [a0 + 1] = 0\n  3164: u8 [a0 + 0] = 0\n  3166: a1 = 0x20\n  3169: a0 = u64 [s1 + 0x1d8]\n  3173: ra = 0x30\n  3176: jump @0\n      : @73 (gas: 1)\n  3179: jump @87 if a0 >s 3655634779\n      : @74 (gas: 1)\n  3187: jump @89 if a0 == 2677903418\n      : @75 (gas: 1)\n  3195: jump @77 if a0 == 3462426336\n      : @76 (gas: 1)\n  3202: jump @361\n      : @77 (gas: 11)\n  3205: a0 = sp + 0xffffffffffffffe0\n  3208: a0 = a0 & 0xffffffffffffffe0\n  3211: u64 [s1 + 0x1d0] = a0\n  3215: sp = a0\n  3217: u64 [a0 + 24] = 0\n  3220: u64 [a0 + 16] = 0\n  3223: u64 [a0 + 8] = 0\n  3226: u64 [a0 + 0] = 0\n  3228: i32 a0 = a0 + 0\n  3230: ecalli 16 // 'value_transferred'\n  3232: fallthrough\n      : @78 (gas: 9)\n  3233: a3 = u64 [s1 + 0x1d0]\n  3237: a0 = u64 [a3 + 0x10]\n  3240: a1 = u64 [a3 + 0x18]\n  3243: a2 = u64 [a3 + 0x8]\n  3246: a3 = u64 [a3]\n  3248: a1 = a1 | a2\n  3251: a0 = a0 | a3\n  3254: a0 = a0 | a1\n  3257: jump @80 if a0 == 0\n      : @79 (gas: 1)\n  3260: jump @361\n      : @80 (gas: 5)\n  3263: a0 = u64 [s1 + 0x1d8]\n  3267: a0 = i32 [a0]\n  3269: a2 = s1 + 0x7ff\n  3273: a2 = a2 + 0x159\n  3277: jump @82 if a0 >u 3\n      : @81 (gas: 1)\n  3281: jump @361\n      : @82 (gas: 29)\n  3284: u64 [a2 + 1216] = 0\n  3288: u64 [a2 + 1208] = 0\n  3292: u64 [a2 + 1200] = 0\n  3296: u64 [a2 + 1192] = 0\n  3300: u64 [a2 + 1248] = 0\n  3304: u64 [a2 + 1240] = 0\n  3308: u64 [a2 + 1232] = 0\n  3312: u64 [a2 + 1224] = 0\n  3316: u32 [a2 + 1256] = 0x20\n  3321: a0 = s1 + 0x1000\n  3325: i32 a1 = a0 + 0xfffffffffffffe00\n  3329: a0 = s1 + 0x1000\n  3333: i32 a3 = a0 + 0xfffffffffffffe20\n  3337: a0 = s1 + 0x1000\n  3341: i32 a4 = a0 + 0xfffffffffffffe40\n  3345: a2 = 0xffffffffffffffff\n  3348: a0 = 0\n  3350: ecalli 7 // 'get_storage'\n  3352: a1 = s1 + 0x7ff\n  3356: a1 = a1 + 0x159\n  3360: a0 = u64 [a1 + 0x4d8]\n  3364: u64 [s1 + 0x1c8] = a0\n  3368: a0 = u64 [a1 + 0x4d0]\n  3372: u64 [s1 + 0x1d0] = a0\n  3376: a0 = u64 [a1 + 0x4c8]\n  3380: u64 [s1 + 0x1d8] = a0\n  3384: a0 = 0x40\n  3387: a1 = 0x20\n  3390: ra = 40, jump @0\n      : @83 [@dyn 20] (gas: 100)\n  3395: a1 = u8 [a0 + 0x11]\n  3398: a2 = u8 [a0 + 0x10]\n  3401: a3 = u8 [a0 + 0x12]\n  3404: a4 = u8 [a0 + 0x13]\n  3407: a1 = a1 << 0x8\n  3410: a1 = a1 | a2\n  3413: a3 = a3 << 0x10\n  3416: a4 = a4 << 0x18\n  3419: a3 = a3 | a4\n  3422: a1 = a1 | a3\n  3425: a2 = u8 [a0 + 0x15]\n  3428: a3 = u8 [a0 + 0x14]\n  3431: a4 = u8 [a0 + 0x16]\n  3434: a5 = u8 [a0 + 0x17]\n  3437: a2 = a2 << 0x8\n  3440: a2 = a2 | a3\n  3443: a4 = a4 << 0x10\n  3446: a5 = a5 << 0x18\n  3449: a4 = a4 | a5\n  3452: a2 = a2 | a4\n  3455: a2 = a2 << 0x20\n  3458: t0 = a2 | a1\n  3461: a2 = u8 [a0 + 0x1]\n  3464: a3 = u8 [a0]\n  3466: a4 = u8 [a0 + 0x2]\n  3469: a5 = u8 [a0 + 0x3]\n  3472: a2 = a2 << 0x8\n  3475: a2 = a2 | a3\n  3478: a4 = a4 << 0x10\n  3481: a5 = a5 << 0x18\n  3484: a4 = a4 | a5\n  3487: a2 = a2 | a4\n  3490: a3 = u8 [a0 + 0x5]\n  3493: a4 = u8 [a0 + 0x4]\n  3496: a5 = u8 [a0 + 0x6]\n  3499: a1 = u8 [a0 + 0x7]\n  3502: a3 = a3 << 0x8\n  3505: a3 = a3 | a4\n  3508: a5 = a5 << 0x10\n  3511: a1 = a1 << 0x18\n  3514: a1 = a1 | a5\n  3517: a1 = a1 | a3\n  3520: a1 = a1 << 0x20\n  3523: t1 = a1 | a2\n  3526: a1 = u8 [a0 + 0x19]\n  3529: a3 = u8 [a0 + 0x18]\n  3532: a4 = u8 [a0 + 0x1a]\n  3535: a5 = u8 [a0 + 0x1b]\n  3538: a1 = a1 << 0x8\n  3541: a1 = a1 | a3\n  3544: a4 = a4 << 0x10\n  3547: a5 = a5 << 0x18\n  3550: a4 = a4 | a5\n  3553: a1 = a1 | a4\n  3556: a3 = u8 [a0 + 0x1d]\n  3559: a4 = u8 [a0 + 0x1c]\n  3562: a5 = u8 [a0 + 0x1e]\n  3565: a2 = u8 [a0 + 0x1f]\n  3568: a3 = a3 << 0x8\n  3571: a3 = a3 | a4\n  3574: a5 = a5 << 0x10\n  3577: a2 = a2 << 0x18\n  3580: a2 = a2 | a5\n  3583: a2 = a2 | a3\n  3586: a2 = a2 << 0x20\n  3589: a3 = a2 | a1\n  3592: a1 = u8 [a0 + 0x9]\n  3595: a2 = u8 [a0 + 0x8]\n  3598: a4 = u8 [a0 + 0xa]\n  3601: a5 = u8 [a0 + 0xb]\n  3604: a1 = a1 << 0x8\n  3607: a1 = a1 | a2\n  3610: a4 = a4 << 0x10\n  3613: a5 = a5 << 0x18\n  3616: a4 = a4 | a5\n  3619: a1 = a1 | a4\n  3622: a2 = u8 [a0 + 0xd]\n  3625: a4 = u8 [a0 + 0xc]\n  3628: a5 = u8 [a0 + 0xe]\n  3631: a0 = u8 [a0 + 0xf]\n  3634: a2 = a2 << 0x8\n  3637: a2 = a2 | a4\n  3640: a5 = a5 << 0x10\n  3643: a0 = a0 << 0x18\n  3646: a0 = a0 | a5\n  3649: a0 = a0 | a2\n  3652: a0 = a0 << 0x20\n  3655: a0 = a0 | a1\n  3658: a1 = reverse a0\n  3660: a0 = reverse a3\n  3662: a2 = reverse t1\n  3664: a3 = reverse t0\n  3666: a2 = a2 | a3\n  3669: a3 = a0 | a1\n  3672: a3 = a3 | a2\n  3675: a3 = a3 >> 0x20\n  3678: a1 = a1 | a2\n  3681: a1 = a1 << 0x20\n  3684: a1 = a1 | a3\n  3687: jump @85 if a1 == 0\n      : @84 (gas: 1)\n  3690: jump @256\n      : @85 (gas: 8)\n  3693: a1 = u64 [s1 + 0x1c8]\n  3697: a1 = a1 << 0x20\n  3700: a1 = a1 >> 0x20\n  3703: u64 [s1 + 0x1c0] = a1\n  3707: i32 a0 = a0 + 0\n  3709: u64 [s1 + 0x1c8] = a0\n  3713: a1 = 0x20\n  3716: ra = 42, jump @0\n      : @86 [@dyn 21] (gas: 60)\n  3721: a1 = u64 [s1 + 0x1c0]\n  3725: a1 = reverse a1\n  3727: a2 = u64 [s1 + 0x1d0]\n  3731: a2 = reverse a2\n  3733: a3 = u64 [s1 + 0x1d8]\n  3737: a3 = reverse a3\n  3739: a4 = a3 >> 0x38\n  3742: u8 [a0 + 0x1f] = a4\n  3745: a4 = a3 >> 0x30\n  3748: u8 [a0 + 0x1e] = a4\n  3751: a4 = a3 >> 0x28\n  3754: u8 [a0 + 0x1d] = a4\n  3757: a4 = a3 >> 0x20\n  3760: u8 [a0 + 0x1c] = a4\n  3763: a4 = a3 >> 0x18\n  3766: u8 [a0 + 0x1b] = a4\n  3769: a4 = a3 >> 0x10\n  3772: u8 [a0 + 0x1a] = a4\n  3775: a4 = a3 >> 0x8\n  3778: u8 [a0 + 0x19] = a4\n  3781: u8 [a0 + 0x18] = a3\n  3784: u8 [a0 + 0x10] = a2\n  3787: u8 [a0 + 11] = 0\n  3790: u8 [a0 + 10] = 0\n  3793: u8 [a0 + 9] = 0\n  3796: u8 [a0 + 7] = 0\n  3799: u8 [a0 + 6] = 0\n  3802: u8 [a0 + 5] = 0\n  3805: u8 [a0 + 4] = 0\n  3808: u8 [a0 + 3] = 0\n  3811: u8 [a0 + 2] = 0\n  3814: u8 [a0 + 1] = 0\n  3817: u8 [a0 + 0] = 0\n  3819: a3 = a2 >> 0x38\n  3822: u8 [a0 + 0x17] = a3\n  3825: a3 = a2 >> 0x30\n  3828: u8 [a0 + 0x16] = a3\n  3831: a3 = a2 >> 0x28\n  3834: u8 [a0 + 0x15] = a3\n  3837: a3 = a2 >> 0x20\n  3840: u8 [a0 + 0x14] = a3\n  3843: a3 = a2 >> 0x18\n  3846: u8 [a0 + 0x13] = a3\n  3849: a3 = a2 >> 0x10\n  3852: u8 [a0 + 0x12] = a3\n  3855: a2 = a2 >> 0x8\n  3858: u8 [a0 + 0x11] = a2\n  3861: u8 [a0 + 0x8] = a1\n  3864: a2 = a1 >> 0x38\n  3867: u8 [a0 + 0xf] = a2\n  3870: a2 = a1 >> 0x30\n  3873: u8 [a0 + 0xe] = a2\n  3876: a2 = a1 >> 0x28\n  3879: u8 [a0 + 0xd] = a2\n  3882: a1 = a1 >> 0x20\n  3885: u8 [a0 + 0xc] = a1\n  3888: a1 = 0x20\n  3891: a0 = u64 [s1 + 0x1c8]\n  3895: ra = 0x30\n  3898: jump @0\n      : @87 (gas: 1)\n  3901: jump @89 if a0 == 3655634780\n      : @88 (gas: 1)\n  3908: jump @141\n      : @89 (gas: 11)\n  3911: a0 = sp + 0xffffffffffffffe0\n  3914: a0 = a0 & 0xffffffffffffffe0\n  3917: u64 [s1 + 0x1d0] = a0\n  3921: sp = a0\n  3923: u64 [a0 + 24] = 0\n  3926: u64 [a0 + 16] = 0\n  3929: u64 [a0 + 8] = 0\n  3932: u64 [a0 + 0] = 0\n  3934: i32 a0 = a0 + 0\n  3936: ecalli 16 // 'value_transferred'\n  3938: fallthrough\n      : @90 (gas: 9)\n  3939: a3 = u64 [s1 + 0x1d0]\n  3943: a0 = u64 [a3 + 0x10]\n  3946: a1 = u64 [a3 + 0x18]\n  3949: a2 = u64 [a3 + 0x8]\n  3952: a3 = u64 [a3]\n  3954: a1 = a1 | a2\n  3957: a0 = a0 | a3\n  3960: a0 = a0 | a1\n  3963: jump @92 if a0 == 0\n      : @91 (gas: 1)\n  3966: jump @361\n      : @92 (gas: 5)\n  3969: a0 = u64 [s1 + 0x1d8]\n  3973: a0 = i32 [a0]\n  3975: a2 = s1 + 0x7ff\n  3979: a2 = a2 + 0x159\n  3983: jump @94 if a0 >u 3\n      : @93 (gas: 1)\n  3987: jump @361\n      : @94 (gas: 31)\n  3990: u64 [a2 + 1216] = 0\n  3994: u64 [a2 + 1208] = 0\n  3998: u64 [a2 + 1200] = 0\n  4002: u64 [a2 + 1192] = 0x1\n  4007: u64 [a2 + 1248] = 0\n  4011: u64 [a2 + 1240] = 0\n  4015: u64 [a2 + 1232] = 0\n  4019: u64 [a2 + 1224] = 0\n  4023: u32 [a2 + 1256] = 0x20\n  4028: a0 = s1 + 0x1000\n  4032: i32 a1 = a0 + 0xfffffffffffffe00\n  4036: a0 = s1 + 0x1000\n  4040: i32 a3 = a0 + 0xfffffffffffffe20\n  4044: a0 = s1 + 0x1000\n  4048: i32 a4 = a0 + 0xfffffffffffffe40\n  4052: a2 = 0xffffffffffffffff\n  4055: a0 = 0\n  4057: ecalli 7 // 'get_storage'\n  4059: a1 = s1 + 0x7ff\n  4063: a1 = a1 + 0x159\n  4067: a0 = u64 [a1 + 0x4e0]\n  4071: u64 [s1 + 0x1c0] = a0\n  4075: a0 = u64 [a1 + 0x4d8]\n  4079: u64 [s1 + 0x1c8] = a0\n  4083: a0 = u64 [a1 + 0x4d0]\n  4087: u64 [s1 + 0x1d0] = a0\n  4091: a0 = u64 [a1 + 0x4c8]\n  4095: u64 [s1 + 0x1d8] = a0\n  4099: a0 = 0x40\n  4102: a1 = 0x20\n  4105: ra = 44, jump @0\n      : @95 [@dyn 22] (gas: 100)\n  4110: a1 = u8 [a0 + 0x11]\n  4113: a2 = u8 [a0 + 0x10]\n  4116: a3 = u8 [a0 + 0x12]\n  4119: a4 = u8 [a0 + 0x13]\n  4122: a1 = a1 << 0x8\n  4125: a1 = a1 | a2\n  4128: a3 = a3 << 0x10\n  4131: a4 = a4 << 0x18\n  4134: a3 = a3 | a4\n  4137: a1 = a1 | a3\n  4140: a2 = u8 [a0 + 0x15]\n  4143: a3 = u8 [a0 + 0x14]\n  4146: a4 = u8 [a0 + 0x16]\n  4149: a5 = u8 [a0 + 0x17]\n  4152: a2 = a2 << 0x8\n  4155: a2 = a2 | a3\n  4158: a4 = a4 << 0x10\n  4161: a5 = a5 << 0x18\n  4164: a4 = a4 | a5\n  4167: a2 = a2 | a4\n  4170: a2 = a2 << 0x20\n  4173: t0 = a2 | a1\n  4176: a2 = u8 [a0 + 0x1]\n  4179: a3 = u8 [a0]\n  4181: a4 = u8 [a0 + 0x2]\n  4184: a5 = u8 [a0 + 0x3]\n  4187: a2 = a2 << 0x8\n  4190: a2 = a2 | a3\n  4193: a4 = a4 << 0x10\n  4196: a5 = a5 << 0x18\n  4199: a4 = a4 | a5\n  4202: a2 = a2 | a4\n  4205: a3 = u8 [a0 + 0x5]\n  4208: a4 = u8 [a0 + 0x4]\n  4211: a5 = u8 [a0 + 0x6]\n  4214: a1 = u8 [a0 + 0x7]\n  4217: a3 = a3 << 0x8\n  4220: a3 = a3 | a4\n  4223: a5 = a5 << 0x10\n  4226: a1 = a1 << 0x18\n  4229: a1 = a1 | a5\n  4232: a1 = a1 | a3\n  4235: a1 = a1 << 0x20\n  4238: t1 = a1 | a2\n  4241: a1 = u8 [a0 + 0x19]\n  4244: a3 = u8 [a0 + 0x18]\n  4247: a4 = u8 [a0 + 0x1a]\n  4250: a5 = u8 [a0 + 0x1b]\n  4253: a1 = a1 << 0x8\n  4256: a1 = a1 | a3\n  4259: a4 = a4 << 0x10\n  4262: a5 = a5 << 0x18\n  4265: a4 = a4 | a5\n  4268: a1 = a1 | a4\n  4271: a3 = u8 [a0 + 0x1d]\n  4274: a4 = u8 [a0 + 0x1c]\n  4277: a5 = u8 [a0 + 0x1e]\n  4280: a2 = u8 [a0 + 0x1f]\n  4283: a3 = a3 << 0x8\n  4286: a3 = a3 | a4\n  4289: a5 = a5 << 0x10\n  4292: a2 = a2 << 0x18\n  4295: a2 = a2 | a5\n  4298: a2 = a2 | a3\n  4301: a2 = a2 << 0x20\n  4304: a3 = a2 | a1\n  4307: a1 = u8 [a0 + 0x9]\n  4310: a2 = u8 [a0 + 0x8]\n  4313: a4 = u8 [a0 + 0xa]\n  4316: a5 = u8 [a0 + 0xb]\n  4319: a1 = a1 << 0x8\n  4322: a1 = a1 | a2\n  4325: a4 = a4 << 0x10\n  4328: a5 = a5 << 0x18\n  4331: a4 = a4 | a5\n  4334: a1 = a1 | a4\n  4337: a2 = u8 [a0 + 0xd]\n  4340: a4 = u8 [a0 + 0xc]\n  4343: a5 = u8 [a0 + 0xe]\n  4346: a0 = u8 [a0 + 0xf]\n  4349: a2 = a2 << 0x8\n  4352: a2 = a2 | a4\n  4355: a5 = a5 << 0x10\n  4358: a0 = a0 << 0x18\n  4361: a0 = a0 | a5\n  4364: a0 = a0 | a2\n  4367: a0 = a0 << 0x20\n  4370: a0 = a0 | a1\n  4373: a1 = reverse a0\n  4375: a0 = reverse a3\n  4377: a2 = reverse t1\n  4379: a3 = reverse t0\n  4381: a2 = a2 | a3\n  4384: a3 = a0 | a1\n  4387: a3 = a3 | a2\n  4390: a3 = a3 >> 0x20\n  4393: a1 = a1 | a2\n  4396: a1 = a1 << 0x20\n  4399: a1 = a1 | a3\n  4402: jump @97 if a1 == 0\n      : @96 (gas: 1)\n  4405: jump @256\n      : @97 (gas: 4)\n  4408: i32 a0 = a0 + 0\n  4410: u64 [s1 + 0x1b8] = a0\n  4414: a1 = 0x20\n  4417: ra = 46, jump @0\n      : @98 [@dyn 23] (gas: 71)\n  4422: a1 = u64 [s1 + 0x1c0]\n  4426: a1 = reverse a1\n  4428: a2 = u64 [s1 + 0x1c8]\n  4432: a2 = reverse a2\n  4434: a3 = u64 [s1 + 0x1d0]\n  4438: a3 = reverse a3\n  4440: a4 = u64 [s1 + 0x1d8]\n  4444: a4 = reverse a4\n  4446: a5 = a4 >> 0x38\n  4449: u8 [a0 + 0x1f] = a5\n  4452: a5 = a4 >> 0x30\n  4455: u8 [a0 + 0x1e] = a5\n  4458: a5 = a4 >> 0x28\n  4461: u8 [a0 + 0x1d] = a5\n  4464: a5 = a4 >> 0x20\n  4467: u8 [a0 + 0x1c] = a5\n  4470: a5 = a4 >> 0x18\n  4473: u8 [a0 + 0x1b] = a5\n  4476: a5 = a4 >> 0x10\n  4479: u8 [a0 + 0x1a] = a5\n  4482: a5 = a4 >> 0x8\n  4485: u8 [a0 + 0x19] = a5\n  4488: u8 [a0 + 0x18] = a4\n  4491: u8 [a0 + 0x10] = a3\n  4494: a4 = a3 >> 0x38\n  4497: u8 [a0 + 0x17] = a4\n  4500: a4 = a3 >> 0x30\n  4503: u8 [a0 + 0x16] = a4\n  4506: a4 = a3 >> 0x28\n  4509: u8 [a0 + 0x15] = a4\n  4512: a4 = a3 >> 0x20\n  4515: u8 [a0 + 0x14] = a4\n  4518: a4 = a3 >> 0x18\n  4521: u8 [a0 + 0x13] = a4\n  4524: a4 = a3 >> 0x10\n  4527: u8 [a0 + 0x12] = a4\n  4530: a3 = a3 >> 0x8\n  4533: u8 [a0 + 0x11] = a3\n  4536: u8 [a0 + 0x8] = a2\n  4539: a3 = a2 >> 0x38\n  4542: u8 [a0 + 0xf] = a3\n  4545: a3 = a2 >> 0x30\n  4548: u8 [a0 + 0xe] = a3\n  4551: a3 = a2 >> 0x28\n  4554: u8 [a0 + 0xd] = a3\n  4557: a3 = a2 >> 0x20\n  4560: u8 [a0 + 0xc] = a3\n  4563: a3 = a2 >> 0x18\n  4566: u8 [a0 + 0xb] = a3\n  4569: a3 = a2 >> 0x10\n  4572: u8 [a0 + 0xa] = a3\n  4575: a2 = a2 >> 0x8\n  4578: u8 [a0 + 0x9] = a2\n  4581: u8 [a0] = a1\n  4583: a2 = a1 >> 0x38\n  4586: u8 [a0 + 0x7] = a2\n  4589: a2 = a1 >> 0x30\n  4592: u8 [a0 + 0x6] = a2\n  4595: a2 = a1 >> 0x28\n  4598: u8 [a0 + 0x5] = a2\n  4601: a2 = a1 >> 0x20\n  4604: u8 [a0 + 0x4] = a2\n  4607: a2 = a1 >> 0x18\n  4610: u8 [a0 + 0x3] = a2\n  4613: a2 = a1 >> 0x10\n  4616: u8 [a0 + 0x2] = a2\n  4619: a1 = a1 >> 0x8\n  4622: u8 [a0 + 0x1] = a1\n  4625: a1 = 0x20\n  4628: a0 = u64 [s1 + 0x1b8]\n  4632: ra = 48, jump @0\n      : @99 [@dyn 24] (gas: 5)\n  4637: i32 a1 = a0 + 0\n  4639: a2 = 0x20\n  4642: a0 = 0\n  4644: ecalli 13 // 'seal_return'\n  4646: fallthrough\n      : @100 (gas: 1)\n  4647: jump @102 if a0 == 3963147680\n      : @101 (gas: 1)\n  4654: jump @239\n      : @102 (gas: 11)\n  4657: a0 = sp + 0xffffffffffffffe0\n  4660: a0 = a0 & 0xffffffffffffffe0\n  4663: u64 [s1 + 0x1d0] = a0\n  4667: sp = a0\n  4669: u64 [a0 + 24] = 0\n  4672: u64 [a0 + 16] = 0\n  4675: u64 [a0 + 8] = 0\n  4678: u64 [a0 + 0] = 0\n  4680: i32 a0 = a0 + 0\n  4682: ecalli 16 // 'value_transferred'\n  4684: fallthrough\n      : @103 (gas: 9)\n  4685: a3 = u64 [s1 + 0x1d0]\n  4689: a0 = u64 [a3 + 0x10]\n  4692: a1 = u64 [a3 + 0x18]\n  4695: a2 = u64 [a3 + 0x8]\n  4698: a3 = u64 [a3]\n  4700: a1 = a1 | a2\n  4703: a0 = a0 | a3\n  4706: a0 = a0 | a1\n  4709: jump @105 if a0 == 0\n      : @104 (gas: 1)\n  4712: jump @361\n      : @105 (gas: 3)\n  4715: a0 = u64 [s1 + 0x1d8]\n  4719: a0 = i32 [a0]\n  4721: jump @107 if a0 >u 35\n      : @106 (gas: 1)\n  4725: jump @361\n      : @107 (gas: 61)\n  4728: a0 = s1 + 0x1000\n  4732: i32 a0 = a0 + 0xfffffffffffffde0\n  4736: a1 = 0x4\n  4739: ecalli 3 // 'call_data_load'\n  4741: a1 = s1 + 0x7ff\n  4745: a1 = a1 + 0x159\n  4749: a0 = u64 [a1 + 0x488]\n  4753: u64 [s1 + 0x1d8] = a0\n  4757: a0 = u64 [a1 + 0x490]\n  4761: u64 [s1 + 0x1c0] = a0\n  4765: a0 = u64 [a1 + 0x498]\n  4769: u64 [s1 + 0x1d0] = a0\n  4773: a0 = u64 [a1 + 0x4a0]\n  4777: u64 [s1 + 0x1c8] = a0\n  4781: u64 [a1 + 1216] = 0\n  4785: u64 [a1 + 1208] = 0\n  4789: u64 [a1 + 1200] = 0\n  4793: u64 [a1 + 1192] = 0x1\n  4798: u64 [a1 + 1248] = 0\n  4802: u64 [a1 + 1240] = 0\n  4806: u64 [a1 + 1232] = 0\n  4810: u64 [a1 + 1224] = 0\n  4814: u32 [a1 + 1256] = 0x20\n  4819: a0 = s1 + 0x1000\n  4823: i32 a1 = a0 + 0xfffffffffffffe00\n  4827: a0 = s1 + 0x1000\n  4831: i32 a3 = a0 + 0xfffffffffffffe20\n  4835: a0 = s1 + 0x1000\n  4839: i32 a4 = a0 + 0xfffffffffffffe40\n  4843: a2 = 0xffffffffffffffff\n  4846: a0 = 0\n  4848: ecalli 7 // 'get_storage'\n  4850: a4 = s1 + 0x7ff\n  4854: a4 = a4 + 0x159\n  4858: a0 = u64 [a4 + 0x4d0]\n  4862: a1 = u64 [a4 + 0x4c8]\n  4866: a2 = u64 [a4 + 0x4d8]\n  4870: a3 = u64 [a4 + 0x4e0]\n  4874: t0 = a4\n  4876: a5 = u64 [s1 + 0x1c0]\n  4880: a4 = a5 ^ a0\n  4883: a0 = a5 <u a0\n  4886: a5 = u64 [s1 + 0x1d8]\n  4890: a1 = a5 <u a1\n  4893: a1 = a0 if a4 != 0\n  4896: a4 = u64 [s1 + 0x1c8]\n  4900: a0 = a4 ^ a3\n  4903: a3 = a4 <u a3\n  4906: a5 = u64 [s1 + 0x1d0]\n  4910: a4 = a5 <u a2\n  4913: a4 = a3 if a0 != 0\n  4916: a2 = a2 ^ a5\n  4919: a0 = a0 | a2\n  4922: a1 = a4 if a0 != 0\n  4925: u64 [t0 + 416] = 0\n  4929: u64 [t0 + 408] = 0\n  4933: u64 [t0 + 0x188] = a1\n  4937: a0 = s1 + 0x7ff\n  4941: a0 = a0 + 0x2e1\n  4945: u64 [t0 + 400] = 0\n  4949: ra = 50, jump @464\n      : @108 [@dyn 25] (gas: 3)\n  4954: a1 = 0x20\n  4957: a0 = 0\n  4959: ra = 52, jump @0\n      : @109 [@dyn 26] (gas: 71)\n  4964: a1 = u64 [s1 + 0x1c8]\n  4968: a1 = reverse a1\n  4970: a2 = u64 [s1 + 0x1d0]\n  4974: a2 = reverse a2\n  4976: a3 = u64 [s1 + 0x1c0]\n  4980: a3 = reverse a3\n  4982: a4 = u64 [s1 + 0x1d8]\n  4986: a4 = reverse a4\n  4988: a5 = a4 >> 0x38\n  4991: u8 [a0 + 0x1f] = a5\n  4994: a5 = a4 >> 0x30\n  4997: u8 [a0 + 0x1e] = a5\n  5000: a5 = a4 >> 0x28\n  5003: u8 [a0 + 0x1d] = a5\n  5006: a5 = a4 >> 0x20\n  5009: u8 [a0 + 0x1c] = a5\n  5012: a5 = a4 >> 0x18\n  5015: u8 [a0 + 0x1b] = a5\n  5018: a5 = a4 >> 0x10\n  5021: u8 [a0 + 0x1a] = a5\n  5024: a5 = a4 >> 0x8\n  5027: u8 [a0 + 0x19] = a5\n  5030: u8 [a0 + 0x18] = a4\n  5033: a4 = a3 >> 0x38\n  5036: u8 [a0 + 0x17] = a4\n  5039: a4 = a3 >> 0x30\n  5042: u8 [a0 + 0x16] = a4\n  5045: a4 = a3 >> 0x28\n  5048: u8 [a0 + 0x15] = a4\n  5051: a4 = a3 >> 0x20\n  5054: u8 [a0 + 0x14] = a4\n  5057: a4 = a3 >> 0x18\n  5060: u8 [a0 + 0x13] = a4\n  5063: a4 = a3 >> 0x10\n  5066: u8 [a0 + 0x12] = a4\n  5069: a4 = a3 >> 0x8\n  5072: u8 [a0 + 0x11] = a4\n  5075: u8 [a0 + 0x10] = a3\n  5078: a3 = a2 >> 0x38\n  5081: u8 [a0 + 0xf] = a3\n  5084: a3 = a2 >> 0x30\n  5087: u8 [a0 + 0xe] = a3\n  5090: a3 = a2 >> 0x28\n  5093: u8 [a0 + 0xd] = a3\n  5096: a3 = a2 >> 0x20\n  5099: u8 [a0 + 0xc] = a3\n  5102: a3 = a2 >> 0x18\n  5105: u8 [a0 + 0xb] = a3\n  5108: a3 = a2 >> 0x10\n  5111: u8 [a0 + 0xa] = a3\n  5114: a3 = a2 >> 0x8\n  5117: u8 [a0 + 0x9] = a3\n  5120: u8 [a0 + 0x8] = a2\n  5123: a2 = a1 >> 0x38\n  5126: u8 [a0 + 0x7] = a2\n  5129: a2 = a1 >> 0x30\n  5132: u8 [a0 + 0x6] = a2\n  5135: a2 = a1 >> 0x28\n  5138: u8 [a0 + 0x5] = a2\n  5141: a2 = a1 >> 0x20\n  5144: u8 [a0 + 0x4] = a2\n  5147: a2 = a1 >> 0x18\n  5150: u8 [a0 + 0x3] = a2\n  5153: a2 = a1 >> 0x10\n  5156: u8 [a0 + 0x2] = a2\n  5159: a2 = a1 >> 0x8\n  5162: u8 [a0 + 0x1] = a2\n  5165: u8 [a0] = a1\n  5167: a0 = 0x20\n  5170: a1 = 0x20\n  5173: ra = 54, jump @0\n      : @110 [@dyn 27] (gas: 35)\n  5178: u8 [a0 + 31] = 0x2\n  5182: u8 [a0 + 30] = 0\n  5185: u8 [a0 + 29] = 0\n  5188: u8 [a0 + 28] = 0\n  5191: u8 [a0 + 27] = 0\n  5194: u8 [a0 + 26] = 0\n  5197: u8 [a0 + 25] = 0\n  5200: u8 [a0 + 24] = 0\n  5203: u8 [a0 + 23] = 0\n  5206: u8 [a0 + 22] = 0\n  5209: u8 [a0 + 21] = 0\n  5212: u8 [a0 + 20] = 0\n  5215: u8 [a0 + 19] = 0\n  5218: u8 [a0 + 18] = 0\n  5221: u8 [a0 + 17] = 0\n  5224: u8 [a0 + 16] = 0\n  5227: u8 [a0 + 15] = 0\n  5230: u8 [a0 + 14] = 0\n  5233: u8 [a0 + 13] = 0\n  5236: u8 [a0 + 12] = 0\n  5239: u8 [a0 + 11] = 0\n  5242: u8 [a0 + 10] = 0\n  5245: u8 [a0 + 9] = 0\n  5248: u8 [a0 + 8] = 0\n  5251: u8 [a0 + 7] = 0\n  5254: u8 [a0 + 6] = 0\n  5257: u8 [a0 + 5] = 0\n  5260: u8 [a0 + 4] = 0\n  5263: u8 [a0 + 3] = 0\n  5266: u8 [a0 + 2] = 0\n  5269: u8 [a0 + 1] = 0\n  5272: u8 [a0 + 0] = 0\n  5274: a1 = 0x40\n  5277: a0 = 0\n  5279: ra = 56, jump @0\n      : @111 [@dyn 28] (gas: 270)\n  5284: a1 = sp + 0xffffffffffffffe0\n  5287: a1 = a1 & 0xffffffffffffffe0\n  5290: u64 [s1 + 0x1d8] = a1\n  5294: sp = a1\n  5296: i32 a0 = a0 + 0\n  5298: i32 a2 = a1 + 0\n  5300: a1 = 0x40\n  5303: ecalli 8 // 'hash_keccak_256'\n  5305: a3 = u64 [s1 + 0x1d8]\n  5309: a0 = u64 [a3 + 0x18]\n  5312: a1 = u64 [a3 + 0x10]\n  5315: a2 = u64 [a3 + 0x8]\n  5318: a3 = u64 [a3]\n  5320: a5 = reverse a0\n  5322: u64 [s1 + 0x1d0] = a5\n  5326: a4 = reverse a1\n  5328: u64 [s1 + 0x1c8] = a4\n  5332: a2 = reverse a2\n  5334: u64 [s1 + 0x1c0] = a2\n  5338: a0 = reverse a3\n  5340: u64 [s1 + 0x1d8] = a0\n  5344: a1 = s1 + 0x7ff\n  5348: a1 = a1 + 0x159\n  5352: u64 [a1 + 0x4c0] = a0\n  5356: u64 [a1 + 0x4b8] = a2\n  5360: u64 [a1 + 0x4b0] = a4\n  5364: u64 [a1 + 0x4a8] = a5\n  5368: u64 [a1 + 1248] = 0\n  5372: u64 [a1 + 1240] = 0\n  5376: u64 [a1 + 1232] = 0\n  5380: u64 [a1 + 1224] = 0\n  5384: u32 [a1 + 1256] = 0x20\n  5389: a0 = s1 + 0x1000\n  5393: i32 a1 = a0 + 0xfffffffffffffe00\n  5397: a0 = s1 + 0x1000\n  5401: i32 a3 = a0 + 0xfffffffffffffe20\n  5405: a0 = s1 + 0x1000\n  5409: i32 a4 = a0 + 0xfffffffffffffe40\n  5413: a2 = 0xffffffffffffffff\n  5416: a0 = 0\n  5418: ecalli 7 // 'get_storage'\n  5420: a1 = u64 [s1 + 0x1d0]\n  5424: a0 = a1 + 0x2\n  5427: a1 = a0 <u a1\n  5430: a3 = u64 [s1 + 0x1c8]\n  5434: a2 = a3 + a1\n  5437: a3 = a2 <u a3\n  5440: a3 = a1 if a1 == 0\n  5443: a1 = u64 [s1 + 0x1c0]\n  5447: a3 = a3 + a1\n  5450: a1 = a3 <u a1\n  5453: a4 = u64 [s1 + 0x1d8]\n  5457: a1 = a1 + a4\n  5460: a4 = s1 + 0x7ff\n  5464: a4 = a4 + 0x159\n  5468: u64 [a4 + 0x4c0] = a1\n  5472: u64 [a4 + 0x4b8] = a3\n  5476: a1 = u64 [a4 + 0x4c8]\n  5480: u64 [s1 + 0x1b8] = a1\n  5484: u64 [a4 + 0x4b0] = a2\n  5488: a1 = u64 [a4 + 0x4d0]\n  5492: u64 [s1 + 0x1b0] = a1\n  5496: u64 [a4 + 0x4a8] = a0\n  5500: a0 = u32 [a4 + 0x4d8]\n  5504: u64 [s1 + 0x1a8] = a0\n  5508: u64 [a4 + 1248] = 0\n  5512: u64 [a4 + 1240] = 0\n  5516: u64 [a4 + 1232] = 0\n  5520: u64 [a4 + 1224] = 0\n  5524: u32 [a4 + 1256] = 0x20\n  5529: a0 = s1 + 0x1000\n  5533: i32 a1 = a0 + 0xfffffffffffffe00\n  5537: a0 = s1 + 0x1000\n  5541: i32 a3 = a0 + 0xfffffffffffffe20\n  5545: a0 = s1 + 0x1000\n  5549: i32 a4 = a0 + 0xfffffffffffffe40\n  5553: a2 = 0xffffffffffffffff\n  5556: a0 = 0\n  5558: ecalli 7 // 'get_storage'\n  5560: a1 = u64 [s1 + 0x1d0]\n  5564: a0 = a1 + 0x3\n  5567: a1 = a0 <u a1\n  5570: a3 = u64 [s1 + 0x1c8]\n  5574: a2 = a3 + a1\n  5577: a3 = a2 <u a3\n  5580: a3 = a1 if a1 == 0\n  5583: a1 = u64 [s1 + 0x1c0]\n  5587: a3 = a3 + a1\n  5590: a1 = a3 <u a1\n  5593: a4 = u64 [s1 + 0x1d8]\n  5597: a1 = a1 + a4\n  5600: a4 = s1 + 0x7ff\n  5604: a4 = a4 + 0x159\n  5608: u64 [a4 + 0x4c0] = a1\n  5612: a1 = u64 [a4 + 0x4c8]\n  5616: u64 [s1 + 0x1a0] = a1\n  5620: u64 [a4 + 0x4b8] = a3\n  5624: a1 = u64 [a4 + 0x4d0]\n  5628: u64 [s1 + 0x198] = a1\n  5632: u64 [a4 + 0x4b0] = a2\n  5636: a1 = u64 [a4 + 0x4d8]\n  5640: u64 [s1 + 0x190] = a1\n  5644: u64 [a4 + 0x4a8] = a0\n  5648: a0 = u64 [a4 + 0x4e0]\n  5652: u64 [s1 + 0x188] = a0\n  5656: u64 [a4 + 1248] = 0\n  5660: u64 [a4 + 1240] = 0\n  5664: u64 [a4 + 1232] = 0\n  5668: u64 [a4 + 1224] = 0\n  5672: u32 [a4 + 1256] = 0x20\n  5677: a0 = s1 + 0x1000\n  5681: i32 a1 = a0 + 0xfffffffffffffe00\n  5685: a0 = s1 + 0x1000\n  5689: i32 a3 = a0 + 0xfffffffffffffe20\n  5693: a0 = s1 + 0x1000\n  5697: i32 a4 = a0 + 0xfffffffffffffe40\n  5701: a2 = 0xffffffffffffffff\n  5704: a0 = 0\n  5706: ecalli 7 // 'get_storage'\n  5708: a1 = u64 [s1 + 0x1d0]\n  5712: a0 = a1 + 0x4\n  5715: a1 = a0 <u a1\n  5718: a3 = u64 [s1 + 0x1c8]\n  5722: a2 = a3 + a1\n  5725: a3 = a2 <u a3\n  5728: a3 = a1 if a1 == 0\n  5731: a1 = u64 [s1 + 0x1c0]\n  5735: a3 = a3 + a1\n  5738: a1 = a3 <u a1\n  5741: a4 = u64 [s1 + 0x1d8]\n  5745: a1 = a1 + a4\n  5748: a4 = s1 + 0x7ff\n  5752: a4 = a4 + 0x159\n  5756: u64 [a4 + 0x4c0] = a1\n  5760: a1 = u64 [a4 + 0x4c8]\n  5764: u64 [s1 + 0x180] = a1\n  5768: u64 [a4 + 0x4b8] = a3\n  5772: a1 = u64 [a4 + 0x4d0]\n  5776: u64 [s1 + 0x178] = a1\n  5780: u64 [a4 + 0x4b0] = a2\n  5784: a1 = u64 [a4 + 0x4d8]\n  5788: u64 [s1 + 0x170] = a1\n  5792: u64 [a4 + 0x4a8] = a0\n  5796: a0 = u64 [a4 + 0x4e0]\n  5800: u64 [s1 + 0x168] = a0\n  5804: u64 [a4 + 1248] = 0\n  5808: u64 [a4 + 1240] = 0\n  5812: u64 [a4 + 1232] = 0\n  5816: u64 [a4 + 1224] = 0\n  5820: u32 [a4 + 1256] = 0x20\n  5825: a0 = s1 + 0x1000\n  5829: i32 a1 = a0 + 0xfffffffffffffe00\n  5833: a0 = s1 + 0x1000\n  5837: i32 a3 = a0 + 0xfffffffffffffe20\n  5841: a0 = s1 + 0x1000\n  5845: i32 a4 = a0 + 0xfffffffffffffe40\n  5849: a2 = 0xffffffffffffffff\n  5852: a0 = 0\n  5854: ecalli 7 // 'get_storage'\n  5856: a1 = u64 [s1 + 0x1d0]\n  5860: a0 = a1 + 0x5\n  5863: a1 = a0 <u a1\n  5866: a3 = u64 [s1 + 0x1c8]\n  5870: a2 = a3 + a1\n  5873: a3 = a2 <u a3\n  5876: a3 = a1 if a1 == 0\n  5879: a1 = u64 [s1 + 0x1c0]\n  5883: a3 = a3 + a1\n  5886: a1 = a3 <u a1\n  5889: a4 = u64 [s1 + 0x1d8]\n  5893: a1 = a1 + a4\n  5896: a4 = s1 + 0x7ff\n  5900: a4 = a4 + 0x159\n  5904: u64 [a4 + 0x4c0] = a1\n  5908: a1 = u64 [a4 + 0x4c8]\n  5912: u64 [s1 + 0x160] = a1\n  5916: u64 [a4 + 0x4b8] = a3\n  5920: a1 = u64 [a4 + 0x4d0]\n  5924: u64 [s1 + 0x158] = a1\n  5928: u64 [a4 + 0x4b0] = a2\n  5932: a1 = u64 [a4 + 0x4d8]\n  5936: u64 [s1 + 0x150] = a1\n  5940: u64 [a4 + 0x4a8] = a0\n  5944: a0 = u64 [a4 + 0x4e0]\n  5948: u64 [s1 + 0x148] = a0\n  5952: u64 [a4 + 1248] = 0\n  5956: u64 [a4 + 1240] = 0\n  5960: u64 [a4 + 1232] = 0\n  5964: u64 [a4 + 1224] = 0\n  5968: u32 [a4 + 1256] = 0x20\n  5973: a0 = s1 + 0x1000\n  5977: i32 a1 = a0 + 0xfffffffffffffe00\n  5981: a0 = s1 + 0x1000\n  5985: i32 a3 = a0 + 0xfffffffffffffe20\n  5989: a0 = s1 + 0x1000\n  5993: i32 a4 = a0 + 0xfffffffffffffe40\n  5997: a2 = 0xffffffffffffffff\n  6000: a0 = 0\n  6002: ecalli 7 // 'get_storage'\n  6004: a1 = u64 [s1 + 0x1d0]\n  6008: a0 = a1 + 0x6\n  6011: a1 = a0 <u a1\n  6014: a3 = u64 [s1 + 0x1c8]\n  6018: a2 = a3 + a1\n  6021: a3 = a2 <u a3\n  6024: a3 = a1 if a1 == 0\n  6027: a1 = u64 [s1 + 0x1c0]\n  6031: a3 = a3 + a1\n  6034: a1 = a3 <u a1\n  6037: a4 = u64 [s1 + 0x1d8]\n  6041: a1 = a1 + a4\n  6044: a4 = s1 + 0x7ff\n  6048: a4 = a4 + 0x159\n  6052: u64 [a4 + 0x4c0] = a1\n  6056: u64 [a4 + 0x4b8] = a3\n  6060: a1 = u64 [a4 + 0x4c8]\n  6064: u64 [s1 + 0x140] = a1\n  6068: u64 [a4 + 0x4b0] = a2\n  6072: a1 = u64 [a4 + 0x4d0]\n  6076: u64 [s1 + 0x138] = a1\n  6080: u64 [a4 + 0x4a8] = a0\n  6084: a0 = u64 [a4 + 0x4d8]\n  6088: u64 [s1 + 0x130] = a0\n  6092: u32 [a4 + 1256] = 0x20\n  6097: a0 = u64 [a4 + 0x4e0]\n  6101: u64 [s1 + 0x128] = a0\n  6105: u64 [a4 + 1248] = 0\n  6109: u64 [a4 + 1240] = 0\n  6113: u64 [a4 + 1232] = 0\n  6117: u64 [a4 + 1224] = 0\n  6121: a0 = s1 + 0x1000\n  6125: i32 a1 = a0 + 0xfffffffffffffe00\n  6129: a0 = s1 + 0x1000\n  6133: i32 a3 = a0 + 0xfffffffffffffe20\n  6137: a0 = s1 + 0x1000\n  6141: i32 a4 = a0 + 0xfffffffffffffe40\n  6145: a2 = 0xffffffffffffffff\n  6148: a0 = 0\n  6150: ecalli 7 // 'get_storage'\n  6152: a5 = s1 + 0x7ff\n  6156: a5 = a5 + 0x159\n  6160: a0 = u64 [a5 + 0x4c8]\n  6164: u64 [s1 + 0x120] = a0\n  6168: a0 = u64 [a5 + 0x4d0]\n  6172: u64 [s1 + 0x118] = a0\n  6176: a0 = u64 [a5 + 0x4d8]\n  6180: u64 [s1 + 0x110] = a0\n  6184: a0 = u64 [a5 + 0x4e0]\n  6188: u64 [s1 + 0x108] = a0\n  6192: a2 = u64 [s1 + 0x1d0]\n  6196: a2 = a2 + 0x1\n  6199: a0 = a2 <u 0x1\n  6202: a1 = u64 [s1 + 0x1c8]\n  6206: a0 = a0 + a1\n  6209: a1 = a2 | a0\n  6212: a1 = a1 <u 0x1\n  6215: a3 = u64 [s1 + 0x1c0]\n  6219: a1 = a1 + a3\n  6222: a3 = a1 <u a3\n  6225: a4 = u64 [s1 + 0x1d8]\n  6229: a3 = a3 + a4\n  6232: u64 [a5 + 0x160] = a3\n  6236: u64 [a5 + 0x158] = a1\n  6240: u64 [a5 + 0x150] = a0\n  6244: a0 = s1 + 0x7ff\n  6248: a0 = a0 + 0x2c1\n  6252: a1 = s1 + 0x7ff\n  6256: a1 = a1 + 0x2a1\n  6260: u64 [a5 + 0x148] = a2\n  6264: ra = 58, jump @403\n      : @112 [@dyn 29] (gas: 13)\n  6269: a1 = s1 + 0x7ff\n  6273: a1 = a1 + 0x159\n  6277: a0 = u64 [a1 + 0x168]\n  6281: u64 [s1 + 0x1d0] = a0\n  6285: a0 = u64 [a1 + 0x170]\n  6289: u64 [s1 + 0x1c8] = a0\n  6293: a0 = u64 [a1 + 0x178]\n  6297: u64 [s1 + 0x1c0] = a0\n  6301: a0 = u64 [a1 + 0x180]\n  6305: u64 [s1 + 0x100] = a0\n  6309: a0 = 0x40\n  6312: a1 = 0x20\n  6315: ra = 60, jump @0\n      : @113 [@dyn 30] (gas: 181)\n  6320: a1 = u8 [a0 + 0x1]\n  6323: a2 = u8 [a0]\n  6325: a3 = u8 [a0 + 0x2]\n  6328: a4 = u8 [a0 + 0x3]\n  6331: a1 = a1 << 0x8\n  6334: a1 = a1 | a2\n  6337: a3 = a3 << 0x10\n  6340: a4 = a4 << 0x18\n  6343: a3 = a3 | a4\n  6346: a1 = a1 | a3\n  6349: a2 = u8 [a0 + 0x5]\n  6352: a3 = u8 [a0 + 0x4]\n  6355: a4 = u8 [a0 + 0x6]\n  6358: a5 = u8 [a0 + 0x7]\n  6361: a2 = a2 << 0x8\n  6364: a2 = a2 | a3\n  6367: a4 = a4 << 0x10\n  6370: a5 = a5 << 0x18\n  6373: a4 = a4 | a5\n  6376: a2 = a2 | a4\n  6379: a2 = a2 << 0x20\n  6382: t0 = a2 | a1\n  6385: a2 = u8 [a0 + 0x9]\n  6388: a3 = u8 [a0 + 0x8]\n  6391: a4 = u8 [a0 + 0xa]\n  6394: a5 = u8 [a0 + 0xb]\n  6397: a2 = a2 << 0x8\n  6400: a2 = a2 | a3\n  6403: a4 = a4 << 0x10\n  6406: a5 = a5 << 0x18\n  6409: a4 = a4 | a5\n  6412: a2 = a2 | a4\n  6415: a3 = u8 [a0 + 0xd]\n  6418: a4 = u8 [a0 + 0xc]\n  6421: a5 = u8 [a0 + 0xe]\n  6424: a1 = u8 [a0 + 0xf]\n  6427: a3 = a3 << 0x8\n  6430: a3 = a3 | a4\n  6433: a5 = a5 << 0x10\n  6436: a1 = a1 << 0x18\n  6439: a1 = a1 | a5\n  6442: a1 = a1 | a3\n  6445: a1 = a1 << 0x20\n  6448: t1 = a1 | a2\n  6451: a1 = u8 [a0 + 0x11]\n  6454: a3 = u8 [a0 + 0x10]\n  6457: a4 = u8 [a0 + 0x12]\n  6460: a5 = u8 [a0 + 0x13]\n  6463: a1 = a1 << 0x8\n  6466: a1 = a1 | a3\n  6469: a4 = a4 << 0x10\n  6472: a5 = a5 << 0x18\n  6475: a4 = a4 | a5\n  6478: a1 = a1 | a4\n  6481: a3 = u8 [a0 + 0x15]\n  6484: a4 = u8 [a0 + 0x14]\n  6487: a5 = u8 [a0 + 0x16]\n  6490: a2 = u8 [a0 + 0x17]\n  6493: a3 = a3 << 0x8\n  6496: a3 = a3 | a4\n  6499: a5 = a5 << 0x10\n  6502: a2 = a2 << 0x18\n  6505: a2 = a2 | a5\n  6508: a2 = a2 | a3\n  6511: a2 = a2 << 0x20\n  6514: a3 = a2 | a1\n  6517: a1 = u8 [a0 + 0x19]\n  6520: a2 = u8 [a0 + 0x18]\n  6523: a4 = u8 [a0 + 0x1a]\n  6526: a5 = u8 [a0 + 0x1b]\n  6529: a1 = a1 << 0x8\n  6532: a1 = a1 | a2\n  6535: a4 = a4 << 0x10\n  6538: a5 = a5 << 0x18\n  6541: a4 = a4 | a5\n  6544: a1 = a1 | a4\n  6547: a2 = u8 [a0 + 0x1d]\n  6550: a4 = u8 [a0 + 0x1c]\n  6553: a5 = u8 [a0 + 0x1e]\n  6556: a0 = u8 [a0 + 0x1f]\n  6559: a2 = a2 << 0x8\n  6562: a2 = a2 | a4\n  6565: a5 = a5 << 0x10\n  6568: a0 = a0 << 0x18\n  6571: a0 = a0 | a5\n  6574: a0 = a0 | a2\n  6577: a0 = a0 << 0x20\n  6580: a0 = a0 | a1\n  6583: t2 = reverse a0\n  6585: u64 [s1 + 0xe8] = t2\n  6589: a3 = reverse a3\n  6591: u64 [s1 + 0xf0] = a3\n  6595: a2 = reverse t1\n  6597: u64 [s1 + 0xf8] = a2\n  6601: a4 = reverse t0\n  6603: u64 [s1 + 0x1d8] = a4\n  6607: sp = sp + 0xffffffffffffffe8\n  6610: a0 = s1 + 0x7ff\n  6614: a0 = a0 + 0x181\n  6618: u64 [sp + 0x10] = a0\n  6621: a0 = s1 + 0x7ff\n  6625: a0 = a0 + 0x1a1\n  6629: u64 [sp + 0x8] = a0\n  6632: a0 = s1 + 0x7ff\n  6636: a0 = a0 + 0x1c1\n  6640: u64 [sp] = a0\n  6642: a0 = s1 + 0x7ff\n  6646: a0 = a0 + 0x159\n  6650: a1 = u64 [s1 + 0x108]\n  6654: u64 [a0 + 0x40] = a1\n  6657: a1 = u64 [s1 + 0x110]\n  6661: u64 [a0 + 0x38] = a1\n  6664: a1 = u64 [s1 + 0x118]\n  6668: u64 [a0 + 0x30] = a1\n  6671: a1 = u64 [s1 + 0x120]\n  6675: u64 [a0 + 0x28] = a1\n  6678: a1 = u64 [s1 + 0x128]\n  6682: u64 [a0 + 0x60] = a1\n  6685: a1 = u64 [s1 + 0x130]\n  6689: u64 [a0 + 0x58] = a1\n  6692: a1 = u64 [s1 + 0x138]\n  6696: u64 [a0 + 0x50] = a1\n  6699: a1 = u64 [s1 + 0x140]\n  6703: u64 [a0 + 0x48] = a1\n  6706: a1 = u64 [s1 + 0x148]\n  6710: u64 [a0 + 0x80] = a1\n  6714: a1 = u64 [s1 + 0x150]\n  6718: u64 [a0 + 0x78] = a1\n  6721: a1 = u64 [s1 + 0x158]\n  6725: u64 [a0 + 0x70] = a1\n  6728: a1 = u64 [s1 + 0x160]\n  6732: u64 [a0 + 0x68] = a1\n  6735: a1 = u64 [s1 + 0x168]\n  6739: u64 [a0 + 0xa0] = a1\n  6743: a1 = u64 [s1 + 0x170]\n  6747: u64 [a0 + 0x98] = a1\n  6751: a1 = u64 [s1 + 0x178]\n  6755: u64 [a0 + 0x90] = a1\n  6759: a1 = u64 [s1 + 0x180]\n  6763: u64 [a0 + 0x88] = a1\n  6767: a1 = u64 [s1 + 0x188]\n  6771: u64 [a0 + 0xc0] = a1\n  6775: a1 = u64 [s1 + 0x190]\n  6779: u64 [a0 + 0xb8] = a1\n  6783: a1 = u64 [s1 + 0x198]\n  6787: u64 [a0 + 0xb0] = a1\n  6791: a1 = u64 [s1 + 0x1a0]\n  6795: u64 [a0 + 0xa8] = a1\n  6799: a1 = u64 [s1 + 0x100]\n  6803: u64 [a0 + 0xe0] = a1\n  6807: a1 = u64 [s1 + 0x1c0]\n  6811: u64 [a0 + 0xd8] = a1\n  6815: a1 = u64 [s1 + 0x1c8]\n  6819: u64 [a0 + 0xd0] = a1\n  6823: a1 = u64 [s1 + 0x1d0]\n  6827: u64 [a0 + 0xc8] = a1\n  6831: u64 [a0 + 256] = 0\n  6835: a1 = u64 [s1 + 0x1a8]\n  6839: u64 [a0 + 0xf8] = a1\n  6843: a1 = u64 [s1 + 0x1b0]\n  6847: u64 [a0 + 0xf0] = a1\n  6851: a1 = u64 [s1 + 0x1b8]\n  6855: u64 [a0 + 0xe8] = a1\n  6859: u64 [a0 + 0x120] = a4\n  6863: u64 [a0 + 0x118] = a2\n  6867: u64 [a0 + 0x110] = a3\n  6871: t0 = a0\n  6873: a0 = s1 + 0x7ff\n  6877: a0 = a0 + 0x281\n  6881: a1 = s1 + 0x7ff\n  6885: a1 = a1 + 0x261\n  6889: a2 = s1 + 0x7ff\n  6893: a2 = a2 + 0x241\n  6897: a3 = s1 + 0x7ff\n  6901: a3 = a3 + 0x221\n  6905: a4 = s1 + 0x7ff\n  6909: a4 = a4 + 0x201\n  6913: a5 = s1 + 0x7ff\n  6917: a5 = a5 + 0x1e1\n  6921: u64 [t0 + 0x108] = t2\n  6925: ra = 62, jump @447\n      : @114 [@dyn 31] (gas: 13)\n  6930: a4 = u64 [s1 + 0xf0]\n  6934: a2 = u64 [s1 + 0xe8]\n  6938: sp = sp + 0x18\n  6941: a0 = u64 [s1 + 0x1d8]\n  6945: a0 = a0 | a4\n  6948: a3 = u64 [s1 + 0xf8]\n  6952: a1 = a2 | a3\n  6955: a1 = a1 | a0\n  6958: a1 = a1 >> 0x20\n  6961: a0 = a0 | a3\n  6964: a0 = a0 << 0x20\n  6967: a0 = a0 | a1\n  6970: jump @116 if a0 == 0\n      : @115 (gas: 1)\n  6973: jump @256\n      : @116 (gas: 9)\n  6976: t0 = a3\n  6978: a1 = s1 + 0x7ff\n  6982: a1 = a1 + 0x159\n  6986: a0 = u64 [a1 + 0x130]\n  6990: a3 = u64 [a1 + 0x140]\n  6994: u64 [s1 + 0x1d0] = a3\n  6998: t1 = u64 [a1 + 0x128]\n  7002: a3 = u64 [a1 + 0x138]\n  7006: jump @254\n      : @117 (gas: 11)\n  7009: a0 = sp + 0xffffffffffffffe0\n  7012: a0 = a0 & 0xffffffffffffffe0\n  7015: u64 [s1 + 0x1d0] = a0\n  7019: sp = a0\n  7021: u64 [a0 + 24] = 0\n  7024: u64 [a0 + 16] = 0\n  7027: u64 [a0 + 8] = 0\n  7030: u64 [a0 + 0] = 0\n  7032: i32 a0 = a0 + 0\n  7034: ecalli 16 // 'value_transferred'\n  7036: fallthrough\n      : @118 (gas: 9)\n  7037: a3 = u64 [s1 + 0x1d0]\n  7041: a0 = u64 [a3 + 0x10]\n  7044: a1 = u64 [a3 + 0x18]\n  7047: a2 = u64 [a3 + 0x8]\n  7050: a3 = u64 [a3]\n  7052: a1 = a1 | a2\n  7055: a0 = a0 | a3\n  7058: a0 = a0 | a1\n  7061: jump @120 if a0 == 0\n      : @119 (gas: 1)\n  7064: jump @361\n      : @120 (gas: 5)\n  7067: a0 = u64 [s1 + 0x1d8]\n  7071: a0 = i32 [a0]\n  7073: a2 = s1 + 0x7ff\n  7077: a2 = a2 + 0x159\n  7081: jump @122 if a0 >u 3\n      : @121 (gas: 1)\n  7085: jump @361\n      : @122 (gas: 30)\n  7088: u64 [a2 + 1216] = 0\n  7092: u64 [a2 + 1208] = 0\n  7096: u64 [a2 + 1200] = 0\n  7100: u64 [a2 + 1192] = 0\n  7104: u64 [a2 + 1248] = 0\n  7108: u64 [a2 + 1240] = 0\n  7112: u64 [a2 + 1232] = 0\n  7116: u64 [a2 + 1224] = 0\n  7120: u32 [a2 + 1256] = 0x20\n  7125: a0 = s1 + 0x1000\n  7129: i32 a1 = a0 + 0xfffffffffffffe00\n  7133: a0 = s1 + 0x1000\n  7137: i32 a3 = a0 + 0xfffffffffffffe20\n  7141: a0 = s1 + 0x1000\n  7145: i32 a4 = a0 + 0xfffffffffffffe40\n  7149: a2 = 0xffffffffffffffff\n  7152: a0 = 0\n  7154: ecalli 7 // 'get_storage'\n  7156: a1 = s1 + 0x7ff\n  7160: a1 = a1 + 0x159\n  7164: a0 = u64 [a1 + 0x4d0]\n  7168: u64 [s1 + 0x1d0] = a0\n  7172: a0 = u64 [a1 + 0x4c8]\n  7176: u64 [s1 + 0x1c8] = a0\n  7180: a0 = u32 [a1 + 0x4d8]\n  7184: u64 [s1 + 0x1c0] = a0\n  7188: a0 = s1 + 0x1000\n  7192: i32 a0 = a0 + 0xfffffffffffffb40\n  7196: ecalli 5 // 'caller'\n  7198: fallthrough\n      : @123 (gas: 27)\n  7199: a1 = s1 + 0x7ff\n  7203: a1 = a1 + 0x159\n  7207: a0 = u64 [a1 + 0x1f0]\n  7211: a2 = u64 [a1 + 0x1e8]\n  7215: a4 = u32 [a1 + 0x1f8]\n  7219: u64 [s1 + 0x1b0] = a0\n  7223: a0 = reverse a0\n  7225: a1 = a0 >> 0x20\n  7228: u64 [s1 + 0x1d8] = a2\n  7232: a2 = reverse a2\n  7234: a3 = a2 << 0x20\n  7237: a1 = a1 | a3\n  7240: a0 = a0 << 0x20\n  7243: u64 [s1 + 0x1a8] = a4\n  7247: a3 = reverse a4\n  7249: a3 = a3 >> 0x20\n  7252: a0 = a0 | a3\n  7255: a2 = a2 >> 0x20\n  7258: a3 = u64 [s1 + 0x1c0]\n  7262: a2 = a2 ^ a3\n  7265: a3 = u64 [s1 + 0x1c8]\n  7269: a0 = a0 ^ a3\n  7272: a0 = a0 | a2\n  7275: a2 = u64 [s1 + 0x1d0]\n  7279: a1 = a1 ^ a2\n  7282: a0 = a0 | a1\n  7285: jump @125 if a0 == 0\n      : @124 (gas: 1)\n  7288: jump @367\n      : @125 (gas: 7)\n  7291: a0 = sp + 0xffffffffffffffe0\n  7294: a0 = a0 & 0xffffffffffffffe0\n  7297: u64 [s1 + 0x1d0] = a0\n  7301: sp = a0\n  7303: i32 a0 = a0 + 0\n  7305: ecalli 0 // 'balance'\n  7306: fallthrough\n      : @126 (gas: 13)\n  7307: a2 = u64 [s1 + 0x1d0]\n  7311: a1 = u64 [a2 + 0x10]\n  7314: a0 = u64 [a2 + 0x18]\n  7317: a3 = u64 [a2 + 0x8]\n  7320: a2 = u64 [a2]\n  7322: u64 [s1 + 0x1b8] = a0\n  7326: u64 [s1 + 0x1c0] = a3\n  7330: a0 = a0 | a3\n  7333: u64 [s1 + 0x1d0] = a1\n  7337: u64 [s1 + 0x1c8] = a2\n  7341: a1 = a1 | a2\n  7344: a0 = a0 | a1\n  7347: jump @128 if a0 != 0\n      : @127 (gas: 1)\n  7350: jump @368\n      : @128 (gas: 21)\n  7353: ecalli 10 // 'ref_time_left'\n  7355: u64 [s1 + 0x1a0] = a0\n  7359: a1 = s1 + 0x7ff\n  7363: a1 = a1 + 0x159\n  7367: a0 = u64 [s1 + 0x1b0]\n  7371: u64 [a1 + 0x210] = a0\n  7375: a0 = u64 [s1 + 0x1d8]\n  7379: u64 [a1 + 0x208] = a0\n  7383: a0 = u64 [s1 + 0x1a8]\n  7387: u32 [a1 + 0x218] = a0\n  7391: a0 = u64 [s1 + 0x1c0]\n  7395: u64 [a1 + 0x230] = a0\n  7399: a0 = u64 [s1 + 0x1c8]\n  7403: u64 [a1 + 0x228] = a0\n  7407: a0 = u64 [s1 + 0x1d0]\n  7411: u64 [a1 + 0x238] = a0\n  7415: a0 = u64 [s1 + 0x1b8]\n  7419: u64 [a1 + 0x240] = a0\n  7423: a0 = 0\n  7425: a1 = 0\n  7427: ra = 64, jump @0\n      : @129 [@dyn 32] (gas: 4)\n  7432: u64 [s1 + 0x1d8] = a0\n  7436: a0 = 0\n  7438: a1 = 0\n  7440: ra = 66, jump @0\n      : @130 [@dyn 33] (gas: 40)\n  7445: a3 = s1 + 0x7ff\n  7449: a3 = a3 + 0x159\n  7453: u32 [a3 + 584] = 0\n  7457: a2 = u64 [s1 + 0x1a0]\n  7461: a1 = a2 >u 0x8fc\n  7465: a2 = -a1\n  7467: u64 [a3 + 0x280] = a2\n  7471: u64 [a3 + 0x278] = a2\n  7475: u64 [a3 + 0x270] = a2\n  7479: u64 [a3 + 0x268] = a2\n  7483: a2 = s1 + 0x7ff\n  7487: a2 = a2 + 0x361\n  7491: a2 = a2 << 0x20\n  7494: a2 = a2 >> 0x20\n  7497: a1 = a1 << 0x23\n  7500: t0 = a1 | a2\n  7503: a1 = s1 + 0x7ff\n  7507: a1 = a1 + 0x381\n  7511: a1 = a1 << 0x20\n  7514: a1 = a1 >> 0x20\n  7517: a2 = s1 + 0x7ff\n  7521: a2 = a2 + 0x3c1\n  7525: a2 = a2 << 0x20\n  7528: a3 = a2 | a1\n  7531: a4 = u64 [s1 + 0x1d8]\n  7535: a4 = a4 << 0x20\n  7538: a4 = a4 >> 0x20\n  7541: a0 = a0 << 0x20\n  7544: a0 = a0 >> 0x20\n  7547: a1 = s1 + 0x7ff\n  7551: a1 = a1 + 0x3a1\n  7555: a1 = a1 << 0x20\n  7558: a5 = a1 | a0\n  7561: a1 = 0xffffffffffffffff\n  7564: a2 = 0xffffffffffffffff\n  7567: a0 = t0\n  7569: ecalli 1 // 'call'\n  7571: u64 [s1 + 0x1d8] = a0\n  7575: ecalli 12 // 'return_data_size'\n  7577: fallthrough\n      : @131 (gas: 2)\n  7578: a2 = u64 [s1 + 0x1d8]\n  7582: jump @133 if a0 == 0\n      : @132 (gas: 1)\n  7585: jump @257\n      : @133 (gas: 1)\n  7588: jump @135 if a2 == 0\n      : @134 (gas: 1)\n  7591: jump @272\n      : @135 (gas: 31)\n  7594: a1 = s1 + 0x7ff\n  7598: a1 = a1 + 0x159\n  7602: u64 [a1 + 1216] = 0\n  7606: u64 [a1 + 1208] = 0\n  7610: u64 [a1 + 1200] = 0\n  7614: u64 [a1 + 1192] = 0\n  7618: u64 [a1 + 1248] = 0\n  7622: u64 [a1 + 1240] = 0\n  7626: u64 [a1 + 1232] = 0\n  7630: u64 [a1 + 1224] = 0\n  7634: u32 [a1 + 1256] = 0x20\n  7639: a0 = s1 + 0x1000\n  7643: i32 a1 = a0 + 0xfffffffffffffe00\n  7647: a0 = s1 + 0x1000\n  7651: i32 a3 = a0 + 0xfffffffffffffe20\n  7655: a0 = s1 + 0x1000\n  7659: i32 a4 = a0 + 0xfffffffffffffe40\n  7663: a2 = 0xffffffffffffffff\n  7666: a0 = 0\n  7668: ecalli 7 // 'get_storage'\n  7670: a1 = s1 + 0x7ff\n  7674: a1 = a1 + 0x159\n  7678: a0 = u64 [a1 + 0x4d8]\n  7682: u64 [s1 + 0x1a8] = a0\n  7686: a0 = u64 [a1 + 0x4d0]\n  7690: u64 [s1 + 0x1b0] = a0\n  7694: a0 = u64 [a1 + 0x4c8]\n  7698: u64 [s1 + 0x1d8] = a0\n  7702: a0 = 0x40\n  7705: a1 = 0x20\n  7708: ra = 68, jump @0\n      : @136 [@dyn 34] (gas: 100)\n  7713: a1 = u8 [a0 + 0x11]\n  7716: a2 = u8 [a0 + 0x10]\n  7719: a3 = u8 [a0 + 0x12]\n  7722: a4 = u8 [a0 + 0x13]\n  7725: a1 = a1 << 0x8\n  7728: a1 = a1 | a2\n  7731: a3 = a3 << 0x10\n  7734: a4 = a4 << 0x18\n  7737: a3 = a3 | a4\n  7740: a1 = a1 | a3\n  7743: a2 = u8 [a0 + 0x15]\n  7746: a3 = u8 [a0 + 0x14]\n  7749: a4 = u8 [a0 + 0x16]\n  7752: a5 = u8 [a0 + 0x17]\n  7755: a2 = a2 << 0x8\n  7758: a2 = a2 | a3\n  7761: a4 = a4 << 0x10\n  7764: a5 = a5 << 0x18\n  7767: a4 = a4 | a5\n  7770: a2 = a2 | a4\n  7773: a2 = a2 << 0x20\n  7776: t0 = a2 | a1\n  7779: a2 = u8 [a0 + 0x1]\n  7782: a3 = u8 [a0]\n  7784: a4 = u8 [a0 + 0x2]\n  7787: a5 = u8 [a0 + 0x3]\n  7790: a2 = a2 << 0x8\n  7793: a2 = a2 | a3\n  7796: a4 = a4 << 0x10\n  7799: a5 = a5 << 0x18\n  7802: a4 = a4 | a5\n  7805: a2 = a2 | a4\n  7808: a3 = u8 [a0 + 0x5]\n  7811: a4 = u8 [a0 + 0x4]\n  7814: a5 = u8 [a0 + 0x6]\n  7817: a1 = u8 [a0 + 0x7]\n  7820: a3 = a3 << 0x8\n  7823: a3 = a3 | a4\n  7826: a5 = a5 << 0x10\n  7829: a1 = a1 << 0x18\n  7832: a1 = a1 | a5\n  7835: a1 = a1 | a3\n  7838: a1 = a1 << 0x20\n  7841: t1 = a1 | a2\n  7844: a1 = u8 [a0 + 0x19]\n  7847: a3 = u8 [a0 + 0x18]\n  7850: a4 = u8 [a0 + 0x1a]\n  7853: a5 = u8 [a0 + 0x1b]\n  7856: a1 = a1 << 0x8\n  7859: a1 = a1 | a3\n  7862: a4 = a4 << 0x10\n  7865: a5 = a5 << 0x18\n  7868: a4 = a4 | a5\n  7871: a1 = a1 | a4\n  7874: a3 = u8 [a0 + 0x1d]\n  7877: a4 = u8 [a0 + 0x1c]\n  7880: a5 = u8 [a0 + 0x1e]\n  7883: a2 = u8 [a0 + 0x1f]\n  7886: a3 = a3 << 0x8\n  7889: a3 = a3 | a4\n  7892: a5 = a5 << 0x10\n  7895: a2 = a2 << 0x18\n  7898: a2 = a2 | a5\n  7901: a2 = a2 | a3\n  7904: a2 = a2 << 0x20\n  7907: a3 = a2 | a1\n  7910: a1 = u8 [a0 + 0x9]\n  7913: a2 = u8 [a0 + 0x8]\n  7916: a4 = u8 [a0 + 0xa]\n  7919: a5 = u8 [a0 + 0xb]\n  7922: a1 = a1 << 0x8\n  7925: a1 = a1 | a2\n  7928: a4 = a4 << 0x10\n  7931: a5 = a5 << 0x18\n  7934: a4 = a4 | a5\n  7937: a1 = a1 | a4\n  7940: a2 = u8 [a0 + 0xd]\n  7943: a4 = u8 [a0 + 0xc]\n  7946: a5 = u8 [a0 + 0xe]\n  7949: a0 = u8 [a0 + 0xf]\n  7952: a2 = a2 << 0x8\n  7955: a2 = a2 | a4\n  7958: a5 = a5 << 0x10\n  7961: a0 = a0 << 0x18\n  7964: a0 = a0 | a5\n  7967: a0 = a0 | a2\n  7970: a0 = a0 << 0x20\n  7973: a0 = a0 | a1\n  7976: a0 = reverse a0\n  7978: a3 = reverse a3\n  7980: a1 = reverse t1\n  7982: a2 = reverse t0\n  7984: a1 = a1 | a2\n  7987: a2 = a3 | a0\n  7990: a2 = a2 | a1\n  7993: a2 = a2 >> 0x20\n  7996: a0 = a0 | a1\n  7999: a0 = a0 << 0x20\n  8002: a0 = a0 | a2\n  8005: jump @138 if a0 == 0\n      : @137 (gas: 1)\n  8008: jump @256\n      : @138 (gas: 8)\n  8011: a0 = u64 [s1 + 0x1a8]\n  8015: a0 = a0 << 0x20\n  8018: a0 = a0 >> 0x20\n  8021: u64 [s1 + 0x1a0] = a0\n  8025: i32 a0 = a3 + 0\n  8027: a1 = 0x20\n  8030: u64 [s1 + 0x1a8] = a3\n  8034: ra = 70, jump @0\n      : @139 [@dyn 35] (gas: 113)\n  8039: a1 = u64 [s1 + 0x1b8]\n  8043: a1 = reverse a1\n  8045: a2 = u64 [s1 + 0x1d0]\n  8049: a2 = reverse a2\n  8051: a3 = u64 [s1 + 0x1c0]\n  8055: a3 = reverse a3\n  8057: a4 = u64 [s1 + 0x1c8]\n  8061: a4 = reverse a4\n  8063: a5 = a4 >> 0x38\n  8066: u8 [a0 + 0x1f] = a5\n  8069: a5 = a4 >> 0x30\n  8072: u8 [a0 + 0x1e] = a5\n  8075: a5 = a4 >> 0x28\n  8078: u8 [a0 + 0x1d] = a5\n  8081: a5 = a4 >> 0x20\n  8084: u8 [a0 + 0x1c] = a5\n  8087: a5 = a4 >> 0x18\n  8090: u8 [a0 + 0x1b] = a5\n  8093: a5 = a4 >> 0x10\n  8096: u8 [a0 + 0x1a] = a5\n  8099: a5 = a4 >> 0x8\n  8102: u8 [a0 + 0x19] = a5\n  8105: u8 [a0 + 0x18] = a4\n  8108: u8 [a0 + 0x10] = a3\n  8111: a4 = a3 >> 0x38\n  8114: u8 [a0 + 0x17] = a4\n  8117: a4 = a3 >> 0x30\n  8120: u8 [a0 + 0x16] = a4\n  8123: a4 = a3 >> 0x28\n  8126: u8 [a0 + 0x15] = a4\n  8129: a4 = a3 >> 0x20\n  8132: u8 [a0 + 0x14] = a4\n  8135: a4 = a3 >> 0x18\n  8138: u8 [a0 + 0x13] = a4\n  8141: a4 = a3 >> 0x10\n  8144: u8 [a0 + 0x12] = a4\n  8147: a3 = a3 >> 0x8\n  8150: u8 [a0 + 0x11] = a3\n  8153: u8 [a0 + 0x8] = a2\n  8156: a3 = a2 >> 0x38\n  8159: u8 [a0 + 0xf] = a3\n  8162: a3 = a2 >> 0x30\n  8165: u8 [a0 + 0xe] = a3\n  8168: a3 = a2 >> 0x28\n  8171: u8 [a0 + 0xd] = a3\n  8174: a3 = a2 >> 0x20\n  8177: u8 [a0 + 0xc] = a3\n  8180: a3 = a2 >> 0x18\n  8183: u8 [a0 + 0xb] = a3\n  8186: a3 = a2 >> 0x10\n  8189: u8 [a0 + 0xa] = a3\n  8192: a2 = a2 >> 0x8\n  8195: u8 [a0 + 0x9] = a2\n  8198: u8 [a0] = a1\n  8200: a2 = a1 >> 0x38\n  8203: u8 [a0 + 0x7] = a2\n  8206: a2 = a1 >> 0x30\n  8209: u8 [a0 + 0x6] = a2\n  8212: a2 = a1 >> 0x28\n  8215: u8 [a0 + 0x5] = a2\n  8218: a2 = a1 >> 0x20\n  8221: u8 [a0 + 0x4] = a2\n  8224: a2 = a1 >> 0x18\n  8227: u8 [a0 + 0x3] = a2\n  8230: a2 = a1 >> 0x10\n  8233: u8 [a0 + 0x2] = a2\n  8236: a1 = a1 >> 0x8\n  8239: u8 [a0 + 0x1] = a1\n  8242: u64 [s1 + 888] = 0\n  8246: a0 = u64 [s1 + 0x1a0]\n  8250: u64 [s1 + 0x370] = a0\n  8254: a0 = u64 [s1 + 0x1b0]\n  8258: u64 [s1 + 0x368] = a0\n  8262: a0 = u64 [0x20040]\n  8267: a1 = u64 [0x20048]\n  8272: a2 = u64 [0x20050]\n  8277: a3 = u64 [s1 + 0x1d8]\n  8281: u64 [s1 + 0x360] = a3\n  8285: u64 [s1 + 0x398] = a0\n  8289: u64 [s1 + 0x390] = a1\n  8293: u64 [s1 + 0x388] = a2\n  8297: a0 = u64 [0x20058]\n  8302: a2 = s1 + 0x380\n  8306: a3 = s1 + 0x360\n  8310: u64 [s1 + 0x380] = a0\n  8314: a0 = u64 [s1 + 0x1a8]\n  8318: ra = 0x48\n  8321: sp = sp + 0xffffffffffffff60\n  8325: u64 [sp + 0x98] = ra\n  8329: u64 [sp + 0x90] = s0\n  8333: u64 [sp + 0x88] = s1\n  8337: s0 = sp + 0xa0\n  8341: sp = sp & 0xffffffffffffffe0\n  8344: a4 = u64 [a3]\n  8346: u64 [sp + 0x38] = a4\n  8349: a4 = u64 [a3 + 0x8]\n  8352: u64 [sp + 0x28] = a4\n  8355: a4 = u64 [a3 + 0x10]\n  8358: u64 [sp + 0x20] = a4\n  8361: a3 = u64 [a3 + 0x18]\n  8364: u64 [sp + 0x18] = a3\n  8367: a3 = u64 [a2]\n  8369: u64 [sp + 0x10] = a3\n  8372: a3 = u64 [a2 + 0x8]\n  8375: u64 [sp + 0x8] = a3\n  8378: a3 = u64 [a2 + 0x10]\n  8381: u64 [sp] = a3\n  8383: s1 = u64 [a2 + 0x18]\n  8386: i32 a0 = a0 + 0\n  8388: a1 = 0x20\n  8391: u64 [sp + 0x30] = a1\n  8394: ra = 0x4\n  8397: jump @0\n      : @140 [@dyn 36] (gas: 1)\n  8400: jump @237\n      : @141 (gas: 1)\n  8403: jump @143 if a0 == 3690197961\n      : @142 (gas: 1)\n  8410: jump @361\n      : @143 (gas: 11)\n  8413: a0 = sp + 0xffffffffffffffe0\n  8416: a0 = a0 & 0xffffffffffffffe0\n  8419: u64 [s1 + 0x1d0] = a0\n  8423: sp = a0\n  8425: u64 [a0 + 24] = 0\n  8428: u64 [a0 + 16] = 0\n  8431: u64 [a0 + 8] = 0\n  8434: u64 [a0 + 0] = 0\n  8436: i32 a0 = a0 + 0\n  8438: ecalli 16 // 'value_transferred'\n  8440: fallthrough\n      : @144 (gas: 9)\n  8441: a3 = u64 [s1 + 0x1d0]\n  8445: a0 = u64 [a3 + 0x10]\n  8448: a1 = u64 [a3 + 0x18]\n  8451: a2 = u64 [a3 + 0x8]\n  8454: a3 = u64 [a3]\n  8456: a1 = a1 | a2\n  8459: a0 = a0 | a3\n  8462: a0 = a0 | a1\n  8465: jump @146 if a0 == 0\n      : @145 (gas: 1)\n  8468: jump @361\n      : @146 (gas: 3)\n  8471: a0 = u64 [s1 + 0x1d8]\n  8475: a0 = i32 [a0]\n  8477: jump @148 if a0 >u 163\n      : @147 (gas: 1)\n  8482: jump @361\n      : @148 (gas: 5)\n  8485: a0 = s1 + 0x1000\n  8489: i32 a0 = a0 + 0xfffffffffffffd00\n  8493: a1 = 0x4\n  8496: ecalli 3 // 'call_data_load'\n  8498: fallthrough\n      : @149 (gas: 9)\n  8499: a2 = s1 + 0x7ff\n  8503: a2 = a2 + 0x159\n  8507: a5 = u64 [a2 + 0x3c0]\n  8511: a3 = u64 [a2 + 0x3b8]\n  8515: a4 = u64 [a2 + 0x3b0]\n  8519: a0 = a3 | a5\n  8522: a1 = a4 <u 0x1\n  8525: a1 = 0 if a0 != 0\n  8527: jump @151 if a1 != 0\n      : @150 (gas: 1)\n  8530: jump @364\n      : @151 (gas: 19)\n  8533: a1 = u64 [a2 + 0x3a8]\n  8537: a0 = u64 [s1 + 0x1d8]\n  8541: t0 = u32 [a0]\n  8543: a0 = a1 + 0x23\n  8546: a2 = a0 <u a1\n  8549: t2 = a4 + a2\n  8552: u64 [s1 + 0x158] = a4\n  8556: a4 = t2 <u a4\n  8559: a4 = a2 if a2 == 0\n  8562: a4 = a4 + a3\n  8565: u64 [s1 + 0x160] = a3\n  8569: a2 = a4 <u a3\n  8572: u64 [s1 + 0x168] = a5\n  8576: a2 = a2 + a5\n  8579: a2 = a2 | a4\n  8582: a0 = a0 <u t0\n  8585: a0 = 0 if t2 != 0\n  8587: a0 = 0 if a2 != 0\n  8589: jump @153 if a0 != 0\n      : @152 (gas: 1)\n  8592: jump @362\n      : @153 (gas: 6)\n  8595: u64 [s1 + 0x178] = a1\n  8599: i32 a1 = a1 + 0x4\n  8602: a0 = s1 + 0x1000\n  8606: i32 a0 = a0 + 0xfffffffffffffd20\n  8610: ecalli 3 // 'call_data_load'\n  8612: fallthrough\n      : @154 (gas: 11)\n  8613: a3 = s1 + 0x7ff\n  8617: a3 = a3 + 0x159\n  8621: a0 = u64 [a3 + 0x3e0]\n  8625: a1 = u64 [a3 + 0x3d8]\n  8629: a2 = u64 [a3 + 0x3d0]\n  8633: u64 [s1 + 0x1d0] = a0\n  8637: u64 [s1 + 0x170] = a1\n  8641: a0 = a0 | a1\n  8644: a1 = a2 <u 0x1\n  8647: a1 = 0 if a0 != 0\n  8649: jump @156 if a1 != 0\n      : @155 (gas: 1)\n  8652: jump @369\n      : @156 (gas: 13)\n  8655: a1 = u64 [a3 + 0x3c8]\n  8659: a0 = a1 + 0x1f\n  8662: u64 [s1 + 0x1c0] = a1\n  8666: a1 = a0 <u a1\n  8669: u64 [s1 + 0x1c8] = a2\n  8673: a1 = a1 + a2\n  8676: a1 = a1 & 0x1\n  8679: u64 [s1 + 0x1b8] = a1\n  8683: a0 = a0 & 0xffffffffffffffe0\n  8686: u64 [s1 + 0x1b0] = a0\n  8690: a0 = 0x40\n  8693: a1 = 0x20\n  8696: ra = 74, jump @0\n      : @157 [@dyn 37] (gas: 119)\n  8701: a1 = u8 [a0 + 0x19]\n  8704: a2 = u8 [a0 + 0x18]\n  8707: a3 = u8 [a0 + 0x1a]\n  8710: a4 = u8 [a0 + 0x1b]\n  8713: a1 = a1 << 0x8\n  8716: a1 = a1 | a2\n  8719: a3 = a3 << 0x10\n  8722: a4 = a4 << 0x18\n  8725: a3 = a3 | a4\n  8728: a1 = a1 | a3\n  8731: a2 = u8 [a0 + 0x1d]\n  8734: a3 = u8 [a0 + 0x1c]\n  8737: a4 = u8 [a0 + 0x1e]\n  8740: a5 = u8 [a0 + 0x1f]\n  8743: a2 = a2 << 0x8\n  8746: a2 = a2 | a3\n  8749: a4 = a4 << 0x10\n  8752: a5 = a5 << 0x18\n  8755: a4 = a4 | a5\n  8758: a2 = a2 | a4\n  8761: a2 = a2 << 0x20\n  8764: t0 = a2 | a1\n  8767: a2 = u8 [a0 + 0x11]\n  8770: a3 = u8 [a0 + 0x10]\n  8773: a4 = u8 [a0 + 0x12]\n  8776: a5 = u8 [a0 + 0x13]\n  8779: a2 = a2 << 0x8\n  8782: a2 = a2 | a3\n  8785: a4 = a4 << 0x10\n  8788: a5 = a5 << 0x18\n  8791: a4 = a4 | a5\n  8794: a2 = a2 | a4\n  8797: a3 = u8 [a0 + 0x15]\n  8800: a4 = u8 [a0 + 0x14]\n  8803: a5 = u8 [a0 + 0x16]\n  8806: a1 = u8 [a0 + 0x17]\n  8809: a3 = a3 << 0x8\n  8812: a3 = a3 | a4\n  8815: a5 = a5 << 0x10\n  8818: a1 = a1 << 0x18\n  8821: a1 = a1 | a5\n  8824: a1 = a1 | a3\n  8827: a1 = a1 << 0x20\n  8830: t1 = a1 | a2\n  8833: a1 = u8 [a0 + 0x9]\n  8836: a3 = u8 [a0 + 0x8]\n  8839: a4 = u8 [a0 + 0xa]\n  8842: a5 = u8 [a0 + 0xb]\n  8845: a1 = a1 << 0x8\n  8848: a1 = a1 | a3\n  8851: a4 = a4 << 0x10\n  8854: a5 = a5 << 0x18\n  8857: a4 = a4 | a5\n  8860: a1 = a1 | a4\n  8863: a3 = u8 [a0 + 0xd]\n  8866: a4 = u8 [a0 + 0xc]\n  8869: a5 = u8 [a0 + 0xe]\n  8872: a2 = u8 [a0 + 0xf]\n  8875: a3 = a3 << 0x8\n  8878: a3 = a3 | a4\n  8881: a5 = a5 << 0x10\n  8884: a2 = a2 << 0x18\n  8887: a2 = a2 | a5\n  8890: a2 = a2 | a3\n  8893: a2 = a2 << 0x20\n  8896: a3 = a2 | a1\n  8899: a1 = u8 [a0 + 0x1]\n  8902: a2 = u8 [a0]\n  8904: a4 = u8 [a0 + 0x2]\n  8907: a5 = u8 [a0 + 0x3]\n  8910: a1 = a1 << 0x8\n  8913: a1 = a1 | a2\n  8916: a4 = a4 << 0x10\n  8919: a5 = a5 << 0x18\n  8922: a4 = a4 | a5\n  8925: a1 = a1 | a4\n  8928: a2 = u8 [a0 + 0x5]\n  8931: a4 = u8 [a0 + 0x4]\n  8934: a5 = u8 [a0 + 0x6]\n  8937: a0 = u8 [a0 + 0x7]\n  8940: a2 = a2 << 0x8\n  8943: a2 = a2 | a4\n  8946: a5 = a5 << 0x10\n  8949: a0 = a0 << 0x18\n  8952: a0 = a0 | a5\n  8955: a0 = a0 | a2\n  8958: a0 = a0 << 0x20\n  8961: a0 = a0 | a1\n  8964: t2 = reverse a0\n  8966: ra = reverse a3\n  8968: a3 = reverse t1\n  8970: a2 = reverse t0\n  8972: a1 = u64 [s1 + 0x1b0]\n  8976: a0 = a1 + 0x3f\n  8979: a1 = a0 <u a1\n  8982: a4 = u64 [s1 + 0x1b8]\n  8986: a1 = a1 + a4\n  8989: a0 = a0 & 0xffffffffffffffe0\n  8992: a0 = a0 + a2\n  8995: u64 [s1 + 0x188] = a2\n  8999: u64 [s1 + 0x1b8] = a0\n  9003: a2 = a0 <u a2\n  9006: a1 = a1 + a3\n  9009: a4 = a1 + a2\n  9012: a1 = a4 ^ a3\n  9015: u64 [s1 + 0x180] = a3\n  9019: a0 = a4 <u a3\n  9022: a0 = a2 if a1 == 0\n  9025: t0 = ra + a0\n  9028: a1 = t0 <u ra\n  9031: a5 = t2 + a1\n  9034: a2 = t0 >u 0\n  9036: a3 = a5 >u 0\n  9038: a3 = a2 if a5 == 0\n  9041: a2 = t0 | a5\n  9044: u64 [s1 + 0x1b0] = a4\n  9048: a4 = a4 >u 0\n  9050: a4 = a3 if a2 != 0\n  9053: jump @159 if a4 == 0\n      : @158 (gas: 1)\n  9056: jump @365\n      : @159 (gas: 7)\n  9059: a2 = a5 ^ t2\n  9062: a3 = a5 <u t2\n  9065: a1 = a3 if a2 != 0\n  9068: a3 = t0 ^ ra\n  9071: a2 = a2 | a3\n  9074: a0 = a1 if a2 != 0\n  9077: jump @161 if a0 == 0\n      : @160 (gas: 1)\n  9080: jump @365\n      : @161 (gas: 7)\n  9083: a0 = 0x40\n  9086: a1 = 0x20\n  9089: u64 [s1 + 0x198] = ra\n  9093: u64 [s1 + 0x190] = t2\n  9097: u64 [s1 + 0x1a8] = t0\n  9101: u64 [s1 + 0x1a0] = a5\n  9105: ra = 76, jump @0\n      : @162 [@dyn 38] (gas: 80)\n  9110: t0 = u64 [s1 + 0x198]\n  9114: a1 = u64 [s1 + 0x1a0]\n  9118: a1 = reverse a1\n  9120: a2 = u64 [s1 + 0x1a8]\n  9124: a2 = reverse a2\n  9126: a3 = u64 [s1 + 0x1b0]\n  9130: a3 = reverse a3\n  9132: a4 = u64 [s1 + 0x1b8]\n  9136: a4 = reverse a4\n  9138: u8 [a0 + 0x18] = a4\n  9141: a5 = a4 >> 0x38\n  9144: u8 [a0 + 0x1f] = a5\n  9147: a5 = a4 >> 0x30\n  9150: u8 [a0 + 0x1e] = a5\n  9153: a5 = a4 >> 0x28\n  9156: u8 [a0 + 0x1d] = a5\n  9159: a5 = a4 >> 0x20\n  9162: u8 [a0 + 0x1c] = a5\n  9165: a5 = a4 >> 0x18\n  9168: u8 [a0 + 0x1b] = a5\n  9171: a5 = a4 >> 0x10\n  9174: u8 [a0 + 0x1a] = a5\n  9177: a4 = a4 >> 0x8\n  9180: u8 [a0 + 0x19] = a4\n  9183: u8 [a0 + 0x10] = a3\n  9186: a4 = a3 >> 0x38\n  9189: u8 [a0 + 0x17] = a4\n  9192: a4 = a3 >> 0x30\n  9195: u8 [a0 + 0x16] = a4\n  9198: a4 = a3 >> 0x28\n  9201: u8 [a0 + 0x15] = a4\n  9204: a4 = a3 >> 0x20\n  9207: u8 [a0 + 0x14] = a4\n  9210: a4 = a3 >> 0x18\n  9213: u8 [a0 + 0x13] = a4\n  9216: a4 = a3 >> 0x10\n  9219: u8 [a0 + 0x12] = a4\n  9222: a3 = a3 >> 0x8\n  9225: u8 [a0 + 0x11] = a3\n  9228: u8 [a0 + 0x8] = a2\n  9231: a3 = a2 >> 0x38\n  9234: u8 [a0 + 0xf] = a3\n  9237: a3 = a2 >> 0x30\n  9240: u8 [a0 + 0xe] = a3\n  9243: a3 = a2 >> 0x28\n  9246: u8 [a0 + 0xd] = a3\n  9249: a3 = a2 >> 0x20\n  9252: u8 [a0 + 0xc] = a3\n  9255: a3 = a2 >> 0x18\n  9258: u8 [a0 + 0xb] = a3\n  9261: a3 = a2 >> 0x10\n  9264: u8 [a0 + 0xa] = a3\n  9267: a2 = a2 >> 0x8\n  9270: u8 [a0 + 0x9] = a2\n  9273: u8 [a0] = a1\n  9275: a2 = a1 >> 0x38\n  9278: u8 [a0 + 0x7] = a2\n  9281: a2 = a1 >> 0x30\n  9284: u8 [a0 + 0x6] = a2\n  9287: a2 = a1 >> 0x28\n  9290: u8 [a0 + 0x5] = a2\n  9293: a2 = a1 >> 0x20\n  9296: u8 [a0 + 0x4] = a2\n  9299: a2 = a1 >> 0x18\n  9302: u8 [a0 + 0x3] = a2\n  9305: a2 = a1 >> 0x10\n  9308: u8 [a0 + 0x2] = a2\n  9311: a1 = a1 >> 0x8\n  9314: a4 = u64 [s1 + 0x188]\n  9318: a2 = a4 | t0\n  9321: a3 = u64 [s1 + 0x180]\n  9325: a5 = u64 [s1 + 0x190]\n  9329: a3 = a3 | a5\n  9332: a2 = a2 | a3\n  9335: a2 = a2 >> 0x20\n  9338: a3 = a3 | t0\n  9341: a3 = a3 << 0x20\n  9344: a2 = a2 | a3\n  9347: u8 [a0 + 0x1] = a1\n  9350: jump @164 if a2 == 0\n      : @163 (gas: 1)\n  9353: jump @256\n      : @164 (gas: 4)\n  9356: i32 a0 = a4 + 0\n  9358: a1 = 0x20\n  9361: u64 [s1 + 0x1b8] = a0\n  9365: ra = 78, jump @0\n      : @165 [@dyn 39] (gas: 108)\n  9370: a1 = u64 [s1 + 0x178]\n  9374: a2 = u64 [s1 + 0x1c0]\n  9378: a2 = a2 + a1\n  9381: a1 = a2 <u a1\n  9384: a5 = u64 [s1 + 0x158]\n  9388: a3 = u64 [s1 + 0x1c8]\n  9392: a3 = a3 + a5\n  9395: a3 = a3 + a1\n  9398: a4 = a3 ^ a5\n  9401: a5 = a3 <u a5\n  9404: a5 = a1 if a4 == 0\n  9407: a1 = u64 [s1 + 0x1d0]\n  9411: t1 = reverse a1\n  9413: a4 = t1 >> 0x18\n  9416: u8 [a0 + 0x3] = a4\n  9419: a4 = t1 >> 0x10\n  9422: u8 [a0 + 0x2] = a4\n  9425: a4 = t1 >> 0x8\n  9428: u8 [a0 + 0x1] = a4\n  9431: ra = u64 [s1 + 0x170]\n  9435: t0 = u64 [s1 + 0x160]\n  9439: a4 = t0 + ra\n  9442: a5 = a5 + a4\n  9445: t0 = a4 <u t0\n  9448: t2 = a5 <u a4\n  9451: a4 = u64 [s1 + 0x168]\n  9455: a4 = a4 + a1\n  9458: a4 = a4 + t0\n  9461: t2 = t2 + a4\n  9464: t0 = a2 + 0x24\n  9467: a2 = t0 <u a2\n  9470: a4 = a3 + a2\n  9473: a3 = a4 <u a3\n  9476: a3 = a2 if a2 == 0\n  9479: u8 [a0] = t1\n  9481: a2 = u64 [s1 + 0x1d8]\n  9485: a2 = u32 [a2]\n  9487: a3 = a3 + a5\n  9490: a5 = a3 <u a5\n  9493: a5 = a5 + t2\n  9496: a2 = a2 <u t0\n  9499: t0 = a4 <u 0x1\n  9502: t2 = a2 ^ 0x1\n  9505: t2 = t0 if a4 != 0\n  9508: t0 = u64 [s1 + 0x1c0]\n  9512: a4 = a3 <u 0x1\n  9515: a2 = a5 <u 0x1\n  9518: a2 = a4 if a5 == 0\n  9521: a3 = a3 | a5\n  9524: a5 = u64 [s1 + 0x1c8]\n  9528: t2 = a2 if a3 != 0\n  9531: a2 = reverse t0\n  9533: a3 = a2 >> 0x38\n  9536: u8 [a0 + 0x1f] = a3\n  9539: a3 = a2 >> 0x30\n  9542: u8 [a0 + 0x1e] = a3\n  9545: a3 = a2 >> 0x28\n  9548: u8 [a0 + 0x1d] = a3\n  9551: a3 = a2 >> 0x20\n  9554: u8 [a0 + 0x1c] = a3\n  9557: a3 = a2 >> 0x18\n  9560: u8 [a0 + 0x1b] = a3\n  9563: a3 = a2 >> 0x10\n  9566: u8 [a0 + 0x1a] = a3\n  9569: a3 = a2 >> 0x8\n  9572: u8 [a0 + 0x19] = a3\n  9575: a3 = reverse a5\n  9577: u8 [a0 + 0x18] = a2\n  9580: a2 = a3 >> 0x38\n  9583: u8 [a0 + 0x17] = a2\n  9586: a2 = a3 >> 0x30\n  9589: u8 [a0 + 0x16] = a2\n  9592: a2 = a3 >> 0x28\n  9595: u8 [a0 + 0x15] = a2\n  9598: a2 = a3 >> 0x20\n  9601: u8 [a0 + 0x14] = a2\n  9604: a2 = a3 >> 0x18\n  9607: u8 [a0 + 0x13] = a2\n  9610: a2 = a3 >> 0x10\n  9613: u8 [a0 + 0x12] = a2\n  9616: a2 = reverse ra\n  9618: u8 [a0 + 0x10] = a3\n  9621: a3 = a3 >> 0x8\n  9624: u8 [a0 + 0x11] = a3\n  9627: a3 = a2 >> 0x38\n  9630: u8 [a0 + 0xf] = a3\n  9633: a3 = a2 >> 0x30\n  9636: u8 [a0 + 0xe] = a3\n  9639: a3 = a2 >> 0x28\n  9642: u8 [a0 + 0xd] = a3\n  9645: a3 = a2 >> 0x20\n  9648: u8 [a0 + 0xc] = a3\n  9651: a3 = a2 >> 0x18\n  9654: u8 [a0 + 0xb] = a3\n  9657: a3 = a2 >> 0x10\n  9660: u8 [a0 + 0xa] = a3\n  9663: u8 [a0 + 0x8] = a2\n  9666: a2 = a2 >> 0x8\n  9669: u8 [a0 + 0x9] = a2\n  9672: a2 = t1 >> 0x38\n  9675: u8 [a0 + 0x7] = a2\n  9678: a2 = t1 >> 0x30\n  9681: u8 [a0 + 0x6] = a2\n  9684: a2 = t1 >> 0x28\n  9687: u8 [a0 + 0x5] = a2\n  9690: a1 = t1 >> 0x20\n  9693: u8 [a0 + 0x4] = a1\n  9696: jump @167 if t2 != 0\n      : @166 (gas: 1)\n  9699: jump @361\n      : @167 (gas: 11)\n  9702: a0 = t0 | ra\n  9705: a3 = u64 [s1 + 0x1d0]\n  9709: a1 = a5 | a3\n  9712: a0 = a0 | a1\n  9715: a0 = a0 >> 0x20\n  9718: a1 = a1 | ra\n  9721: a1 = a1 << 0x20\n  9724: a0 = a0 | a1\n  9727: a1 = u64 [s1 + 0x198]\n  9731: a2 = u64 [s1 + 0x190]\n  9735: jump @169 if a0 == 0\n      : @168 (gas: 1)\n  9738: jump @256\n      : @169 (gas: 8)\n  9741: a0 = a1 | a2\n  9744: a3 = 0xffffffe0\n  9754: a1 = u64 [s1 + 0x188]\n  9758: a1 = a1 <u a3\n  9761: a2 = u64 [s1 + 0x180]\n  9765: a1 = 0 if a2 != 0\n  9767: a1 = 0 if a0 != 0\n  9769: jump @171 if a1 != 0\n      : @170 (gas: 1)\n  9772: jump @256\n      : @171 (gas: 9)\n  9775: a0 = u64 [s1 + 0x178]\n  9779: i32 a0 = a0 + 0x24\n  9782: u64 [s1 + 0x1b0] = a0\n  9786: a0 = u64 [s1 + 0x1b8]\n  9790: i32 a0 = a0 + 0x20\n  9793: i32 a1 = t0 + 0\n  9795: u64 [s1 + 0x1a8] = a1\n  9799: u64 [s1 + 0x1d8] = a3\n  9803: ra = 80, jump @0\n      : @172 [@dyn 40] (gas: 5)\n  9808: i32 a0 = a0 + 0\n  9810: a1 = u64 [s1 + 0x1a8]\n  9814: a2 = u64 [s1 + 0x1b0]\n  9818: ecalli 2 // 'call_data_copy'\n  9820: fallthrough\n      : @173 (gas: 28)\n  9821: a5 = u64 [s1 + 0x198]\n  9825: a4 = u64 [s1 + 0x180]\n  9829: a1 = u64 [s1 + 0x188]\n  9833: t0 = u64 [s1 + 0x1c0]\n  9837: t0 = t0 + a1\n  9840: a1 = t0 <u a1\n  9843: a2 = u64 [s1 + 0x1c8]\n  9847: a2 = a2 + a4\n  9850: a2 = a2 + a1\n  9853: a3 = a2 ^ a4\n  9856: a4 = a2 <u a4\n  9859: a4 = a1 if a3 == 0\n  9862: a1 = u64 [s1 + 0x170]\n  9866: a1 = a1 + a5\n  9869: a3 = a1 <u a5\n  9872: a5 = u64 [s1 + 0x190]\n  9876: a0 = u64 [s1 + 0x1d0]\n  9880: a5 = a5 + a0\n  9883: a3 = a3 + a5\n  9886: a4 = a4 + a1\n  9889: a1 = a4 <u a1\n  9892: a1 = a1 + a3\n  9895: a1 = a1 | a4\n  9898: a3 = u64 [s1 + 0x1d8]\n  9902: a3 = t0 <u a3\n  9905: a3 = 0 if a2 != 0\n  9907: a3 = 0 if a1 != 0\n  9909: jump @175 if a3 != 0\n      : @174 (gas: 1)\n  9912: jump @256\n      : @175 (gas: 3)\n  9915: i32 a0 = t0 + 0x20\n  9918: a1 = 0x20\n  9921: ra = 82, jump @0\n      : @176 [@dyn 41] (gas: 99)\n  9926: u8 [a0 + 31] = 0\n  9929: u8 [a0 + 30] = 0\n  9932: u8 [a0 + 29] = 0\n  9935: u8 [a0 + 28] = 0\n  9938: u8 [a0 + 27] = 0\n  9941: u8 [a0 + 26] = 0\n  9944: u8 [a0 + 25] = 0\n  9947: u8 [a0 + 24] = 0\n  9950: u8 [a0 + 23] = 0\n  9953: u8 [a0 + 22] = 0\n  9956: u8 [a0 + 21] = 0\n  9959: u8 [a0 + 20] = 0\n  9962: u8 [a0 + 19] = 0\n  9965: u8 [a0 + 18] = 0\n  9968: u8 [a0 + 17] = 0\n  9971: u8 [a0 + 16] = 0\n  9974: u8 [a0 + 15] = 0\n  9977: u8 [a0 + 14] = 0\n  9980: u8 [a0 + 13] = 0\n  9983: u8 [a0 + 12] = 0\n  9986: u8 [a0 + 11] = 0\n  9989: u8 [a0 + 10] = 0\n  9992: u8 [a0 + 9] = 0\n  9995: u8 [a0 + 8] = 0\n  9998: u8 [a0 + 7] = 0\n 10001: u8 [a0 + 6] = 0\n 10004: u8 [a0 + 5] = 0\n 10007: u8 [a0 + 4] = 0\n 10010: u8 [a0 + 3] = 0\n 10013: u8 [a0 + 2] = 0\n 10016: u8 [a0 + 1] = 0\n 10019: u8 [a0 + 0] = 0\n 10021: a0 = s1 + 0x1000\n 10025: i32 a0 = a0 + 0xfffffffffffffd40\n 10029: a1 = 0x24\n 10032: ecalli 3 // 'call_data_load'\n 10034: a1 = s1 + 0x7ff\n 10038: a1 = a1 + 0x159\n 10042: a0 = u64 [a1 + 0x400]\n 10046: u64 [s1 + 0xc0] = a0\n 10050: a0 = u64 [a1 + 0x3f8]\n 10054: u64 [s1 + 0xc8] = a0\n 10058: a0 = u64 [a1 + 0x3f0]\n 10062: u64 [s1 + 0xd0] = a0\n 10066: a0 = u64 [a1 + 0x3e8]\n 10070: u64 [s1 + 0xd8] = a0\n 10074: a0 = s1 + 0x1000\n 10078: i32 a0 = a0 + 0xfffffffffffffd60\n 10082: a1 = 0x44\n 10085: ecalli 3 // 'call_data_load'\n 10087: a1 = s1 + 0x7ff\n 10091: a1 = a1 + 0x159\n 10095: a0 = u64 [a1 + 0x420]\n 10099: u64 [s1 + 0x100] = a0\n 10103: a0 = u64 [a1 + 0x418]\n 10107: u64 [s1 + 0x108] = a0\n 10111: a0 = u64 [a1 + 0x410]\n 10115: u64 [s1 + 0x110] = a0\n 10119: a0 = u64 [a1 + 0x408]\n 10123: u64 [s1 + 0x118] = a0\n 10127: a0 = s1 + 0x1000\n 10131: i32 a0 = a0 + 0xfffffffffffffd80\n 10135: a1 = 0x64\n 10138: ecalli 3 // 'call_data_load'\n 10140: a1 = s1 + 0x7ff\n 10144: a1 = a1 + 0x159\n 10148: a0 = u64 [a1 + 0x440]\n 10152: u64 [s1 + 0x140] = a0\n 10156: a0 = u64 [a1 + 0x438]\n 10160: u64 [s1 + 0x148] = a0\n 10164: a0 = u64 [a1 + 0x430]\n 10168: u64 [s1 + 0x150] = a0\n 10172: a0 = u64 [a1 + 0x428]\n 10176: u64 [s1 + 0x158] = a0\n 10180: a0 = s1 + 0x1000\n 10184: i32 a0 = a0 + 0xfffffffffffffda0\n 10188: a1 = 0x84\n 10192: ecalli 3 // 'call_data_load'\n 10194: a1 = s1 + 0x7ff\n 10198: a1 = a1 + 0x159\n 10202: a0 = u64 [a1 + 0x460]\n 10206: u64 [s1 + 0x138] = a0\n 10210: a0 = u64 [a1 + 0x458]\n 10214: u64 [s1 + 0x130] = a0\n 10218: a0 = u64 [a1 + 0x450]\n 10222: u64 [s1 + 0x128] = a0\n 10226: a0 = u64 [a1 + 0x448]\n 10230: u64 [s1 + 0x120] = a0\n 10234: u64 [a1 + 0] = 0\n 10236: u64 [a1 + 4294967288] = 0\n 10239: a0 = s1 + 0x1000\n 10243: u64 [a0 + 4294965576] = 0\n 10247: a0 = s1 + 0x7ff\n 10251: a0 = a0 + 0x161\n 10255: a2 = s1 + 0x7ff\n 10259: a2 = a2 + 0x141\n 10263: a1 = s1 + 0x1000\n 10267: u64 [a1 + 4294965568] = 0\n 10271: ra = 84, jump @25\n      : @177 [@dyn 42] (gas: 14)\n 10276: a2 = s1 + 0x7ff\n 10280: a2 = a2 + 0x159\n 10284: a0 = u64 [a2 + 0x18]\n 10287: a1 = u64 [a2 + 0x10]\n 10290: u64 [s1 + 0x1d0] = a1\n 10294: a1 = u64 [a2 + 0x8]\n 10297: u64 [s1 + 0x1d8] = a1\n 10301: a0 = a0 << 0x20\n 10304: a0 = a0 >> 0x20\n 10307: u64 [s1 + 0x1c8] = a0\n 10311: a0 = s1 + 0x1000\n 10315: i32 a0 = a0 + 0xfffffffffffffdc0\n 10319: ecalli 5 // 'caller'\n 10321: fallthrough\n      : @178 (gas: 24)\n 10322: a2 = s1 + 0x7ff\n 10326: a2 = a2 + 0x159\n 10330: a0 = u64 [a2 + 0x470]\n 10334: a1 = u64 [a2 + 0x468]\n 10338: a2 = i32 [a2 + 0x478]\n 10342: a0 = reverse a0\n 10344: a3 = a0 >> 0x20\n 10347: a1 = reverse a1\n 10349: a4 = a1 << 0x20\n 10352: a3 = a3 | a4\n 10355: a0 = a0 << 0x20\n 10358: a2 = reverse a2\n 10360: a2 = a2 >> 0x20\n 10363: a0 = a0 | a2\n 10366: a1 = a1 >> 0x20\n 10369: a2 = u64 [s1 + 0x1c8]\n 10373: a1 = a1 ^ a2\n 10376: a2 = u64 [s1 + 0x1d8]\n 10380: a0 = a0 ^ a2\n 10383: a0 = a0 | a1\n 10386: a1 = u64 [s1 + 0x1d0]\n 10390: a1 = a1 ^ a3\n 10393: a0 = a0 | a1\n 10396: jump @180 if a0 == 0\n      : @179 (gas: 1)\n 10399: jump @386\n      : @180 (gas: 20)\n 10402: a0 = u64 [s1 + 0x158]\n 10406: a1 = u64 [s1 + 0x120]\n 10410: a0 = a0 <u a1\n 10413: a2 = u64 [s1 + 0x150]\n 10417: a3 = u64 [s1 + 0x128]\n 10421: a1 = a3 ^ a2\n 10424: a2 = a2 <u a3\n 10427: a2 = a0 if a1 == 0\n 10430: a4 = u64 [s1 + 0x148]\n 10434: a0 = u64 [s1 + 0x130]\n 10438: t0 = a4 <u a0\n 10441: a3 = u64 [s1 + 0x140]\n 10445: a5 = u64 [s1 + 0x138]\n 10449: a1 = a5 ^ a3\n 10452: a3 = a3 <u a5\n 10455: a3 = t0 if a1 == 0\n 10458: a0 = a0 ^ a4\n 10461: a0 = a0 | a1\n 10464: a3 = a2 if a0 == 0\n 10467: jump @182 if a3 != 0\n      : @181 (gas: 1)\n 10470: jump @283\n      : @182 (gas: 8)\n 10473: a0 = u64 [s1 + 0x118]\n 10477: a1 = u64 [s1 + 0x108]\n 10481: a0 = a0 | a1\n 10484: a1 = u64 [s1 + 0x110]\n 10488: a3 = u64 [s1 + 0x100]\n 10492: a1 = a1 | a3\n 10495: a0 = a0 | a1\n 10498: jump @184 if a0 == 0\n      : @183 (gas: 1)\n 10501: jump @297\n      : @184 (gas: 3)\n 10504: a0 = 0x40\n 10507: a1 = 0x20\n 10510: ra = 86, jump @0\n      : @185 [@dyn 43] (gas: 102)\n 10515: a1 = u8 [a0 + 0x11]\n 10518: a2 = u8 [a0 + 0x10]\n 10521: a3 = u8 [a0 + 0x12]\n 10524: a4 = u8 [a0 + 0x13]\n 10527: a1 = a1 << 0x8\n 10530: a1 = a1 | a2\n 10533: a3 = a3 << 0x10\n 10536: a4 = a4 << 0x18\n 10539: a3 = a3 | a4\n 10542: a1 = a1 | a3\n 10545: a2 = u8 [a0 + 0x15]\n 10548: a3 = u8 [a0 + 0x14]\n 10551: a4 = u8 [a0 + 0x16]\n 10554: a5 = u8 [a0 + 0x17]\n 10557: a2 = a2 << 0x8\n 10560: a2 = a2 | a3\n 10563: a4 = a4 << 0x10\n 10566: a5 = a5 << 0x18\n 10569: a4 = a4 | a5\n 10572: a2 = a2 | a4\n 10575: a2 = a2 << 0x20\n 10578: t0 = a2 | a1\n 10581: a2 = u8 [a0 + 0x1]\n 10584: a3 = u8 [a0]\n 10586: a4 = u8 [a0 + 0x2]\n 10589: a5 = u8 [a0 + 0x3]\n 10592: a2 = a2 << 0x8\n 10595: a2 = a2 | a3\n 10598: a4 = a4 << 0x10\n 10601: a5 = a5 << 0x18\n 10604: a4 = a4 | a5\n 10607: a2 = a2 | a4\n 10610: a3 = u8 [a0 + 0x5]\n 10613: a4 = u8 [a0 + 0x4]\n 10616: a5 = u8 [a0 + 0x6]\n 10619: a1 = u8 [a0 + 0x7]\n 10622: a3 = a3 << 0x8\n 10625: a3 = a3 | a4\n 10628: a5 = a5 << 0x10\n 10631: a1 = a1 << 0x18\n 10634: a1 = a1 | a5\n 10637: a1 = a1 | a3\n 10640: a1 = a1 << 0x20\n 10643: t1 = a1 | a2\n 10646: a1 = u8 [a0 + 0x19]\n 10649: a3 = u8 [a0 + 0x18]\n 10652: a4 = u8 [a0 + 0x1a]\n 10655: a5 = u8 [a0 + 0x1b]\n 10658: a1 = a1 << 0x8\n 10661: a1 = a1 | a3\n 10664: a4 = a4 << 0x10\n 10667: a5 = a5 << 0x18\n 10670: a4 = a4 | a5\n 10673: a1 = a1 | a4\n 10676: a3 = u8 [a0 + 0x1d]\n 10679: a4 = u8 [a0 + 0x1c]\n 10682: a5 = u8 [a0 + 0x1e]\n 10685: a2 = u8 [a0 + 0x1f]\n 10688: a3 = a3 << 0x8\n 10691: a3 = a3 | a4\n 10694: a5 = a5 << 0x10\n 10697: a2 = a2 << 0x18\n 10700: a2 = a2 | a5\n 10703: a2 = a2 | a3\n 10706: a2 = a2 << 0x20\n 10709: a3 = a2 | a1\n 10712: a1 = u8 [a0 + 0x9]\n 10715: a2 = u8 [a0 + 0x8]\n 10718: a4 = u8 [a0 + 0xa]\n 10721: a5 = u8 [a0 + 0xb]\n 10724: a1 = a1 << 0x8\n 10727: a1 = a1 | a2\n 10730: a4 = a4 << 0x10\n 10733: a5 = a5 << 0x18\n 10736: a4 = a4 | a5\n 10739: a1 = a1 | a4\n 10742: a2 = u8 [a0 + 0xd]\n 10745: a4 = u8 [a0 + 0xc]\n 10748: a5 = u8 [a0 + 0xe]\n 10751: a0 = u8 [a0 + 0xf]\n 10754: a2 = a2 << 0x8\n 10757: a2 = a2 | a4\n 10760: a5 = a5 << 0x10\n 10763: a0 = a0 << 0x18\n 10766: a0 = a0 | a5\n 10769: a0 = a0 | a2\n 10772: a0 = a0 << 0x20\n 10775: a0 = a0 | a1\n 10778: a2 = reverse a0\n 10780: a1 = reverse a3\n 10782: a3 = reverse t1\n 10784: a0 = reverse t0\n 10786: u64 [s1 + 0x1d0] = a0\n 10790: a0 = a0 | a3\n 10793: u64 [s1 + 0x1d8] = a1\n 10797: a1 = a1 | a2\n 10800: a1 = a1 | a0\n 10803: a1 = a1 >> 0x20\n 10806: a0 = a0 | a2\n 10809: a0 = a0 << 0x20\n 10812: a0 = a0 | a1\n 10815: jump @187 if a0 == 0\n      : @186 (gas: 1)\n 10818: jump @256\n      : @187 (gas: 6)\n 10821: a0 = i32 [s1 + 0x1d8]\n 10825: a1 = 0x20\n 10828: u64 [s1 + 0x1b8] = a0\n 10832: u64 [s1 + 0x1c8] = a2\n 10836: u64 [s1 + 0x1c0] = a3\n 10840: ra = 88, jump @0\n      : @188 [@dyn 44] (gas: 44)\n 10845: u8 [a0 + 31] = 0\n 10848: u8 [a0 + 30] = 0\n 10851: u8 [a0 + 29] = 0\n 10854: u8 [a0 + 28] = 0\n 10857: u8 [a0 + 27] = 0\n 10860: u8 [a0 + 26] = 0\n 10863: u8 [a0 + 25] = 0\n 10866: u8 [a0 + 24] = 0\n 10869: u8 [a0 + 23] = 0\n 10872: u8 [a0 + 22] = 0\n 10875: u8 [a0 + 21] = 0\n 10878: u8 [a0 + 20] = 0\n 10881: u8 [a0 + 19] = 0\n 10884: u8 [a0 + 18] = 0\n 10887: u8 [a0 + 17] = 0\n 10890: u8 [a0 + 16] = 0\n 10893: u8 [a0 + 15] = 0\n 10896: u8 [a0 + 14] = 0\n 10899: u8 [a0 + 13] = 0\n 10902: u8 [a0 + 12] = 0\n 10905: u8 [a0 + 11] = 0\n 10908: u8 [a0 + 10] = 0\n 10911: u8 [a0 + 9] = 0\n 10914: u8 [a0 + 8] = 0\n 10917: u8 [a0 + 7] = 0\n 10920: u8 [a0 + 6] = 0\n 10923: u8 [a0 + 5] = 0\n 10926: u8 [a0 + 3] = 0xa0\n 10931: u8 [a0 + 2] = 0x79\n 10935: u8 [a0 + 1] = 0xc3\n 10940: u8 [a0 + 0] = 0x8\n 10943: a1 = u64 [s1 + 0x1c8]\n 10947: a3 = u64 [s1 + 0x1c0]\n 10951: a3 = a3 | a1\n 10954: a4 = 0x100000000\n 10964: a1 = 0xfffffffc\n 10974: a2 = u64 [s1 + 0x1d8]\n 10978: a1 = a2 <u a1\n 10981: a2 = u64 [s1 + 0x1d0]\n 10985: a1 = 0 if a2 != 0\n 10987: u64 [s1 + 0x1c8] = a3\n 10991: a1 = 0 if a3 != 0\n 10993: u8 [a0 + 4] = 0\n 10996: jump @190 if a1 != 0\n      : @189 (gas: 1)\n 10999: jump @256\n      : @190 (gas: 5)\n 11002: a0 = u64 [s1 + 0x1b8]\n 11006: i32 a0 = a0 + 0x4\n 11009: a1 = 0x20\n 11012: u64 [s1 + 0x1c0] = a4\n 11016: ra = 90, jump @0\n      : @191 [@dyn 45] (gas: 41)\n 11021: u8 [a0 + 31] = 0x20\n 11025: u8 [a0 + 30] = 0\n 11028: u8 [a0 + 29] = 0\n 11031: u8 [a0 + 28] = 0\n 11034: u8 [a0 + 27] = 0\n 11037: u8 [a0 + 26] = 0\n 11040: u8 [a0 + 25] = 0\n 11043: u8 [a0 + 24] = 0\n 11046: u8 [a0 + 23] = 0\n 11049: u8 [a0 + 22] = 0\n 11052: u8 [a0 + 21] = 0\n 11055: u8 [a0 + 20] = 0\n 11058: u8 [a0 + 19] = 0\n 11061: u8 [a0 + 18] = 0\n 11064: u8 [a0 + 17] = 0\n 11067: u8 [a0 + 16] = 0\n 11070: u8 [a0 + 15] = 0\n 11073: u8 [a0 + 14] = 0\n 11076: u8 [a0 + 13] = 0\n 11079: u8 [a0 + 12] = 0\n 11082: u8 [a0 + 11] = 0\n 11085: u8 [a0 + 10] = 0\n 11088: u8 [a0 + 9] = 0\n 11091: u8 [a0 + 8] = 0\n 11094: u8 [a0 + 7] = 0\n 11097: u8 [a0 + 6] = 0\n 11100: u8 [a0 + 5] = 0\n 11103: u8 [a0 + 4] = 0\n 11106: u8 [a0 + 3] = 0\n 11109: u8 [a0 + 2] = 0\n 11112: u8 [a0 + 1] = 0\n 11115: a1 = u64 [s1 + 0x1c0]\n 11119: a1 = a1 + 0xffffffffffffffdc\n 11122: a2 = u64 [s1 + 0x1d8]\n 11126: a1 = a2 <u a1\n 11129: a2 = u64 [s1 + 0x1d0]\n 11133: a1 = 0 if a2 != 0\n 11135: a2 = u64 [s1 + 0x1c8]\n 11139: a1 = 0 if a2 != 0\n 11141: u8 [a0 + 0] = 0\n 11143: jump @193 if a1 != 0\n      : @192 (gas: 1)\n 11146: jump @256\n      : @193 (gas: 4)\n 11149: a0 = u64 [s1 + 0x1b8]\n 11153: i32 a0 = a0 + 0x24\n 11156: a1 = 0x20\n 11159: ra = 92, jump @0\n      : @194 [@dyn 46] (gas: 42)\n 11164: u8 [a0 + 31] = 0x21\n 11168: u8 [a0 + 30] = 0\n 11171: u8 [a0 + 29] = 0\n 11174: u8 [a0 + 28] = 0\n 11177: u8 [a0 + 27] = 0\n 11180: u8 [a0 + 26] = 0\n 11183: u8 [a0 + 25] = 0\n 11186: u8 [a0 + 24] = 0\n 11189: u8 [a0 + 23] = 0\n 11192: u8 [a0 + 22] = 0\n 11195: u8 [a0 + 21] = 0\n 11198: u8 [a0 + 20] = 0\n 11201: u8 [a0 + 19] = 0\n 11204: u8 [a0 + 18] = 0\n 11207: u8 [a0 + 17] = 0\n 11210: u8 [a0 + 16] = 0\n 11213: u8 [a0 + 15] = 0\n 11216: u8 [a0 + 14] = 0\n 11219: u8 [a0 + 13] = 0\n 11222: u8 [a0 + 12] = 0\n 11225: u8 [a0 + 11] = 0\n 11228: u8 [a0 + 10] = 0\n 11231: u8 [a0 + 9] = 0\n 11234: u8 [a0 + 8] = 0\n 11237: u8 [a0 + 7] = 0\n 11240: u8 [a0 + 6] = 0\n 11243: u8 [a0 + 5] = 0\n 11246: u8 [a0 + 4] = 0\n 11249: u8 [a0 + 3] = 0\n 11252: u8 [a0 + 2] = 0\n 11255: u8 [a0 + 1] = 0\n 11258: a1 = 0x100000000\n 11268: u64 [s1 + 0x1c0] = a1\n 11272: a1 = 0xffffffbc\n 11282: a2 = u64 [s1 + 0x1d8]\n 11286: a1 = a2 <u a1\n 11289: a2 = u64 [s1 + 0x1d0]\n 11293: a1 = 0 if a2 != 0\n 11295: a2 = u64 [s1 + 0x1c8]\n 11299: a1 = 0 if a2 != 0\n 11301: u8 [a0 + 0] = 0\n 11303: jump @196 if a1 != 0\n      : @195 (gas: 1)\n 11306: jump @256\n      : @196 (gas: 4)\n 11309: a0 = u64 [s1 + 0x1b8]\n 11313: i32 a0 = a0 + 0x44\n 11316: a1 = 0x20\n 11319: ra = 94, jump @0\n      : @197 [@dyn 47] (gas: 43)\n 11324: a5 = 0x20\n 11327: u8 [a0 + 0x1f] = a5\n 11330: u8 [a0 + 30] = 0x6e\n 11334: u8 [a0 + 29] = 0x61\n 11338: u8 [a0 + 28] = 0x68\n 11342: u8 [a0 + 27] = 0x74\n 11346: u8 [a0 + 0x1a] = a5\n 11349: u8 [a0 + 25] = 0x72\n 11353: u8 [a0 + 24] = 0x65\n 11357: u8 [a0 + 23] = 0x74\n 11361: u8 [a0 + 22] = 0x61\n 11365: u8 [a0 + 21] = 0x65\n 11369: u8 [a0 + 20] = 0x72\n 11373: u8 [a0 + 19] = 0x67\n 11377: u8 [a0 + 0x12] = a5\n 11380: u8 [a0 + 17] = 0x65\n 11384: u8 [a0 + 16] = 0x62\n 11388: u8 [a0 + 0xf] = a5\n 11391: u8 [a0 + 14] = 0x74\n 11395: u8 [a0 + 13] = 0x73\n 11399: u8 [a0 + 12] = 0x75\n 11403: u8 [a0 + 11] = 0x6d\n 11407: u8 [a0 + 0xa] = a5\n 11410: u8 [a0 + 9] = 0x79\n 11414: u8 [a0 + 8] = 0x6c\n 11418: a4 = 0x70\n 11421: u8 [a0 + 0x7] = a4\n 11424: u8 [a0 + 0x6] = a4\n 11427: u8 [a0 + 5] = 0x75\n 11431: u8 [a0 + 4] = 0x73\n 11435: u8 [a0 + 0x3] = a5\n 11438: u8 [a0 + 2] = 0x78\n 11442: u8 [a0 + 1] = 0x61\n 11446: a2 = u64 [s1 + 0x1c0]\n 11450: a2 = a2 + 0xffffffffffffff9c\n 11453: a3 = u64 [s1 + 0x1d8]\n 11457: a2 = a3 <u a2\n 11460: a3 = u64 [s1 + 0x1d0]\n 11464: a2 = 0 if a3 != 0\n 11466: a3 = u64 [s1 + 0x1c8]\n 11470: a2 = 0 if a3 != 0\n 11472: u8 [a0 + 0] = 0x4d\n 11475: jump @199 if a2 != 0\n      : @198 (gas: 1)\n 11478: jump @256\n      : @199 (gas: 4)\n 11481: a0 = u64 [s1 + 0x1b8]\n 11485: i32 a0 = a0 + 0x64\n 11488: a1 = 0x20\n 11491: ra = 96, jump @0\n      : @200 [@dyn 48] (gas: 33)\n 11496: u8 [a0 + 31] = 0\n 11499: u8 [a0 + 30] = 0\n 11502: u8 [a0 + 29] = 0\n 11505: u8 [a0 + 28] = 0\n 11508: u8 [a0 + 27] = 0\n 11511: u8 [a0 + 26] = 0\n 11514: u8 [a0 + 25] = 0\n 11517: u8 [a0 + 24] = 0\n 11520: u8 [a0 + 23] = 0\n 11523: u8 [a0 + 22] = 0\n 11526: u8 [a0 + 21] = 0\n 11529: u8 [a0 + 20] = 0\n 11532: u8 [a0 + 19] = 0\n 11535: u8 [a0 + 18] = 0\n 11538: u8 [a0 + 17] = 0\n 11541: u8 [a0 + 16] = 0\n 11544: u8 [a0 + 15] = 0\n 11547: u8 [a0 + 14] = 0\n 11550: u8 [a0 + 13] = 0\n 11553: u8 [a0 + 12] = 0\n 11556: u8 [a0 + 11] = 0\n 11559: u8 [a0 + 10] = 0\n 11562: u8 [a0 + 9] = 0\n 11565: u8 [a0 + 8] = 0\n 11568: u8 [a0 + 7] = 0\n 11571: u8 [a0 + 6] = 0\n 11574: u8 [a0 + 5] = 0\n 11577: u8 [a0 + 4] = 0\n 11580: u8 [a0 + 3] = 0\n 11583: u8 [a0 + 2] = 0\n 11586: u8 [a0 + 1] = 0\n 11589: u8 [a0 + 0] = 0x30\n 11592: jump @295\n      : @201 (gas: 1)\n 11595: jump @203 if a0 == 1742566602\n      : @202 (gas: 1)\n 11602: jump @361\n      : @203 (gas: 3)\n 11605: a0 = u64 [s1 + 0x1d8]\n 11609: a0 = i32 [a0]\n 11611: jump @205 if a0 >u 35\n      : @204 (gas: 1)\n 11615: jump @361\n      : @205 (gas: 59)\n 11618: a0 = s1 + 0x1000\n 11622: i32 a0 = a0 + 0xfffffffffffffc40\n 11626: a1 = 0x4\n 11629: ecalli 3 // 'call_data_load'\n 11631: a1 = s1 + 0x7ff\n 11635: a1 = a1 + 0x159\n 11639: a0 = u64 [a1 + 0x300]\n 11643: u64 [s1 + 0x1a0] = a0\n 11647: a0 = u64 [a1 + 0x2f8]\n 11651: u64 [s1 + 0x1a8] = a0\n 11655: a0 = u64 [a1 + 0x2f0]\n 11659: u64 [s1 + 0x1b0] = a0\n 11663: a0 = u64 [a1 + 0x2e8]\n 11667: u64 [s1 + 0x1b8] = a0\n 11671: u64 [a1 + 1216] = 0\n 11675: u64 [a1 + 1208] = 0\n 11679: u64 [a1 + 1200] = 0\n 11683: u64 [a1 + 1192] = 0x1\n 11688: u64 [a1 + 1248] = 0\n 11692: u64 [a1 + 1240] = 0\n 11696: u64 [a1 + 1232] = 0\n 11700: u64 [a1 + 1224] = 0\n 11704: u32 [a1 + 1256] = 0x20\n 11709: a0 = s1 + 0x1000\n 11713: i32 a1 = a0 + 0xfffffffffffffe00\n 11717: a0 = s1 + 0x1000\n 11721: i32 a3 = a0 + 0xfffffffffffffe20\n 11725: a0 = s1 + 0x1000\n 11729: i32 a4 = a0 + 0xfffffffffffffe40\n 11733: a2 = 0xffffffffffffffff\n 11736: a0 = 0\n 11738: ecalli 7 // 'get_storage'\n 11740: a3 = s1 + 0x7ff\n 11744: a3 = a3 + 0x159\n 11748: a0 = u64 [a3 + 0x4d0]\n 11752: a1 = u64 [a3 + 0x4c8]\n 11756: a2 = u64 [a3 + 0x4d8]\n 11760: a3 = u64 [a3 + 0x4e0]\n 11764: a5 = u64 [s1 + 0x1b0]\n 11768: a4 = a5 ^ a0\n 11771: a0 = a5 <u a0\n 11774: a5 = u64 [s1 + 0x1b8]\n 11778: a1 = a5 <u a1\n 11781: a1 = a0 if a4 != 0\n 11784: a4 = u64 [s1 + 0x1a0]\n 11788: a0 = a4 ^ a3\n 11791: a3 = a4 <u a3\n 11794: a5 = u64 [s1 + 0x1a8]\n 11798: a4 = a5 <u a2\n 11801: a4 = a3 if a0 != 0\n 11804: a2 = a2 ^ a5\n 11807: a0 = a0 | a2\n 11810: a1 = a4 if a0 != 0\n 11813: u64 [s1 + 1368] = 0\n 11817: u64 [s1 + 1360] = 0\n 11821: u64 [s1 + 0x540] = a1\n 11825: a0 = s1 + 0x540\n 11829: u64 [s1 + 1352] = 0\n 11833: ra = 98, jump @464\n      : @206 [@dyn 49] (gas: 3)\n 11838: a1 = 0x20\n 11841: a0 = 0\n 11843: ra = 100, jump @0\n      : @207 [@dyn 50] (gas: 71)\n 11848: a1 = u64 [s1 + 0x1a0]\n 11852: a1 = reverse a1\n 11854: a2 = u64 [s1 + 0x1a8]\n 11858: a2 = reverse a2\n 11860: a3 = u64 [s1 + 0x1b0]\n 11864: a3 = reverse a3\n 11866: a4 = u64 [s1 + 0x1b8]\n 11870: a4 = reverse a4\n 11872: a5 = a4 >> 0x38\n 11875: u8 [a0 + 0x1f] = a5\n 11878: a5 = a4 >> 0x30\n 11881: u8 [a0 + 0x1e] = a5\n 11884: a5 = a4 >> 0x28\n 11887: u8 [a0 + 0x1d] = a5\n 11890: a5 = a4 >> 0x20\n 11893: u8 [a0 + 0x1c] = a5\n 11896: a5 = a4 >> 0x18\n 11899: u8 [a0 + 0x1b] = a5\n 11902: a5 = a4 >> 0x10\n 11905: u8 [a0 + 0x1a] = a5\n 11908: a5 = a4 >> 0x8\n 11911: u8 [a0 + 0x19] = a5\n 11914: u8 [a0 + 0x18] = a4\n 11917: a4 = a3 >> 0x38\n 11920: u8 [a0 + 0x17] = a4\n 11923: a4 = a3 >> 0x30\n 11926: u8 [a0 + 0x16] = a4\n 11929: a4 = a3 >> 0x28\n 11932: u8 [a0 + 0x15] = a4\n 11935: a4 = a3 >> 0x20\n 11938: u8 [a0 + 0x14] = a4\n 11941: a4 = a3 >> 0x18\n 11944: u8 [a0 + 0x13] = a4\n 11947: a4 = a3 >> 0x10\n 11950: u8 [a0 + 0x12] = a4\n 11953: a4 = a3 >> 0x8\n 11956: u8 [a0 + 0x11] = a4\n 11959: u8 [a0 + 0x10] = a3\n 11962: a3 = a2 >> 0x38\n 11965: u8 [a0 + 0xf] = a3\n 11968: a3 = a2 >> 0x30\n 11971: u8 [a0 + 0xe] = a3\n 11974: a3 = a2 >> 0x28\n 11977: u8 [a0 + 0xd] = a3\n 11980: a3 = a2 >> 0x20\n 11983: u8 [a0 + 0xc] = a3\n 11986: a3 = a2 >> 0x18\n 11989: u8 [a0 + 0xb] = a3\n 11992: a3 = a2 >> 0x10\n 11995: u8 [a0 + 0xa] = a3\n 11998: a3 = a2 >> 0x8\n 12001: u8 [a0 + 0x9] = a3\n 12004: u8 [a0 + 0x8] = a2\n 12007: a2 = a1 >> 0x38\n 12010: u8 [a0 + 0x7] = a2\n 12013: a2 = a1 >> 0x30\n 12016: u8 [a0 + 0x6] = a2\n 12019: a2 = a1 >> 0x28\n 12022: u8 [a0 + 0x5] = a2\n 12025: a2 = a1 >> 0x20\n 12028: u8 [a0 + 0x4] = a2\n 12031: a2 = a1 >> 0x18\n 12034: u8 [a0 + 0x3] = a2\n 12037: a2 = a1 >> 0x10\n 12040: u8 [a0 + 0x2] = a2\n 12043: a2 = a1 >> 0x8\n 12046: u8 [a0 + 0x1] = a2\n 12049: u8 [a0] = a1\n 12051: a0 = 0x20\n 12054: a1 = 0x20\n 12057: ra = 102, jump @0\n      : @208 [@dyn 51] (gas: 35)\n 12062: u8 [a0 + 31] = 0x2\n 12066: u8 [a0 + 30] = 0\n 12069: u8 [a0 + 29] = 0\n 12072: u8 [a0 + 28] = 0\n 12075: u8 [a0 + 27] = 0\n 12078: u8 [a0 + 26] = 0\n 12081: u8 [a0 + 25] = 0\n 12084: u8 [a0 + 24] = 0\n 12087: u8 [a0 + 23] = 0\n 12090: u8 [a0 + 22] = 0\n 12093: u8 [a0 + 21] = 0\n 12096: u8 [a0 + 20] = 0\n 12099: u8 [a0 + 19] = 0\n 12102: u8 [a0 + 18] = 0\n 12105: u8 [a0 + 17] = 0\n 12108: u8 [a0 + 16] = 0\n 12111: u8 [a0 + 15] = 0\n 12114: u8 [a0 + 14] = 0\n 12117: u8 [a0 + 13] = 0\n 12120: u8 [a0 + 12] = 0\n 12123: u8 [a0 + 11] = 0\n 12126: u8 [a0 + 10] = 0\n 12129: u8 [a0 + 9] = 0\n 12132: u8 [a0 + 8] = 0\n 12135: u8 [a0 + 7] = 0\n 12138: u8 [a0 + 6] = 0\n 12141: u8 [a0 + 5] = 0\n 12144: u8 [a0 + 4] = 0\n 12147: u8 [a0 + 3] = 0\n 12150: u8 [a0 + 2] = 0\n 12153: u8 [a0 + 1] = 0\n 12156: u8 [a0 + 0] = 0\n 12158: a1 = 0x40\n 12161: a0 = 0\n 12163: ra = 104, jump @0\n      : @209 [@dyn 52] (gas: 63)\n 12168: a1 = sp + 0xffffffffffffffe0\n 12171: a1 = a1 & 0xffffffffffffffe0\n 12174: u64 [s1 + 0x1d8] = a1\n 12178: sp = a1\n 12180: i32 a0 = a0 + 0\n 12182: i32 a2 = a1 + 0\n 12184: a1 = 0x40\n 12187: ecalli 8 // 'hash_keccak_256'\n 12189: a3 = u64 [s1 + 0x1d8]\n 12193: a0 = u64 [a3]\n 12195: a1 = u64 [a3 + 0x8]\n 12198: a2 = u64 [a3 + 0x10]\n 12201: a3 = u64 [a3 + 0x18]\n 12204: t0 = reverse a0\n 12206: a5 = reverse a1\n 12208: a2 = reverse a2\n 12210: a1 = reverse a3\n 12212: a0 = a1 + 0x5\n 12215: u64 [s1 + 0x1c0] = a1\n 12219: a1 = a0 <u a1\n 12222: a4 = a2 + a1\n 12225: u64 [s1 + 0x1c8] = a2\n 12229: a3 = a4 <u a2\n 12232: a3 = a1 if a1 == 0\n 12235: a3 = a3 + a5\n 12238: u64 [s1 + 0x1d0] = a5\n 12242: a1 = a3 <u a5\n 12245: u64 [s1 + 0x1d8] = t0\n 12249: a1 = a1 + t0\n 12252: a2 = s1 + 0x7ff\n 12256: a2 = a2 + 0x159\n 12260: u64 [a2 + 0x4a8] = a0\n 12264: u64 [a2 + 0x4b0] = a4\n 12268: u64 [a2 + 0x4b8] = a3\n 12272: u64 [a2 + 0x4c0] = a1\n 12276: u64 [a2 + 1248] = 0\n 12280: u64 [a2 + 1240] = 0\n 12284: u64 [a2 + 1232] = 0\n 12288: u64 [a2 + 1224] = 0\n 12292: u32 [a2 + 1256] = 0x20\n 12297: a0 = s1 + 0x1000\n 12301: i32 a1 = a0 + 0xfffffffffffffe00\n 12305: a0 = s1 + 0x1000\n 12309: i32 a3 = a0 + 0xfffffffffffffe20\n 12313: a0 = s1 + 0x1000\n 12317: i32 a4 = a0 + 0xfffffffffffffe40\n 12321: a2 = 0xffffffffffffffff\n 12324: a0 = 0\n 12326: ecalli 7 // 'get_storage'\n 12328: a1 = s1 + 0x7ff\n 12332: a1 = a1 + 0x159\n 12336: a0 = u64 [a1 + 0x4c8]\n 12340: u64 [s1 + 0x198] = a0\n 12344: a0 = u64 [a1 + 0x4d0]\n 12348: u64 [s1 + 0x190] = a0\n 12352: a0 = u64 [a1 + 0x4d8]\n 12356: u64 [s1 + 0x188] = a0\n 12360: a0 = u64 [a1 + 0x4e0]\n 12364: u64 [s1 + 0x180] = a0\n 12368: a0 = s1 + 0x1000\n 12372: i32 a0 = a0 + 0xfffffffffffffc60\n 12376: ecalli 9 // 'now'\n 12378: fallthrough\n      : @210 (gas: 22)\n 12379: a4 = s1 + 0x7ff\n 12383: a4 = a4 + 0x159\n 12387: a0 = u64 [a4 + 0x320]\n 12391: t1 = u64 [a4 + 0x308]\n 12395: t0 = u64 [a4 + 0x318]\n 12399: a3 = u64 [a4 + 0x310]\n 12403: a1 = u64 [s1 + 0x180]\n 12407: a2 = a0 ^ a1\n 12410: a1 = a0 <u a1\n 12413: a0 = u64 [s1 + 0x188]\n 12417: a5 = t0 <u a0\n 12420: a5 = a1 if a2 != 0\n 12423: a1 = u64 [s1 + 0x190]\n 12427: t2 = a3 ^ a1\n 12430: a3 = a3 <u a1\n 12433: a1 = u64 [s1 + 0x198]\n 12437: a1 = t1 <u a1\n 12440: a1 = a3 if t2 != 0\n 12443: a0 = t0 ^ a0\n 12446: a0 = a0 | a2\n 12449: a1 = a5 if a0 != 0\n 12452: jump @212 if a1 == 0\n      : @211 (gas: 1)\n 12455: jump @371\n      : @212 (gas: 50)\n 12458: a1 = u64 [s1 + 0x1c0]\n 12462: a0 = a1 + 0x6\n 12465: a1 = a0 <u a1\n 12468: a3 = u64 [s1 + 0x1c8]\n 12472: a2 = a3 + a1\n 12475: a3 = a2 <u a3\n 12478: a3 = a1 if a1 == 0\n 12481: a1 = u64 [s1 + 0x1d0]\n 12485: a3 = a3 + a1\n 12488: a1 = a3 <u a1\n 12491: a5 = u64 [s1 + 0x1d8]\n 12495: a1 = a1 + a5\n 12498: u64 [a4 + 0x4a8] = a0\n 12502: u64 [a4 + 0x4b0] = a2\n 12506: u64 [a4 + 0x4b8] = a3\n 12510: u64 [a4 + 0x4c0] = a1\n 12514: u64 [a4 + 1248] = 0\n 12518: u64 [a4 + 1240] = 0\n 12522: u64 [a4 + 1232] = 0\n 12526: u64 [a4 + 1224] = 0\n 12530: u32 [a4 + 1256] = 0x20\n 12535: a0 = s1 + 0x1000\n 12539: i32 a1 = a0 + 0xfffffffffffffe00\n 12543: a0 = s1 + 0x1000\n 12547: i32 a3 = a0 + 0xfffffffffffffe20\n 12551: a0 = s1 + 0x1000\n 12555: i32 a4 = a0 + 0xfffffffffffffe40\n 12559: a2 = 0xffffffffffffffff\n 12562: a0 = 0\n 12564: ecalli 7 // 'get_storage'\n 12566: a0 = s1 + 0x7ff\n 12570: a0 = a0 + 0x159\n 12574: a0 = u64 [a0 + 0x4c8]\n 12578: u64 [s1 + 0x198] = a0\n 12582: a0 = s1 + 0x7ff\n 12586: a0 = a0 + 0x159\n 12590: a0 = u64 [a0 + 0x4d0]\n 12594: u64 [s1 + 0x190] = a0\n 12598: a0 = s1 + 0x7ff\n 12602: a0 = a0 + 0x159\n 12606: a0 = u64 [a0 + 0x4d8]\n 12610: u64 [s1 + 0x188] = a0\n 12614: a0 = s1 + 0x7ff\n 12618: a0 = a0 + 0x159\n 12622: a0 = u64 [a0 + 0x4e0]\n 12626: u64 [s1 + 0x180] = a0\n 12630: a0 = s1 + 0x1000\n 12634: i32 a0 = a0 + 0xfffffffffffffc80\n 12638: ecalli 9 // 'now'\n 12640: fallthrough\n      : @213 (gas: 22)\n 12641: a2 = s1 + 0x7ff\n 12645: a2 = a2 + 0x159\n 12649: a0 = u64 [a2 + 0x340]\n 12653: t1 = u64 [a2 + 0x328]\n 12657: t0 = u64 [a2 + 0x338]\n 12661: a3 = u64 [a2 + 0x330]\n 12665: a1 = u64 [s1 + 0x180]\n 12669: a4 = a0 ^ a1\n 12672: a1 = a0 <u a1\n 12675: a0 = u64 [s1 + 0x188]\n 12679: a5 = t0 <u a0\n 12682: a5 = a1 if a4 != 0\n 12685: a1 = u64 [s1 + 0x190]\n 12689: t2 = a3 ^ a1\n 12692: a3 = a3 <u a1\n 12695: a1 = u64 [s1 + 0x198]\n 12699: a1 = t1 <u a1\n 12702: a1 = a3 if t2 != 0\n 12705: a0 = t0 ^ a0\n 12708: a0 = a0 | a4\n 12711: a1 = a5 if a0 != 0\n 12714: jump @215 if a1 != 0\n      : @214 (gas: 1)\n 12717: jump @372\n      : @215 (gas: 99)\n 12720: a0 = u64 [s1 + 0x1c0]\n 12724: a3 = a0 + 0x4\n 12727: a0 = a3 <u a0\n 12730: a1 = u64 [s1 + 0x1c8]\n 12734: a4 = a1 + a0\n 12737: a1 = a4 <u a1\n 12740: a1 = a0 if a0 == 0\n 12743: a0 = u64 [s1 + 0x1d0]\n 12747: a1 = a1 + a0\n 12750: a0 = a1 <u a0\n 12753: a5 = u64 [s1 + 0x1d8]\n 12757: a0 = a0 + a5\n 12760: u64 [s1 + 0x198] = a3\n 12764: u64 [a2 + 0x4a8] = a3\n 12768: u64 [s1 + 0x190] = a4\n 12772: u64 [a2 + 0x4b0] = a4\n 12776: u64 [s1 + 0x188] = a1\n 12780: u64 [a2 + 0x4b8] = a1\n 12784: u64 [s1 + 0x180] = a0\n 12788: u64 [a2 + 0x4c0] = a0\n 12792: u64 [a2 + 1248] = 0\n 12796: u64 [a2 + 1240] = 0\n 12800: u64 [a2 + 1232] = 0\n 12804: u64 [a2 + 1224] = 0\n 12808: u32 [a2 + 1256] = 0x20\n 12813: a0 = s1 + 0x1000\n 12817: i32 a1 = a0 + 0xfffffffffffffe00\n 12821: a0 = s1 + 0x1000\n 12825: i32 a3 = a0 + 0xfffffffffffffe20\n 12829: a0 = s1 + 0x1000\n 12833: i32 a4 = a0 + 0xfffffffffffffe40\n 12837: a2 = 0xffffffffffffffff\n 12840: a0 = 0\n 12842: ecalli 7 // 'get_storage'\n 12844: a1 = u64 [s1 + 0x1c0]\n 12848: a0 = a1 + 0x3\n 12851: a1 = a0 <u a1\n 12854: a3 = u64 [s1 + 0x1c8]\n 12858: a2 = a3 + a1\n 12861: a3 = a2 <u a3\n 12864: a3 = a1 if a1 == 0\n 12867: a1 = u64 [s1 + 0x1d0]\n 12871: a3 = a3 + a1\n 12874: a1 = a3 <u a1\n 12877: a4 = u64 [s1 + 0x1d8]\n 12881: a1 = a1 + a4\n 12884: a4 = s1 + 0x7ff\n 12888: a4 = a4 + 0x159\n 12892: u64 [a4 + 0x4c0] = a1\n 12896: a1 = s1 + 0x7ff\n 12900: a1 = a1 + 0x159\n 12904: a1 = u64 [a1 + 0x4c8]\n 12908: u64 [s1 + 0x178] = a1\n 12912: a1 = s1 + 0x7ff\n 12916: a1 = a1 + 0x159\n 12920: u64 [a1 + 0x4b8] = a3\n 12924: a1 = s1 + 0x7ff\n 12928: a1 = a1 + 0x159\n 12932: a1 = u64 [a1 + 0x4d0]\n 12936: u64 [s1 + 0x170] = a1\n 12940: a1 = s1 + 0x7ff\n 12944: a1 = a1 + 0x159\n 12948: u64 [a1 + 0x4b0] = a2\n 12952: a1 = s1 + 0x7ff\n 12956: a1 = a1 + 0x159\n 12960: a1 = u64 [a1 + 0x4d8]\n 12964: u64 [s1 + 0x168] = a1\n 12968: a1 = s1 + 0x7ff\n 12972: a1 = a1 + 0x159\n 12976: u64 [a1 + 0x4a8] = a0\n 12980: a0 = s1 + 0x7ff\n 12984: a0 = a0 + 0x159\n 12988: a0 = u64 [a0 + 0x4e0]\n 12992: u64 [s1 + 0x160] = a0\n 12996: a0 = s1 + 0x7ff\n 13000: a0 = a0 + 0x159\n 13004: u64 [a0 + 1248] = 0\n 13008: a0 = s1 + 0x7ff\n 13012: a0 = a0 + 0x159\n 13016: u64 [a0 + 1240] = 0\n 13020: a0 = s1 + 0x7ff\n 13024: a0 = a0 + 0x159\n 13028: u64 [a0 + 1232] = 0\n 13032: a0 = s1 + 0x7ff\n 13036: a0 = a0 + 0x159\n 13040: u64 [a0 + 1224] = 0\n 13044: a0 = s1 + 0x7ff\n 13048: a0 = a0 + 0x159\n 13052: u32 [a0 + 1256] = 0x20\n 13057: a0 = s1 + 0x1000\n 13061: i32 a1 = a0 + 0xfffffffffffffe00\n 13065: a0 = s1 + 0x1000\n 13069: i32 a3 = a0 + 0xfffffffffffffe20\n 13073: a0 = s1 + 0x1000\n 13077: i32 a4 = a0 + 0xfffffffffffffe40\n 13081: a2 = 0xffffffffffffffff\n 13084: a0 = 0\n 13086: ecalli 7 // 'get_storage'\n 13088: fallthrough\n      : @216 (gas: 22)\n 13089: t0 = s1 + 0x7ff\n 13093: t0 = t0 + 0x159\n 13097: a0 = u64 [t0 + 0x4e0]\n 13101: t1 = u64 [t0 + 0x4c8]\n 13105: a2 = u64 [t0 + 0x4d8]\n 13109: a3 = u64 [t0 + 0x4d0]\n 13113: a1 = u64 [s1 + 0x160]\n 13117: a4 = a1 ^ a0\n 13120: a1 = a1 <u a0\n 13123: a0 = u64 [s1 + 0x168]\n 13127: a5 = a0 <u a2\n 13130: a5 = a1 if a4 != 0\n 13133: a1 = u64 [s1 + 0x170]\n 13137: t2 = a1 ^ a3\n 13140: a3 = a1 <u a3\n 13143: a1 = u64 [s1 + 0x178]\n 13147: a1 = a1 <u t1\n 13150: a1 = a3 if t2 != 0\n 13153: a0 = a0 ^ a2\n 13156: a0 = a0 | a4\n 13159: a1 = a5 if a0 != 0\n 13162: jump @218 if a1 != 0\n      : @217 (gas: 1)\n 13165: jump @373\n      : @218 (gas: 55)\n 13168: a0 = u64 [s1 + 0x1c0]\n 13172: a2 = a0 + 0x2\n 13175: a0 = a2 <u a0\n 13178: a1 = u64 [s1 + 0x1c8]\n 13182: a3 = a1 + a0\n 13185: a1 = a3 <u a1\n 13188: a1 = a0 if a0 == 0\n 13191: a0 = u64 [s1 + 0x1d0]\n 13195: a1 = a1 + a0\n 13198: a0 = a1 <u a0\n 13201: a4 = u64 [s1 + 0x1d8]\n 13205: a0 = a0 + a4\n 13208: u64 [s1 + 0x178] = a2\n 13212: u64 [t0 + 0x4a8] = a2\n 13216: u64 [s1 + 0x170] = a3\n 13220: u64 [t0 + 0x4b0] = a3\n 13224: u64 [s1 + 0x168] = a1\n 13228: u64 [t0 + 0x4b8] = a1\n 13232: u64 [s1 + 0x160] = a0\n 13236: u64 [t0 + 0x4c0] = a0\n 13240: u64 [t0 + 1248] = 0\n 13244: u64 [t0 + 1240] = 0\n 13248: u64 [t0 + 1232] = 0\n 13252: u64 [t0 + 1224] = 0\n 13256: u32 [t0 + 1256] = 0x20\n 13261: a0 = s1 + 0x1000\n 13265: i32 a1 = a0 + 0xfffffffffffffe00\n 13269: a0 = s1 + 0x1000\n 13273: i32 a3 = a0 + 0xfffffffffffffe20\n 13277: a0 = s1 + 0x1000\n 13281: i32 a4 = a0 + 0xfffffffffffffe40\n 13285: a2 = 0xffffffffffffffff\n 13288: a0 = 0\n 13290: ecalli 7 // 'get_storage'\n 13292: a1 = s1 + 0x7ff\n 13296: a1 = a1 + 0x159\n 13300: a0 = u64 [a1 + 0x4c8]\n 13304: u64 [s1 + 0x158] = a0\n 13308: a0 = u64 [a1 + 0x4d8]\n 13312: u64 [s1 + 0x150] = a0\n 13316: a0 = u64 [a1 + 0x4d0]\n 13320: u64 [s1 + 0x148] = a0\n 13324: a0 = u64 [a1 + 0x4e0]\n 13328: u64 [s1 + 0x140] = a0\n 13332: a0 = sp + 0xffffffffffffffe0\n 13335: a0 = a0 & 0xffffffffffffffe0\n 13338: u64 [s1 + 0x138] = a0\n 13342: sp = a0\n 13344: u64 [a0 + 24] = 0\n 13347: u64 [a0 + 16] = 0\n 13350: u64 [a0 + 8] = 0\n 13353: u64 [a0 + 0] = 0\n 13355: i32 a0 = a0 + 0\n 13357: ecalli 16 // 'value_transferred'\n 13359: fallthrough\n      : @219 (gas: 17)\n 13360: a3 = u64 [s1 + 0x138]\n 13364: a0 = u64 [a3 + 0x18]\n 13367: a1 = u64 [a3 + 0x8]\n 13370: a2 = u64 [a3]\n 13372: a3 = u64 [a3 + 0x10]\n 13375: a4 = u64 [s1 + 0x140]\n 13379: a0 = a0 ^ a4\n 13382: a4 = u64 [s1 + 0x148]\n 13386: a1 = a1 ^ a4\n 13389: a0 = a0 | a1\n 13392: a1 = u64 [s1 + 0x150]\n 13396: a1 = a1 ^ a3\n 13399: a3 = u64 [s1 + 0x158]\n 13403: a2 = a2 ^ a3\n 13406: a1 = a1 | a2\n 13409: a0 = a0 | a1\n 13412: jump @221 if a0 == 0\n      : @220 (gas: 1)\n 13415: jump @374\n      : @221 (gas: 39)\n 13418: a0 = u64 [s1 + 0x1c0]\n 13422: a1 = a0 + 0x7\n 13425: u64 [s1 + 0x158] = a1\n 13429: a0 = a1 <u a0\n 13432: a1 = u64 [s1 + 0x1c8]\n 13436: a2 = a1 + a0\n 13439: u64 [s1 + 0x1c0] = a2\n 13443: a1 = a2 <u a1\n 13446: a1 = a0 if a0 == 0\n 13449: a0 = u64 [s1 + 0x1d0]\n 13453: a1 = a1 + a0\n 13456: u64 [s1 + 0x1c8] = a1\n 13460: a0 = a1 <u a0\n 13463: a1 = u64 [s1 + 0x1d8]\n 13467: a0 = a0 + a1\n 13470: u64 [s1 + 0x1d8] = a0\n 13474: a0 = s1 + 0x1000\n 13478: i32 a0 = a0 + 0xfffffffffffffca0\n 13482: ecalli 5 // 'caller'\n 13484: a2 = s1 + 0x7ff\n 13488: a2 = a2 + 0x159\n 13492: a0 = u64 [a2 + 0x350]\n 13496: a1 = i32 [a2 + 0x358]\n 13500: a3 = u64 [a2 + 0x348]\n 13504: u64 [s1 + 0x150] = a3\n 13508: a0 = reverse a0\n 13510: a2 = a0 << 0x20\n 13513: a1 = reverse a1\n 13515: a1 = a1 >> 0x20\n 13518: a1 = a1 | a2\n 13521: u64 [s1 + 0x1d0] = a1\n 13525: a0 = a0 >> 0x20\n 13528: a1 = reverse a3\n 13530: a1 = a1 << 0x20\n 13533: a0 = a0 | a1\n 13536: u64 [s1 + 0x148] = a0\n 13540: a1 = 0x20\n 13543: a0 = 0\n 13545: ra = 106, jump @0\n      : @222 [@dyn 53] (gas: 57)\n 13550: a1 = u64 [s1 + 0x148]\n 13554: a1 = reverse a1\n 13556: a2 = u64 [s1 + 0x1d0]\n 13560: a2 = reverse a2\n 13562: a4 = u64 [s1 + 0x150]\n 13566: a3 = a4 >> 0x18\n 13569: u8 [a0 + 0xf] = a3\n 13572: a3 = a4 >> 0x10\n 13575: u8 [a0 + 0xe] = a3\n 13578: a3 = a4 >> 0x8\n 13581: u8 [a0 + 0xd] = a3\n 13584: u8 [a0 + 0xc] = a4\n 13587: u8 [a0 + 11] = 0\n 13590: u8 [a0 + 10] = 0\n 13593: u8 [a0 + 9] = 0\n 13596: u8 [a0 + 8] = 0\n 13599: u8 [a0 + 7] = 0\n 13602: u8 [a0 + 6] = 0\n 13605: u8 [a0 + 5] = 0\n 13608: u8 [a0 + 4] = 0\n 13611: u8 [a0 + 3] = 0\n 13614: u8 [a0 + 2] = 0\n 13617: u8 [a0 + 1] = 0\n 13620: u8 [a0 + 0] = 0\n 13622: u8 [a0 + 0x18] = a2\n 13625: u8 [a0 + 0x10] = a1\n 13628: a3 = a2 >> 0x38\n 13631: u8 [a0 + 0x1f] = a3\n 13634: a3 = a2 >> 0x30\n 13637: u8 [a0 + 0x1e] = a3\n 13640: a3 = a2 >> 0x28\n 13643: u8 [a0 + 0x1d] = a3\n 13646: a3 = a2 >> 0x20\n 13649: u8 [a0 + 0x1c] = a3\n 13652: a3 = a2 >> 0x18\n 13655: u8 [a0 + 0x1b] = a3\n 13658: a3 = a2 >> 0x10\n 13661: u8 [a0 + 0x1a] = a3\n 13664: a2 = a2 >> 0x8\n 13667: u8 [a0 + 0x19] = a2\n 13670: a2 = a1 >> 0x38\n 13673: u8 [a0 + 0x17] = a2\n 13676: a2 = a1 >> 0x30\n 13679: u8 [a0 + 0x16] = a2\n 13682: a2 = a1 >> 0x28\n 13685: u8 [a0 + 0x15] = a2\n 13688: a2 = a1 >> 0x20\n 13691: u8 [a0 + 0x14] = a2\n 13694: a2 = a1 >> 0x18\n 13697: u8 [a0 + 0x13] = a2\n 13700: a2 = a1 >> 0x10\n 13703: u8 [a0 + 0x12] = a2\n 13706: a1 = a1 >> 0x8\n 13709: u8 [a0 + 0x11] = a1\n 13712: a0 = 0x20\n 13715: a1 = 0x20\n 13718: ra = 108, jump @0\n      : @223 [@dyn 54] (gas: 103)\n 13723: a1 = u64 [s1 + 0x1d8]\n 13727: a1 = reverse a1\n 13729: a2 = u64 [s1 + 0x1c8]\n 13733: a2 = reverse a2\n 13735: a3 = u64 [s1 + 0x1c0]\n 13739: a3 = reverse a3\n 13741: a4 = u64 [s1 + 0x158]\n 13745: a4 = reverse a4\n 13747: a5 = a4 >> 0x38\n 13750: u64 [s1 + 0x158] = a5\n 13754: u8 [a0 + 0x1f] = a5\n 13757: a5 = a4 >> 0x30\n 13760: u64 [s1 + 0x150] = a5\n 13764: u8 [a0 + 0x1e] = a5\n 13767: a5 = a4 >> 0x28\n 13770: u64 [s1 + 0x148] = a5\n 13774: u8 [a0 + 0x1d] = a5\n 13777: a5 = a4 >> 0x20\n 13780: u64 [s1 + 0x140] = a5\n 13784: u8 [a0 + 0x1c] = a5\n 13787: a5 = a4 >> 0x18\n 13790: u64 [s1 + 0x138] = a5\n 13794: u8 [a0 + 0x1b] = a5\n 13797: a5 = a4 >> 0x10\n 13800: u64 [s1 + 0x130] = a5\n 13804: u8 [a0 + 0x1a] = a5\n 13807: a5 = a4 >> 0x8\n 13810: u64 [s1 + 0x128] = a5\n 13814: u8 [a0 + 0x19] = a5\n 13817: u64 [s1 + 0x1c0] = a4\n 13821: u8 [a0 + 0x18] = a4\n 13824: a4 = a3 >> 0x38\n 13827: u64 [s1 + 0x120] = a4\n 13831: u8 [a0 + 0x17] = a4\n 13834: a4 = a3 >> 0x30\n 13837: u64 [s1 + 0x118] = a4\n 13841: u8 [a0 + 0x16] = a4\n 13844: a4 = a3 >> 0x28\n 13847: u64 [s1 + 0x110] = a4\n 13851: u8 [a0 + 0x15] = a4\n 13854: a4 = a3 >> 0x20\n 13857: u64 [s1 + 0x108] = a4\n 13861: u8 [a0 + 0x14] = a4\n 13864: a4 = a3 >> 0x18\n 13867: u64 [s1 + 0x100] = a4\n 13871: u8 [a0 + 0x13] = a4\n 13874: a4 = a3 >> 0x10\n 13877: u64 [s1 + 0xf8] = a4\n 13881: u8 [a0 + 0x12] = a4\n 13884: a4 = a3 >> 0x8\n 13887: u64 [s1 + 0xf0] = a4\n 13891: u8 [a0 + 0x11] = a4\n 13894: u64 [s1 + 0x1c8] = a3\n 13898: u8 [a0 + 0x10] = a3\n 13901: a3 = a2 >> 0x38\n 13904: u64 [s1 + 0xe8] = a3\n 13908: u8 [a0 + 0xf] = a3\n 13911: a3 = a2 >> 0x30\n 13914: u64 [s1 + 0xe0] = a3\n 13918: u8 [a0 + 0xe] = a3\n 13921: a3 = a2 >> 0x28\n 13924: u64 [s1 + 0xd8] = a3\n 13928: u8 [a0 + 0xd] = a3\n 13931: a3 = a2 >> 0x20\n 13934: u64 [s1 + 0xd0] = a3\n 13938: u8 [a0 + 0xc] = a3\n 13941: a3 = a2 >> 0x18\n 13944: u64 [s1 + 0xc8] = a3\n 13948: u8 [a0 + 0xb] = a3\n 13951: a3 = a2 >> 0x10\n 13954: u64 [s1 + 0xc0] = a3\n 13958: u8 [a0 + 0xa] = a3\n 13961: a3 = a2 >> 0x8\n 13964: u64 [s1 + 0xb8] = a3\n 13968: u8 [a0 + 0x9] = a3\n 13971: u64 [s1 + 0x1d0] = a2\n 13975: u8 [a0 + 0x8] = a2\n 13978: a2 = a1 >> 0x38\n 13981: u64 [s1 + 0xb0] = a2\n 13985: u8 [a0 + 0x7] = a2\n 13988: a2 = a1 >> 0x30\n 13991: u64 [s1 + 0xa8] = a2\n 13995: u8 [a0 + 0x6] = a2\n 13998: a2 = a1 >> 0x28\n 14001: u64 [s1 + 0xa0] = a2\n 14005: u8 [a0 + 0x5] = a2\n 14008: a2 = a1 >> 0x20\n 14011: u64 [s1 + 0x98] = a2\n 14015: u8 [a0 + 0x4] = a2\n 14018: a2 = a1 >> 0x18\n 14021: u64 [s1 + 0x90] = a2\n 14025: u8 [a0 + 0x3] = a2\n 14028: a2 = a1 >> 0x10\n 14031: u64 [s1 + 0x88] = a2\n 14035: u8 [a0 + 0x2] = a2\n 14038: a2 = a1 >> 0x8\n 14041: u64 [s1 + 0x80] = a2\n 14045: u8 [a0 + 0x1] = a2\n 14048: u64 [s1 + 0x1d8] = a1\n 14052: u8 [a0] = a1\n 14054: a1 = 0x40\n 14057: a0 = 0\n 14059: ra = 110, jump @0\n      : @224 [@dyn 55] (gas: 38)\n 14064: a1 = sp + 0xffffffffffffffe0\n 14067: a1 = a1 & 0xffffffffffffffe0\n 14070: u64 [s1 + 0x78] = a1\n 14073: sp = a1\n 14075: i32 a0 = a0 + 0\n 14077: i32 a2 = a1 + 0\n 14079: a1 = 0x40\n 14082: ecalli 8 // 'hash_keccak_256'\n 14084: a3 = u64 [s1 + 0x78]\n 14087: a0 = u64 [a3 + 0x18]\n 14090: a1 = u64 [a3 + 0x10]\n 14093: a2 = u64 [a3 + 0x8]\n 14096: a3 = u64 [a3]\n 14098: a0 = reverse a0\n 14100: a1 = reverse a1\n 14102: a2 = reverse a2\n 14104: a3 = reverse a3\n 14106: a4 = s1 + 0x7ff\n 14110: a4 = a4 + 0x159\n 14114: u64 [a4 + 0x4c0] = a3\n 14118: u64 [a4 + 0x4b8] = a2\n 14122: u64 [a4 + 0x4b0] = a1\n 14126: u64 [a4 + 0x4a8] = a0\n 14130: u64 [a4 + 1248] = 0\n 14134: u64 [a4 + 1240] = 0\n 14138: u64 [a4 + 1232] = 0\n 14142: u64 [a4 + 1224] = 0\n 14146: u32 [a4 + 1256] = 0x20\n 14151: a0 = s1 + 0x1000\n 14155: i32 a1 = a0 + 0xfffffffffffffe00\n 14159: a0 = s1 + 0x1000\n 14163: i32 a3 = a0 + 0xfffffffffffffe20\n 14167: a0 = s1 + 0x1000\n 14171: i32 a4 = a0 + 0xfffffffffffffe40\n 14175: a2 = 0xffffffffffffffff\n 14178: a0 = 0\n 14180: ecalli 7 // 'get_storage'\n 14182: fallthrough\n      : @225 (gas: 4)\n 14183: a0 = s1 + 0x7ff\n 14187: a0 = a0 + 0x159\n 14191: a0 = u8 [a0 + 0x4c8]\n 14195: jump @227 if a0 == 0\n      : @226 (gas: 1)\n 14198: jump @375\n      : @227 (gas: 23)\n 14201: a0 = s1 + 0x1000\n 14205: i32 a0 = a0 + 0xfffffffffffffcc0\n 14209: ecalli 5 // 'caller'\n 14211: a2 = s1 + 0x7ff\n 14215: a2 = a2 + 0x159\n 14219: a0 = u64 [a2 + 0x370]\n 14223: a1 = i32 [a2 + 0x378]\n 14227: a3 = u64 [a2 + 0x368]\n 14231: u64 [s1 + 0x70] = a3\n 14234: a0 = reverse a0\n 14236: a2 = a0 << 0x20\n 14239: a1 = reverse a1\n 14241: a1 = a1 >> 0x20\n 14244: a1 = a1 | a2\n 14247: u64 [s1 + 0x78] = a1\n 14250: a0 = a0 >> 0x20\n 14253: a1 = reverse a3\n 14255: a1 = a1 << 0x20\n 14258: a0 = a0 | a1\n 14261: u64 [s1 + 0x68] = a0\n 14264: a1 = 0x20\n 14267: a0 = 0\n 14269: ra = 112, jump @0\n      : @228 [@dyn 56] (gas: 57)\n 14274: a1 = u64 [s1 + 0x68]\n 14277: a1 = reverse a1\n 14279: a2 = u64 [s1 + 0x78]\n 14282: a2 = reverse a2\n 14284: a4 = u64 [s1 + 0x70]\n 14287: a3 = a4 >> 0x18\n 14290: u8 [a0 + 0xf] = a3\n 14293: a3 = a4 >> 0x10\n 14296: u8 [a0 + 0xe] = a3\n 14299: a3 = a4 >> 0x8\n 14302: u8 [a0 + 0xd] = a3\n 14305: u8 [a0 + 0xc] = a4\n 14308: u8 [a0 + 11] = 0\n 14311: u8 [a0 + 10] = 0\n 14314: u8 [a0 + 9] = 0\n 14317: u8 [a0 + 8] = 0\n 14320: u8 [a0 + 7] = 0\n 14323: u8 [a0 + 6] = 0\n 14326: u8 [a0 + 5] = 0\n 14329: u8 [a0 + 4] = 0\n 14332: u8 [a0 + 3] = 0\n 14335: u8 [a0 + 2] = 0\n 14338: u8 [a0 + 1] = 0\n 14341: u8 [a0 + 0] = 0\n 14343: u8 [a0 + 0x18] = a2\n 14346: u8 [a0 + 0x10] = a1\n 14349: a3 = a2 >> 0x38\n 14352: u8 [a0 + 0x1f] = a3\n 14355: a3 = a2 >> 0x30\n 14358: u8 [a0 + 0x1e] = a3\n 14361: a3 = a2 >> 0x28\n 14364: u8 [a0 + 0x1d] = a3\n 14367: a3 = a2 >> 0x20\n 14370: u8 [a0 + 0x1c] = a3\n 14373: a3 = a2 >> 0x18\n 14376: u8 [a0 + 0x1b] = a3\n 14379: a3 = a2 >> 0x10\n 14382: u8 [a0 + 0x1a] = a3\n 14385: a2 = a2 >> 0x8\n 14388: u8 [a0 + 0x19] = a2\n 14391: a2 = a1 >> 0x38\n 14394: u8 [a0 + 0x17] = a2\n 14397: a2 = a1 >> 0x30\n 14400: u8 [a0 + 0x16] = a2\n 14403: a2 = a1 >> 0x28\n 14406: u8 [a0 + 0x15] = a2\n 14409: a2 = a1 >> 0x20\n 14412: u8 [a0 + 0x14] = a2\n 14415: a2 = a1 >> 0x18\n 14418: u8 [a0 + 0x13] = a2\n 14421: a2 = a1 >> 0x10\n 14424: u8 [a0 + 0x12] = a2\n 14427: a1 = a1 >> 0x8\n 14430: u8 [a0 + 0x11] = a1\n 14433: a0 = 0x20\n 14436: a1 = 0x20\n 14439: ra = 114, jump @0\n      : @229 [@dyn 57] (gas: 67)\n 14444: a1 = u64 [s1 + 0x158]\n 14448: u8 [a0 + 0x1f] = a1\n 14451: a1 = u64 [s1 + 0x150]\n 14455: u8 [a0 + 0x1e] = a1\n 14458: a1 = u64 [s1 + 0x148]\n 14462: u8 [a0 + 0x1d] = a1\n 14465: a1 = u64 [s1 + 0x140]\n 14469: u8 [a0 + 0x1c] = a1\n 14472: a1 = u64 [s1 + 0x138]\n 14476: u8 [a0 + 0x1b] = a1\n 14479: a1 = u64 [s1 + 0x130]\n 14483: u8 [a0 + 0x1a] = a1\n 14486: a1 = u64 [s1 + 0x128]\n 14490: u8 [a0 + 0x19] = a1\n 14493: a1 = u64 [s1 + 0x1c0]\n 14497: u8 [a0 + 0x18] = a1\n 14500: a1 = u64 [s1 + 0x120]\n 14504: u8 [a0 + 0x17] = a1\n 14507: a1 = u64 [s1 + 0x118]\n 14511: u8 [a0 + 0x16] = a1\n 14514: a1 = u64 [s1 + 0x110]\n 14518: u8 [a0 + 0x15] = a1\n 14521: a1 = u64 [s1 + 0x108]\n 14525: u8 [a0 + 0x14] = a1\n 14528: a1 = u64 [s1 + 0x100]\n 14532: u8 [a0 + 0x13] = a1\n 14535: a1 = u64 [s1 + 0xf8]\n 14539: u8 [a0 + 0x12] = a1\n 14542: a1 = u64 [s1 + 0xf0]\n 14546: u8 [a0 + 0x11] = a1\n 14549: a1 = u64 [s1 + 0x1c8]\n 14553: u8 [a0 + 0x10] = a1\n 14556: a1 = u64 [s1 + 0xe8]\n 14560: u8 [a0 + 0xf] = a1\n 14563: a1 = u64 [s1 + 0xe0]\n 14567: u8 [a0 + 0xe] = a1\n 14570: a1 = u64 [s1 + 0xd8]\n 14574: u8 [a0 + 0xd] = a1\n 14577: a1 = u64 [s1 + 0xd0]\n 14581: u8 [a0 + 0xc] = a1\n 14584: a1 = u64 [s1 + 0xc8]\n 14588: u8 [a0 + 0xb] = a1\n 14591: a1 = u64 [s1 + 0xc0]\n 14595: u8 [a0 + 0xa] = a1\n 14598: a1 = u64 [s1 + 0xb8]\n 14602: u8 [a0 + 0x9] = a1\n 14605: a1 = u64 [s1 + 0x1d0]\n 14609: u8 [a0 + 0x8] = a1\n 14612: a1 = u64 [s1 + 0xb0]\n 14616: u8 [a0 + 0x7] = a1\n 14619: a1 = u64 [s1 + 0xa8]\n 14623: u8 [a0 + 0x6] = a1\n 14626: a1 = u64 [s1 + 0xa0]\n 14630: u8 [a0 + 0x5] = a1\n 14633: a1 = u64 [s1 + 0x98]\n 14637: u8 [a0 + 0x4] = a1\n 14640: a1 = u64 [s1 + 0x90]\n 14644: u8 [a0 + 0x3] = a1\n 14647: a1 = u64 [s1 + 0x88]\n 14651: u8 [a0 + 0x2] = a1\n 14654: a1 = u64 [s1 + 0x80]\n 14658: u8 [a0 + 0x1] = a1\n 14661: a1 = u64 [s1 + 0x1d8]\n 14665: u8 [a0] = a1\n 14667: a1 = 0x40\n 14670: a0 = 0\n 14672: ra = 116, jump @0\n      : @230 [@dyn 58] (gas: 94)\n 14677: a1 = sp + 0xffffffffffffffe0\n 14680: a1 = a1 & 0xffffffffffffffe0\n 14683: u64 [s1 + 0x1d8] = a1\n 14687: sp = a1\n 14689: i32 a0 = a0 + 0\n 14691: i32 a2 = a1 + 0\n 14693: a1 = 0x40\n 14696: ecalli 8 // 'hash_keccak_256'\n 14698: a3 = u64 [s1 + 0x1d8]\n 14702: a0 = u64 [a3 + 0x18]\n 14705: a1 = u64 [a3 + 0x10]\n 14708: a2 = u64 [a3 + 0x8]\n 14711: a3 = u64 [a3]\n 14713: a4 = reverse a0\n 14715: u64 [s1 + 0x1d8] = a4\n 14719: a1 = reverse a1\n 14721: u64 [s1 + 0x1d0] = a1\n 14725: a2 = reverse a2\n 14727: u64 [s1 + 0x1c8] = a2\n 14731: a3 = reverse a3\n 14733: u64 [s1 + 0x1c0] = a3\n 14737: a0 = s1 + 0x7ff\n 14741: a0 = a0 + 0x159\n 14745: u64 [a0 + 0x4c0] = a3\n 14749: u64 [a0 + 0x4b8] = a2\n 14753: u64 [a0 + 0x4b0] = a1\n 14757: u64 [a0 + 0x4a8] = a4\n 14761: u64 [a0 + 1248] = 0\n 14765: u64 [a0 + 1240] = 0\n 14769: u64 [a0 + 1232] = 0\n 14773: u64 [a0 + 1224] = 0\n 14777: u32 [a0 + 1256] = 0x20\n 14782: a0 = s1 + 0x1000\n 14786: i32 a1 = a0 + 0xfffffffffffffe00\n 14790: a0 = s1 + 0x1000\n 14794: i32 a3 = a0 + 0xfffffffffffffe20\n 14798: a0 = s1 + 0x1000\n 14802: i32 a4 = a0 + 0xfffffffffffffe40\n 14806: a2 = 0xffffffffffffffff\n 14809: a0 = 0\n 14811: ecalli 7 // 'get_storage'\n 14813: a4 = s1 + 0x7ff\n 14817: a4 = a4 + 0x159\n 14821: a0 = u64 [a4 + 0x4c8]\n 14825: a1 = u64 [a4 + 0x4d0]\n 14829: a2 = u64 [a4 + 0x4d8]\n 14833: a3 = u64 [a4 + 0x4e0]\n 14837: a0 = a0 & 0xffffffffffffff00\n 14841: a0 = a0 | 0x1\n 14844: a5 = u64 [s1 + 0x1c0]\n 14848: u64 [a4 + 0x4c0] = a5\n 14852: a5 = u64 [s1 + 0x1c8]\n 14856: u64 [a4 + 0x4b8] = a5\n 14860: a5 = u64 [s1 + 0x1d0]\n 14864: u64 [a4 + 0x4b0] = a5\n 14868: a5 = u64 [s1 + 0x1d8]\n 14872: u64 [a4 + 0x4a8] = a5\n 14876: u64 [a4 + 0x4e0] = a3\n 14880: u64 [a4 + 0x4d8] = a2\n 14884: u64 [a4 + 0x4d0] = a1\n 14888: u64 [a4 + 0x4c8] = a0\n 14892: a0 = s1 + 0x1000\n 14896: i32 a1 = a0 + 0xfffffffffffffe00\n 14900: a0 = s1 + 0x1000\n 14904: i32 a3 = a0 + 0xfffffffffffffe20\n 14908: a2 = 0xffffffffffffffff\n 14911: a4 = 0x20\n 14914: a0 = 0\n 14916: ecalli 15 // 'set_storage'\n 14918: a0 = s1 + 0x7ff\n 14922: a0 = a0 + 0x159\n 14926: a1 = u64 [s1 + 0x180]\n 14930: u64 [a0 + 0x4c0] = a1\n 14934: a1 = u64 [s1 + 0x188]\n 14938: u64 [a0 + 0x4b8] = a1\n 14942: a1 = u64 [s1 + 0x190]\n 14946: u64 [a0 + 0x4b0] = a1\n 14950: a1 = u64 [s1 + 0x198]\n 14954: u64 [a0 + 0x4a8] = a1\n 14958: u64 [a0 + 1248] = 0\n 14962: u64 [a0 + 1240] = 0\n 14966: u64 [a0 + 1232] = 0\n 14970: u64 [a0 + 1224] = 0\n 14974: u32 [a0 + 1256] = 0x20\n 14979: a0 = s1 + 0x1000\n 14983: i32 a1 = a0 + 0xfffffffffffffe00\n 14987: a0 = s1 + 0x1000\n 14991: i32 a3 = a0 + 0xfffffffffffffe20\n 14995: a0 = s1 + 0x1000\n 14999: i32 a4 = a0 + 0xfffffffffffffe40\n 15003: a2 = 0xffffffffffffffff\n 15006: a0 = 0\n 15008: ecalli 7 // 'get_storage'\n 15010: fallthrough\n      : @231 (gas: 18)\n 15011: t0 = s1 + 0x7ff\n 15015: t0 = t0 + 0x159\n 15019: a0 = u64 [t0 + 0x4c8]\n 15023: a3 = u64 [t0 + 0x4e0]\n 15027: a1 = u64 [t0 + 0x4d0]\n 15031: a4 = u64 [t0 + 0x4d8]\n 15035: a0 = a0 + 0x1\n 15038: a2 = a0 <u 0x1\n 15041: a1 = a1 + a2\n 15044: a2 = a0 | a1\n 15047: a2 = a2 <u 0x1\n 15050: a2 = a2 + a4\n 15053: a4 = a2 <u a4\n 15056: a3 = a3 + a4\n 15059: a4 = a1 | a3\n 15062: a5 = a0 | a2\n 15065: a4 = a4 | a5\n 15068: jump @233 if a4 != 0\n      : @232 (gas: 1)\n 15071: jump @378\n      : @233 (gas: 57)\n 15074: a4 = u64 [s1 + 0x190]\n 15078: u64 [t0 + 0x4b0] = a4\n 15082: a4 = u64 [s1 + 0x198]\n 15086: u64 [t0 + 0x4a8] = a4\n 15090: a4 = u64 [s1 + 0x188]\n 15094: u64 [t0 + 0x4b8] = a4\n 15098: a4 = u64 [s1 + 0x180]\n 15102: u64 [t0 + 0x4c0] = a4\n 15106: u64 [t0 + 0x4c8] = a0\n 15110: u64 [t0 + 0x4d0] = a1\n 15114: u64 [t0 + 0x4d8] = a2\n 15118: u64 [t0 + 0x4e0] = a3\n 15122: a0 = s1 + 0x1000\n 15126: i32 a1 = a0 + 0xfffffffffffffe00\n 15130: a0 = s1 + 0x1000\n 15134: i32 a3 = a0 + 0xfffffffffffffe20\n 15138: a2 = 0xffffffffffffffff\n 15141: a4 = 0x20\n 15144: a0 = 0\n 15146: ecalli 15 // 'set_storage'\n 15148: a0 = u64 [s1 + 0x160]\n 15152: a1 = s1 + 0x7ff\n 15156: a1 = a1 + 0x159\n 15160: u64 [a1 + 0x4c0] = a0\n 15164: a0 = u64 [s1 + 0x168]\n 15168: u64 [a1 + 0x4b8] = a0\n 15172: a0 = u64 [s1 + 0x170]\n 15176: u64 [a1 + 0x4b0] = a0\n 15180: a0 = u64 [s1 + 0x178]\n 15184: u64 [a1 + 0x4a8] = a0\n 15188: u64 [a1 + 1248] = 0\n 15192: u64 [a1 + 1240] = 0\n 15196: u64 [a1 + 1232] = 0\n 15200: u64 [a1 + 1224] = 0\n 15204: u32 [a1 + 1256] = 0x20\n 15209: a0 = s1 + 0x1000\n 15213: i32 a1 = a0 + 0xfffffffffffffe00\n 15217: a0 = s1 + 0x1000\n 15221: i32 a3 = a0 + 0xfffffffffffffe20\n 15225: a0 = s1 + 0x1000\n 15229: i32 a4 = a0 + 0xfffffffffffffe40\n 15233: a2 = 0xffffffffffffffff\n 15236: a0 = 0\n 15238: ecalli 7 // 'get_storage'\n 15240: a1 = s1 + 0x7ff\n 15244: a1 = a1 + 0x159\n 15248: a0 = u64 [a1 + 0x4e0]\n 15252: u64 [s1 + 0x1c0] = a0\n 15256: a0 = u64 [a1 + 0x4d8]\n 15260: u64 [s1 + 0x1c8] = a0\n 15264: a0 = u64 [a1 + 0x4d0]\n 15268: u64 [s1 + 0x1d0] = a0\n 15272: a0 = u64 [a1 + 0x4c8]\n 15276: u64 [s1 + 0x1d8] = a0\n 15280: a0 = 0x40\n 15283: a1 = 0x20\n 15286: ra = 118, jump @0\n      : @234 [@dyn 59] (gas: 100)\n 15291: a1 = u8 [a0 + 0x11]\n 15294: a2 = u8 [a0 + 0x10]\n 15297: a3 = u8 [a0 + 0x12]\n 15300: a4 = u8 [a0 + 0x13]\n 15303: a1 = a1 << 0x8\n 15306: a1 = a1 | a2\n 15309: a3 = a3 << 0x10\n 15312: a4 = a4 << 0x18\n 15315: a3 = a3 | a4\n 15318: a1 = a1 | a3\n 15321: a2 = u8 [a0 + 0x15]\n 15324: a3 = u8 [a0 + 0x14]\n 15327: a4 = u8 [a0 + 0x16]\n 15330: a5 = u8 [a0 + 0x17]\n 15333: a2 = a2 << 0x8\n 15336: a2 = a2 | a3\n 15339: a4 = a4 << 0x10\n 15342: a5 = a5 << 0x18\n 15345: a4 = a4 | a5\n 15348: a2 = a2 | a4\n 15351: a2 = a2 << 0x20\n 15354: t0 = a2 | a1\n 15357: a2 = u8 [a0 + 0x1]\n 15360: a3 = u8 [a0]\n 15362: a4 = u8 [a0 + 0x2]\n 15365: a5 = u8 [a0 + 0x3]\n 15368: a2 = a2 << 0x8\n 15371: a2 = a2 | a3\n 15374: a4 = a4 << 0x10\n 15377: a5 = a5 << 0x18\n 15380: a4 = a4 | a5\n 15383: a2 = a2 | a4\n 15386: a3 = u8 [a0 + 0x5]\n 15389: a4 = u8 [a0 + 0x4]\n 15392: a5 = u8 [a0 + 0x6]\n 15395: a1 = u8 [a0 + 0x7]\n 15398: a3 = a3 << 0x8\n 15401: a3 = a3 | a4\n 15404: a5 = a5 << 0x10\n 15407: a1 = a1 << 0x18\n 15410: a1 = a1 | a5\n 15413: a1 = a1 | a3\n 15416: a1 = a1 << 0x20\n 15419: t1 = a1 | a2\n 15422: a1 = u8 [a0 + 0x19]\n 15425: a3 = u8 [a0 + 0x18]\n 15428: a4 = u8 [a0 + 0x1a]\n 15431: a5 = u8 [a0 + 0x1b]\n 15434: a1 = a1 << 0x8\n 15437: a1 = a1 | a3\n 15440: a4 = a4 << 0x10\n 15443: a5 = a5 << 0x18\n 15446: a4 = a4 | a5\n 15449: a1 = a1 | a4\n 15452: a3 = u8 [a0 + 0x1d]\n 15455: a4 = u8 [a0 + 0x1c]\n 15458: a5 = u8 [a0 + 0x1e]\n 15461: a2 = u8 [a0 + 0x1f]\n 15464: a3 = a3 << 0x8\n 15467: a3 = a3 | a4\n 15470: a5 = a5 << 0x10\n 15473: a2 = a2 << 0x18\n 15476: a2 = a2 | a5\n 15479: a2 = a2 | a3\n 15482: a2 = a2 << 0x20\n 15485: a3 = a2 | a1\n 15488: a1 = u8 [a0 + 0x9]\n 15491: a2 = u8 [a0 + 0x8]\n 15494: a4 = u8 [a0 + 0xa]\n 15497: a5 = u8 [a0 + 0xb]\n 15500: a1 = a1 << 0x8\n 15503: a1 = a1 | a2\n 15506: a4 = a4 << 0x10\n 15509: a5 = a5 << 0x18\n 15512: a4 = a4 | a5\n 15515: a1 = a1 | a4\n 15518: a2 = u8 [a0 + 0xd]\n 15521: a4 = u8 [a0 + 0xc]\n 15524: a5 = u8 [a0 + 0xe]\n 15527: a0 = u8 [a0 + 0xf]\n 15530: a2 = a2 << 0x8\n 15533: a2 = a2 | a4\n 15536: a5 = a5 << 0x10\n 15539: a0 = a0 << 0x18\n 15542: a0 = a0 | a5\n 15545: a0 = a0 | a2\n 15548: a0 = a0 << 0x20\n 15551: a0 = a0 | a1\n 15554: a0 = reverse a0\n 15556: a3 = reverse a3\n 15558: a1 = reverse t1\n 15560: a2 = reverse t0\n 15562: a1 = a1 | a2\n 15565: a2 = a3 | a0\n 15568: a2 = a2 | a1\n 15571: a2 = a2 >> 0x20\n 15574: a0 = a0 | a1\n 15577: a0 = a0 << 0x20\n 15580: a0 = a0 | a2\n 15583: jump @256 if a0 != 0\n      : @235 (gas: 4)\n 15587: i32 a0 = a3 + 0\n 15589: a1 = 0x20\n 15592: u64 [s1 + 0x198] = a3\n 15596: ra = 120, jump @0\n      : @236 [@dyn 60] (gas: 112)\n 15601: a1 = u64 [s1 + 0x1c0]\n 15605: a1 = reverse a1\n 15607: a2 = u64 [s1 + 0x1c8]\n 15611: a2 = reverse a2\n 15613: a3 = u64 [s1 + 0x1d0]\n 15617: a3 = reverse a3\n 15619: a4 = u64 [s1 + 0x1d8]\n 15623: a4 = reverse a4\n 15625: a5 = a4 >> 0x38\n 15628: u8 [a0 + 0x1f] = a5\n 15631: a5 = a4 >> 0x30\n 15634: u8 [a0 + 0x1e] = a5\n 15637: a5 = a4 >> 0x28\n 15640: u8 [a0 + 0x1d] = a5\n 15643: a5 = a4 >> 0x20\n 15646: u8 [a0 + 0x1c] = a5\n 15649: a5 = a4 >> 0x18\n 15652: u8 [a0 + 0x1b] = a5\n 15655: a5 = a4 >> 0x10\n 15658: u8 [a0 + 0x1a] = a5\n 15661: a5 = a4 >> 0x8\n 15664: u8 [a0 + 0x19] = a5\n 15667: u8 [a0 + 0x18] = a4\n 15670: u8 [a0 + 0x10] = a3\n 15673: a4 = a3 >> 0x38\n 15676: u8 [a0 + 0x17] = a4\n 15679: a4 = a3 >> 0x30\n 15682: u8 [a0 + 0x16] = a4\n 15685: a4 = a3 >> 0x28\n 15688: u8 [a0 + 0x15] = a4\n 15691: a4 = a3 >> 0x20\n 15694: u8 [a0 + 0x14] = a4\n 15697: a4 = a3 >> 0x18\n 15700: u8 [a0 + 0x13] = a4\n 15703: a4 = a3 >> 0x10\n 15706: u8 [a0 + 0x12] = a4\n 15709: a3 = a3 >> 0x8\n 15712: u8 [a0 + 0x11] = a3\n 15715: u8 [a0 + 0x8] = a2\n 15718: a3 = a2 >> 0x38\n 15721: u8 [a0 + 0xf] = a3\n 15724: a3 = a2 >> 0x30\n 15727: u8 [a0 + 0xe] = a3\n 15730: a3 = a2 >> 0x28\n 15733: u8 [a0 + 0xd] = a3\n 15736: a3 = a2 >> 0x20\n 15739: u8 [a0 + 0xc] = a3\n 15742: a3 = a2 >> 0x18\n 15745: u8 [a0 + 0xb] = a3\n 15748: a3 = a2 >> 0x10\n 15751: u8 [a0 + 0xa] = a3\n 15754: a2 = a2 >> 0x8\n 15757: u8 [a0 + 0x9] = a2\n 15760: u8 [a0] = a1\n 15762: a2 = a1 >> 0x38\n 15765: u8 [a0 + 0x7] = a2\n 15768: a2 = a1 >> 0x30\n 15771: u8 [a0 + 0x6] = a2\n 15774: a2 = a1 >> 0x28\n 15777: u8 [a0 + 0x5] = a2\n 15780: a2 = a1 >> 0x20\n 15783: u8 [a0 + 0x4] = a2\n 15786: a2 = a1 >> 0x18\n 15789: u8 [a0 + 0x3] = a2\n 15792: a2 = a1 >> 0x10\n 15795: u8 [a0 + 0x2] = a2\n 15798: a1 = a1 >> 0x8\n 15801: u8 [a0 + 0x1] = a1\n 15804: a0 = s1 + 0x1000\n 15808: i32 a0 = a0 + 0xfffffffffffffce0\n 15812: ecalli 5 // 'caller'\n 15814: a2 = s1 + 0x7ff\n 15818: a2 = a2 + 0x159\n 15822: a0 = u64 [a2 + 0x390]\n 15826: a1 = i32 [a2 + 0x398]\n 15830: a2 = u64 [a2 + 0x388]\n 15834: a3 = reverse a0\n 15836: a0 = a3 << 0x20\n 15839: a1 = reverse a1\n 15841: a1 = a1 >> 0x20\n 15844: t0 = a1 | a0\n 15847: a3 = a3 >> 0x20\n 15850: a2 = reverse a2\n 15852: a1 = a2 << 0x20\n 15855: a1 = a1 | a3\n 15858: a2 = a2 >> 0x20\n 15861: u64 [s1 + 1144] = 0\n 15865: a0 = u64 [s1 + 0x1a0]\n 15869: u64 [s1 + 0x498] = a0\n 15873: a0 = u64 [s1 + 0x1a8]\n 15877: u64 [s1 + 0x490] = a0\n 15881: a0 = u64 [s1 + 0x1b0]\n 15885: u64 [s1 + 0x488] = a0\n 15889: a0 = u64 [s1 + 0x1b8]\n 15893: u64 [s1 + 0x480] = a0\n 15897: a3 = u64 [0x20020]\n 15902: a4 = u64 [0x20028]\n 15907: a5 = u64 [0x20030]\n 15912: a0 = u64 [0x20038]\n 15917: u64 [s1 + 0x4b8] = a3\n 15921: u64 [s1 + 0x4b0] = a4\n 15925: u64 [s1 + 0x4a8] = a5\n 15929: u64 [s1 + 0x4a0] = a0\n 15933: u64 [s1 + 0x470] = a2\n 15937: u64 [s1 + 0x468] = a1\n 15941: a1 = 0x20\n 15944: a2 = s1 + 0x4a0\n 15948: a3 = s1 + 0x480\n 15952: a4 = s1 + 0x460\n 15956: u64 [s1 + 0x460] = t0\n 15960: a0 = u64 [s1 + 0x198]\n 15964: ra = 122, jump @27\n      : @237 [@dyn 61] (gas: 3)\n 15969: a0 = 0\n 15971: a1 = 0\n 15973: ra = 124, jump @0\n      : @238 [@dyn 62] (gas: 5)\n 15978: i32 a1 = a0 + 0\n 15980: a0 = 0\n 15982: a2 = 0\n 15984: ecalli 13 // 'seal_return'\n 15986: fallthrough\n      : @239 (gas: 1)\n 15987: jump @241 if a0 == 192484400\n      : @240 (gas: 1)\n 15994: jump @361\n      : @241 (gas: 11)\n 15997: a0 = sp + 0xffffffffffffffe0\n 16000: a0 = a0 & 0xffffffffffffffe0\n 16003: u64 [s1 + 0x1d0] = a0\n 16007: sp = a0\n 16009: u64 [a0 + 24] = 0\n 16012: u64 [a0 + 16] = 0\n 16015: u64 [a0 + 8] = 0\n 16018: u64 [a0 + 0] = 0\n 16020: i32 a0 = a0 + 0\n 16022: ecalli 16 // 'value_transferred'\n 16024: fallthrough\n      : @242 (gas: 9)\n 16025: a3 = u64 [s1 + 0x1d0]\n 16029: a0 = u64 [a3 + 0x10]\n 16032: a1 = u64 [a3 + 0x18]\n 16035: a2 = u64 [a3 + 0x8]\n 16038: a3 = u64 [a3]\n 16040: a1 = a1 | a2\n 16043: a0 = a0 | a3\n 16046: a0 = a0 | a1\n 16049: jump @244 if a0 == 0\n      : @243 (gas: 1)\n 16052: jump @361\n      : @244 (gas: 3)\n 16055: a0 = u64 [s1 + 0x1d8]\n 16059: a0 = i32 [a0]\n 16061: jump @246 if a0 >u 35\n      : @245 (gas: 1)\n 16065: jump @361\n      : @246 (gas: 17)\n 16068: a0 = s1 + 0x1000\n 16072: i32 a0 = a0 + 0xfffffffffffffb20\n 16076: a1 = 0x4\n 16079: ecalli 3 // 'call_data_load'\n 16081: a0 = s1 + 0x7ff\n 16085: a0 = a0 + 0x159\n 16089: a1 = u64 [a0 + 0x1c8]\n 16093: u64 [s1 + 0x1d8] = a1\n 16097: a1 = u64 [a0 + 0x1d0]\n 16101: u64 [s1 + 0x1d0] = a1\n 16105: a1 = u64 [a0 + 0x1d8]\n 16109: u64 [s1 + 0x1c8] = a1\n 16113: a0 = u64 [a0 + 0x1e0]\n 16117: u64 [s1 + 0x1c0] = a0\n 16121: a1 = 0x20\n 16124: a0 = 0\n 16126: ra = 126, jump @0\n      : @247 [@dyn 63] (gas: 71)\n 16131: a1 = u64 [s1 + 0x1c0]\n 16135: a1 = reverse a1\n 16137: a2 = u64 [s1 + 0x1c8]\n 16141: a2 = reverse a2\n 16143: a3 = u64 [s1 + 0x1d0]\n 16147: a3 = reverse a3\n 16149: a4 = u64 [s1 + 0x1d8]\n 16153: a4 = reverse a4\n 16155: a5 = a4 >> 0x38\n 16158: u8 [a0 + 0x1f] = a5\n 16161: a5 = a4 >> 0x30\n 16164: u8 [a0 + 0x1e] = a5\n 16167: a5 = a4 >> 0x28\n 16170: u8 [a0 + 0x1d] = a5\n 16173: a5 = a4 >> 0x20\n 16176: u8 [a0 + 0x1c] = a5\n 16179: a5 = a4 >> 0x18\n 16182: u8 [a0 + 0x1b] = a5\n 16185: a5 = a4 >> 0x10\n 16188: u8 [a0 + 0x1a] = a5\n 16191: a5 = a4 >> 0x8\n 16194: u8 [a0 + 0x19] = a5\n 16197: u8 [a0 + 0x18] = a4\n 16200: a4 = a3 >> 0x38\n 16203: u8 [a0 + 0x17] = a4\n 16206: a4 = a3 >> 0x30\n 16209: u8 [a0 + 0x16] = a4\n 16212: a4 = a3 >> 0x28\n 16215: u8 [a0 + 0x15] = a4\n 16218: a4 = a3 >> 0x20\n 16221: u8 [a0 + 0x14] = a4\n 16224: a4 = a3 >> 0x18\n 16227: u8 [a0 + 0x13] = a4\n 16230: a4 = a3 >> 0x10\n 16233: u8 [a0 + 0x12] = a4\n 16236: a4 = a3 >> 0x8\n 16239: u8 [a0 + 0x11] = a4\n 16242: u8 [a0 + 0x10] = a3\n 16245: a3 = a2 >> 0x38\n 16248: u8 [a0 + 0xf] = a3\n 16251: a3 = a2 >> 0x30\n 16254: u8 [a0 + 0xe] = a3\n 16257: a3 = a2 >> 0x28\n 16260: u8 [a0 + 0xd] = a3\n 16263: a3 = a2 >> 0x20\n 16266: u8 [a0 + 0xc] = a3\n 16269: a3 = a2 >> 0x18\n 16272: u8 [a0 + 0xb] = a3\n 16275: a3 = a2 >> 0x10\n 16278: u8 [a0 + 0xa] = a3\n 16281: a3 = a2 >> 0x8\n 16284: u8 [a0 + 0x9] = a3\n 16287: u8 [a0 + 0x8] = a2\n 16290: a2 = a1 >> 0x38\n 16293: u8 [a0 + 0x7] = a2\n 16296: a2 = a1 >> 0x30\n 16299: u8 [a0 + 0x6] = a2\n 16302: a2 = a1 >> 0x28\n 16305: u8 [a0 + 0x5] = a2\n 16308: a2 = a1 >> 0x20\n 16311: u8 [a0 + 0x4] = a2\n 16314: a2 = a1 >> 0x18\n 16317: u8 [a0 + 0x3] = a2\n 16320: a2 = a1 >> 0x10\n 16323: u8 [a0 + 0x2] = a2\n 16326: a2 = a1 >> 0x8\n 16329: u8 [a0 + 0x1] = a2\n 16332: u8 [a0] = a1\n 16334: a0 = 0x20\n 16337: a1 = 0x20\n 16340: ra = 128, jump @0\n      : @248 [@dyn 64] (gas: 35)\n 16346: u8 [a0 + 31] = 0x2\n 16350: u8 [a0 + 30] = 0\n 16353: u8 [a0 + 29] = 0\n 16356: u8 [a0 + 28] = 0\n 16359: u8 [a0 + 27] = 0\n 16362: u8 [a0 + 26] = 0\n 16365: u8 [a0 + 25] = 0\n 16368: u8 [a0 + 24] = 0\n 16371: u8 [a0 + 23] = 0\n 16374: u8 [a0 + 22] = 0\n 16377: u8 [a0 + 21] = 0\n 16380: u8 [a0 + 20] = 0\n 16383: u8 [a0 + 19] = 0\n 16386: u8 [a0 + 18] = 0\n 16389: u8 [a0 + 17] = 0\n 16392: u8 [a0 + 16] = 0\n 16395: u8 [a0 + 15] = 0\n 16398: u8 [a0 + 14] = 0\n 16401: u8 [a0 + 13] = 0\n 16404: u8 [a0 + 12] = 0\n 16407: u8 [a0 + 11] = 0\n 16410: u8 [a0 + 10] = 0\n 16413: u8 [a0 + 9] = 0\n 16416: u8 [a0 + 8] = 0\n 16419: u8 [a0 + 7] = 0\n 16422: u8 [a0 + 6] = 0\n 16425: u8 [a0 + 5] = 0\n 16428: u8 [a0 + 4] = 0\n 16431: u8 [a0 + 3] = 0\n 16434: u8 [a0 + 2] = 0\n 16437: u8 [a0 + 1] = 0\n 16440: u8 [a0 + 0] = 0\n 16442: a1 = 0x40\n 16445: a0 = 0\n 16447: ra = 130, jump @0\n      : @249 [@dyn 65] (gas: 68)\n 16453: a1 = sp + 0xffffffffffffffe0\n 16456: a1 = a1 & 0xffffffffffffffe0\n 16459: u64 [s1 + 0x1d8] = a1\n 16463: sp = a1\n 16465: i32 a0 = a0 + 0\n 16467: i32 a2 = a1 + 0\n 16469: a1 = 0x40\n 16472: ecalli 8 // 'hash_keccak_256'\n 16474: a3 = u64 [s1 + 0x1d8]\n 16478: a0 = u64 [a3 + 0x18]\n 16481: a1 = u64 [a3 + 0x10]\n 16484: a2 = u64 [a3 + 0x8]\n 16487: a3 = u64 [a3]\n 16489: a5 = reverse a0\n 16491: u64 [s1 + 0x1c8] = a5\n 16495: a4 = reverse a1\n 16497: u64 [s1 + 0x1d0] = a4\n 16501: a2 = reverse a2\n 16503: u64 [s1 + 0x1c0] = a2\n 16507: a0 = reverse a3\n 16509: u64 [s1 + 0x1d8] = a0\n 16513: a1 = s1 + 0x7ff\n 16517: a1 = a1 + 0x159\n 16521: u64 [a1 + 0x4c0] = a0\n 16525: u64 [a1 + 0x4b8] = a2\n 16529: u64 [a1 + 0x4b0] = a4\n 16533: u64 [a1 + 0x4a8] = a5\n 16537: u64 [a1 + 1248] = 0\n 16541: u64 [a1 + 1240] = 0\n 16545: u64 [a1 + 1232] = 0\n 16549: u64 [a1 + 1224] = 0\n 16553: u32 [a1 + 1256] = 0x20\n 16558: a0 = s1 + 0x1000\n 16562: i32 a1 = a0 + 0xfffffffffffffe00\n 16566: a0 = s1 + 0x1000\n 16570: i32 a3 = a0 + 0xfffffffffffffe20\n 16574: a0 = s1 + 0x1000\n 16578: i32 a4 = a0 + 0xfffffffffffffe40\n 16582: a2 = 0xffffffffffffffff\n 16585: a0 = 0\n 16587: ecalli 7 // 'get_storage'\n 16589: a1 = s1 + 0x7ff\n 16593: a1 = a1 + 0x159\n 16597: a0 = u64 [a1 + 0x4c8]\n 16601: u64 [s1 + 0x1b8] = a0\n 16605: a0 = u64 [a1 + 0x4d0]\n 16609: u64 [s1 + 0x1b0] = a0\n 16613: a0 = u32 [a1 + 0x4d8]\n 16617: u64 [s1 + 0x1a8] = a0\n 16621: a2 = u64 [s1 + 0x1c8]\n 16625: a2 = a2 + 0x1\n 16628: a0 = a2 <u 0x1\n 16631: a1 = u64 [s1 + 0x1d0]\n 16635: a0 = a0 + a1\n 16638: a1 = a2 | a0\n 16641: a1 = a1 <u 0x1\n 16644: a3 = u64 [s1 + 0x1c0]\n 16648: a1 = a1 + a3\n 16651: a3 = a1 <u a3\n 16654: a4 = u64 [s1 + 0x1d8]\n 16658: a3 = a3 + a4\n 16661: u64 [s1 + 0x318] = a3\n 16665: u64 [s1 + 0x310] = a1\n 16669: u64 [s1 + 0x308] = a0\n 16673: a0 = s1 + 0x320\n 16677: a1 = s1 + 0x300\n 16681: u64 [s1 + 0x300] = a2\n 16685: ra = 132, jump @403\n      : @250 [@dyn 66] (gas: 213)\n 16691: a0 = u64 [s1 + 0x320]\n 16695: u64 [s1 + 0x1a0] = a0\n 16699: a0 = u64 [s1 + 0x328]\n 16703: u64 [s1 + 0x198] = a0\n 16707: a0 = u64 [s1 + 0x330]\n 16711: u64 [s1 + 0x190] = a0\n 16715: a0 = u64 [s1 + 0x338]\n 16719: u64 [s1 + 0x188] = a0\n 16723: a1 = u64 [s1 + 0x1c8]\n 16727: a0 = a1 + 0x2\n 16730: a1 = a0 <u a1\n 16733: a3 = u64 [s1 + 0x1d0]\n 16737: a2 = a3 + a1\n 16740: a3 = a2 <u a3\n 16743: a3 = a1 if a1 == 0\n 16746: a1 = u64 [s1 + 0x1c0]\n 16750: a3 = a3 + a1\n 16753: a1 = a3 <u a1\n 16756: a4 = u64 [s1 + 0x1d8]\n 16760: a1 = a1 + a4\n 16763: a4 = s1 + 0x7ff\n 16767: a4 = a4 + 0x159\n 16771: u64 [a4 + 0x4c0] = a1\n 16775: u64 [a4 + 0x4b8] = a3\n 16779: u64 [a4 + 0x4b0] = a2\n 16783: u64 [a4 + 0x4a8] = a0\n 16787: u64 [a4 + 1248] = 0\n 16791: u64 [a4 + 1240] = 0\n 16795: u64 [a4 + 1232] = 0\n 16799: u64 [a4 + 1224] = 0\n 16803: u32 [a4 + 1256] = 0x20\n 16808: a0 = s1 + 0x1000\n 16812: i32 a1 = a0 + 0xfffffffffffffe00\n 16816: a0 = s1 + 0x1000\n 16820: i32 a3 = a0 + 0xfffffffffffffe20\n 16824: a0 = s1 + 0x1000\n 16828: i32 a4 = a0 + 0xfffffffffffffe40\n 16832: a2 = 0xffffffffffffffff\n 16835: a0 = 0\n 16837: ecalli 7 // 'get_storage'\n 16839: a1 = u64 [s1 + 0x1c8]\n 16843: a0 = a1 + 0x3\n 16846: a1 = a0 <u a1\n 16849: a3 = u64 [s1 + 0x1d0]\n 16853: a2 = a3 + a1\n 16856: a3 = a2 <u a3\n 16859: a3 = a1 if a1 == 0\n 16862: a1 = u64 [s1 + 0x1c0]\n 16866: a3 = a3 + a1\n 16869: a1 = a3 <u a1\n 16872: a4 = u64 [s1 + 0x1d8]\n 16876: a1 = a1 + a4\n 16879: a4 = s1 + 0x7ff\n 16883: a4 = a4 + 0x159\n 16887: u64 [a4 + 0x4c0] = a1\n 16891: a1 = u64 [a4 + 0x4c8]\n 16895: u64 [s1 + 0x180] = a1\n 16899: u64 [a4 + 0x4b8] = a3\n 16903: a1 = u64 [a4 + 0x4d0]\n 16907: u64 [s1 + 0x178] = a1\n 16911: u64 [a4 + 0x4b0] = a2\n 16915: a1 = u64 [a4 + 0x4d8]\n 16919: u64 [s1 + 0x170] = a1\n 16923: u64 [a4 + 0x4a8] = a0\n 16927: a0 = u64 [a4 + 0x4e0]\n 16931: u64 [s1 + 0x168] = a0\n 16935: u64 [a4 + 1248] = 0\n 16939: u64 [a4 + 1240] = 0\n 16943: u64 [a4 + 1232] = 0\n 16947: u64 [a4 + 1224] = 0\n 16951: u32 [a4 + 1256] = 0x20\n 16956: a0 = s1 + 0x1000\n 16960: i32 a1 = a0 + 0xfffffffffffffe00\n 16964: a0 = s1 + 0x1000\n 16968: i32 a3 = a0 + 0xfffffffffffffe20\n 16972: a0 = s1 + 0x1000\n 16976: i32 a4 = a0 + 0xfffffffffffffe40\n 16980: a2 = 0xffffffffffffffff\n 16983: a0 = 0\n 16985: ecalli 7 // 'get_storage'\n 16987: a1 = u64 [s1 + 0x1c8]\n 16991: a0 = a1 + 0x4\n 16994: a1 = a0 <u a1\n 16997: a3 = u64 [s1 + 0x1d0]\n 17001: a2 = a3 + a1\n 17004: a3 = a2 <u a3\n 17007: a3 = a1 if a1 == 0\n 17010: a1 = u64 [s1 + 0x1c0]\n 17014: a3 = a3 + a1\n 17017: a1 = a3 <u a1\n 17020: a4 = u64 [s1 + 0x1d8]\n 17024: a1 = a1 + a4\n 17027: a4 = s1 + 0x7ff\n 17031: a4 = a4 + 0x159\n 17035: u64 [a4 + 0x4c0] = a1\n 17039: a1 = u64 [a4 + 0x4c8]\n 17043: u64 [s1 + 0x160] = a1\n 17047: u64 [a4 + 0x4b8] = a3\n 17051: a1 = u64 [a4 + 0x4d0]\n 17055: u64 [s1 + 0x158] = a1\n 17059: u64 [a4 + 0x4b0] = a2\n 17063: a1 = u64 [a4 + 0x4d8]\n 17067: u64 [s1 + 0x150] = a1\n 17071: u64 [a4 + 0x4a8] = a0\n 17075: a0 = u64 [a4 + 0x4e0]\n 17079: u64 [s1 + 0x148] = a0\n 17083: u64 [a4 + 1248] = 0\n 17087: u64 [a4 + 1240] = 0\n 17091: u64 [a4 + 1232] = 0\n 17095: u64 [a4 + 1224] = 0\n 17099: u32 [a4 + 1256] = 0x20\n 17104: a0 = s1 + 0x1000\n 17108: i32 a1 = a0 + 0xfffffffffffffe00\n 17112: a0 = s1 + 0x1000\n 17116: i32 a3 = a0 + 0xfffffffffffffe20\n 17120: a0 = s1 + 0x1000\n 17124: i32 a4 = a0 + 0xfffffffffffffe40\n 17128: a2 = 0xffffffffffffffff\n 17131: a0 = 0\n 17133: ecalli 7 // 'get_storage'\n 17135: a1 = u64 [s1 + 0x1c8]\n 17139: a0 = a1 + 0x5\n 17142: a1 = a0 <u a1\n 17145: a3 = u64 [s1 + 0x1d0]\n 17149: a2 = a3 + a1\n 17152: a3 = a2 <u a3\n 17155: a3 = a1 if a1 == 0\n 17158: a1 = u64 [s1 + 0x1c0]\n 17162: a3 = a3 + a1\n 17165: a1 = a3 <u a1\n 17168: a4 = u64 [s1 + 0x1d8]\n 17172: a1 = a1 + a4\n 17175: a4 = s1 + 0x7ff\n 17179: a4 = a4 + 0x159\n 17183: u64 [a4 + 0x4c0] = a1\n 17187: a1 = u64 [a4 + 0x4c8]\n 17191: u64 [s1 + 0x140] = a1\n 17195: u64 [a4 + 0x4b8] = a3\n 17199: a1 = u64 [a4 + 0x4d0]\n 17203: u64 [s1 + 0x138] = a1\n 17207: u64 [a4 + 0x4b0] = a2\n 17211: a1 = u64 [a4 + 0x4d8]\n 17215: u64 [s1 + 0x130] = a1\n 17219: u64 [a4 + 0x4a8] = a0\n 17223: a0 = u64 [a4 + 0x4e0]\n 17227: u64 [s1 + 0x128] = a0\n 17231: u64 [a4 + 1248] = 0\n 17235: u64 [a4 + 1240] = 0\n 17239: u64 [a4 + 1232] = 0\n 17243: u64 [a4 + 1224] = 0\n 17247: u32 [a4 + 1256] = 0x20\n 17252: a0 = s1 + 0x1000\n 17256: i32 a1 = a0 + 0xfffffffffffffe00\n 17260: a0 = s1 + 0x1000\n 17264: i32 a3 = a0 + 0xfffffffffffffe20\n 17268: a0 = s1 + 0x1000\n 17272: i32 a4 = a0 + 0xfffffffffffffe40\n 17276: a2 = 0xffffffffffffffff\n 17279: a0 = 0\n 17281: ecalli 7 // 'get_storage'\n 17283: a1 = u64 [s1 + 0x1c8]\n 17287: a0 = a1 + 0x6\n 17290: a1 = a0 <u a1\n 17293: a3 = u64 [s1 + 0x1d0]\n 17297: a2 = a3 + a1\n 17300: a3 = a2 <u a3\n 17303: a3 = a1 if a1 == 0\n 17306: a1 = u64 [s1 + 0x1c0]\n 17310: a3 = a3 + a1\n 17313: a1 = a3 <u a1\n 17316: a4 = u64 [s1 + 0x1d8]\n 17320: a1 = a1 + a4\n 17323: a4 = s1 + 0x7ff\n 17327: a4 = a4 + 0x159\n 17331: u64 [a4 + 0x4c0] = a1\n 17335: u64 [a4 + 0x4b8] = a3\n 17339: a1 = u64 [a4 + 0x4c8]\n 17343: u64 [s1 + 0x1d0] = a1\n 17347: u64 [a4 + 0x4b0] = a2\n 17351: a1 = u64 [a4 + 0x4d0]\n 17355: u64 [s1 + 0x1c8] = a1\n 17359: u64 [a4 + 0x4a8] = a0\n 17363: a0 = u64 [a4 + 0x4d8]\n 17367: u64 [s1 + 0x1c0] = a0\n 17371: u32 [a4 + 1256] = 0x20\n 17376: a0 = u64 [a4 + 0x4e0]\n 17380: u64 [s1 + 0x120] = a0\n 17384: u64 [a4 + 1248] = 0\n 17388: u64 [a4 + 1240] = 0\n 17392: u64 [a4 + 1232] = 0\n 17396: u64 [a4 + 1224] = 0\n 17400: a0 = s1 + 0x1000\n 17404: i32 a1 = a0 + 0xfffffffffffffe00\n 17408: a0 = s1 + 0x1000\n 17412: i32 a3 = a0 + 0xfffffffffffffe20\n 17416: a0 = s1 + 0x1000\n 17420: i32 a4 = a0 + 0xfffffffffffffe40\n 17424: a2 = 0xffffffffffffffff\n 17427: a0 = 0\n 17429: ecalli 7 // 'get_storage'\n 17431: a1 = s1 + 0x7ff\n 17435: a1 = a1 + 0x159\n 17439: a0 = u64 [a1 + 0x4c8]\n 17443: u64 [s1 + 0x118] = a0\n 17447: a0 = u64 [a1 + 0x4d0]\n 17451: u64 [s1 + 0x110] = a0\n 17455: a0 = u64 [a1 + 0x4d8]\n 17459: u64 [s1 + 0x108] = a0\n 17463: a0 = u64 [a1 + 0x4e0]\n 17467: u64 [s1 + 0x100] = a0\n 17471: a0 = 0x40\n 17474: a1 = 0x20\n 17477: ra = 134, jump @0\n      : @251 [@dyn 67] (gas: 169)\n 17483: a1 = u8 [a0 + 0x1]\n 17486: a2 = u8 [a0]\n 17488: a3 = u8 [a0 + 0x2]\n 17491: a4 = u8 [a0 + 0x3]\n 17494: a1 = a1 << 0x8\n 17497: a1 = a1 | a2\n 17500: a3 = a3 << 0x10\n 17503: a4 = a4 << 0x18\n 17506: a3 = a3 | a4\n 17509: a1 = a1 | a3\n 17512: a2 = u8 [a0 + 0x5]\n 17515: a3 = u8 [a0 + 0x4]\n 17518: a4 = u8 [a0 + 0x6]\n 17521: a5 = u8 [a0 + 0x7]\n 17524: a2 = a2 << 0x8\n 17527: a2 = a2 | a3\n 17530: a4 = a4 << 0x10\n 17533: a5 = a5 << 0x18\n 17536: a4 = a4 | a5\n 17539: a2 = a2 | a4\n 17542: a2 = a2 << 0x20\n 17545: t0 = a2 | a1\n 17548: a2 = u8 [a0 + 0x9]\n 17551: a3 = u8 [a0 + 0x8]\n 17554: a4 = u8 [a0 + 0xa]\n 17557: a5 = u8 [a0 + 0xb]\n 17560: a2 = a2 << 0x8\n 17563: a2 = a2 | a3\n 17566: a4 = a4 << 0x10\n 17569: a5 = a5 << 0x18\n 17572: a4 = a4 | a5\n 17575: a2 = a2 | a4\n 17578: a3 = u8 [a0 + 0xd]\n 17581: a4 = u8 [a0 + 0xc]\n 17584: a5 = u8 [a0 + 0xe]\n 17587: a1 = u8 [a0 + 0xf]\n 17590: a3 = a3 << 0x8\n 17593: a3 = a3 | a4\n 17596: a5 = a5 << 0x10\n 17599: a1 = a1 << 0x18\n 17602: a1 = a1 | a5\n 17605: a1 = a1 | a3\n 17608: a1 = a1 << 0x20\n 17611: t1 = a1 | a2\n 17614: a1 = u8 [a0 + 0x11]\n 17617: a3 = u8 [a0 + 0x10]\n 17620: a4 = u8 [a0 + 0x12]\n 17623: a5 = u8 [a0 + 0x13]\n 17626: a1 = a1 << 0x8\n 17629: a1 = a1 | a3\n 17632: a4 = a4 << 0x10\n 17635: a5 = a5 << 0x18\n 17638: a4 = a4 | a5\n 17641: a1 = a1 | a4\n 17644: a3 = u8 [a0 + 0x15]\n 17647: a4 = u8 [a0 + 0x14]\n 17650: a5 = u8 [a0 + 0x16]\n 17653: a2 = u8 [a0 + 0x17]\n 17656: a3 = a3 << 0x8\n 17659: a3 = a3 | a4\n 17662: a5 = a5 << 0x10\n 17665: a2 = a2 << 0x18\n 17668: a2 = a2 | a5\n 17671: a2 = a2 | a3\n 17674: a2 = a2 << 0x20\n 17677: a3 = a2 | a1\n 17680: a1 = u8 [a0 + 0x19]\n 17683: a2 = u8 [a0 + 0x18]\n 17686: a4 = u8 [a0 + 0x1a]\n 17689: a5 = u8 [a0 + 0x1b]\n 17692: a1 = a1 << 0x8\n 17695: a1 = a1 | a2\n 17698: a4 = a4 << 0x10\n 17701: a5 = a5 << 0x18\n 17704: a4 = a4 | a5\n 17707: a1 = a1 | a4\n 17710: a2 = u8 [a0 + 0x1d]\n 17713: a4 = u8 [a0 + 0x1c]\n 17716: a5 = u8 [a0 + 0x1e]\n 17719: a0 = u8 [a0 + 0x1f]\n 17722: a2 = a2 << 0x8\n 17725: a2 = a2 | a4\n 17728: a5 = a5 << 0x10\n 17731: a0 = a0 << 0x18\n 17734: a0 = a0 | a5\n 17737: a0 = a0 | a2\n 17740: a0 = a0 << 0x20\n 17743: a0 = a0 | a1\n 17746: t2 = reverse a0\n 17748: u64 [s1 + 0xe8] = t2\n 17752: a2 = reverse a3\n 17754: u64 [s1 + 0xf0] = a2\n 17758: a1 = reverse t1\n 17760: u64 [s1 + 0xf8] = a1\n 17764: a3 = reverse t0\n 17766: u64 [s1 + 0x1d8] = a3\n 17770: sp = sp + 0xffffffffffffffe8\n 17773: a0 = s1 + 0x1e0\n 17777: u64 [sp + 0x10] = a0\n 17780: a0 = s1 + 0x200\n 17784: u64 [sp + 0x8] = a0\n 17787: a0 = s1 + 0x220\n 17791: u64 [sp] = a0\n 17793: a0 = u64 [s1 + 0x100]\n 17797: u64 [s1 + 0x1f8] = a0\n 17801: a0 = u64 [s1 + 0x108]\n 17805: u64 [s1 + 0x1f0] = a0\n 17809: a0 = u64 [s1 + 0x110]\n 17813: u64 [s1 + 0x1e8] = a0\n 17817: a0 = u64 [s1 + 0x118]\n 17821: u64 [s1 + 0x1e0] = a0\n 17825: a0 = u64 [s1 + 0x120]\n 17829: u64 [s1 + 0x218] = a0\n 17833: a0 = u64 [s1 + 0x1c0]\n 17837: u64 [s1 + 0x210] = a0\n 17841: a0 = u64 [s1 + 0x1c8]\n 17845: u64 [s1 + 0x208] = a0\n 17849: a0 = u64 [s1 + 0x1d0]\n 17853: u64 [s1 + 0x200] = a0\n 17857: a0 = u64 [s1 + 0x128]\n 17861: u64 [s1 + 0x238] = a0\n 17865: a0 = u64 [s1 + 0x130]\n 17869: u64 [s1 + 0x230] = a0\n 17873: a0 = u64 [s1 + 0x138]\n 17877: u64 [s1 + 0x228] = a0\n 17881: a0 = u64 [s1 + 0x140]\n 17885: u64 [s1 + 0x220] = a0\n 17889: a0 = u64 [s1 + 0x148]\n 17893: u64 [s1 + 0x258] = a0\n 17897: a0 = u64 [s1 + 0x150]\n 17901: u64 [s1 + 0x250] = a0\n 17905: a0 = u64 [s1 + 0x158]\n 17909: u64 [s1 + 0x248] = a0\n 17913: a0 = u64 [s1 + 0x160]\n 17917: u64 [s1 + 0x240] = a0\n 17921: a0 = u64 [s1 + 0x168]\n 17925: u64 [s1 + 0x278] = a0\n 17929: a0 = u64 [s1 + 0x170]\n 17933: u64 [s1 + 0x270] = a0\n 17937: a0 = u64 [s1 + 0x178]\n 17941: u64 [s1 + 0x268] = a0\n 17945: a0 = u64 [s1 + 0x180]\n 17949: u64 [s1 + 0x260] = a0\n 17953: a0 = u64 [s1 + 0x188]\n 17957: u64 [s1 + 0x298] = a0\n 17961: a0 = u64 [s1 + 0x190]\n 17965: u64 [s1 + 0x290] = a0\n 17969: a0 = u64 [s1 + 0x198]\n 17973: u64 [s1 + 0x288] = a0\n 17977: a0 = u64 [s1 + 0x1a0]\n 17981: u64 [s1 + 0x280] = a0\n 17985: u64 [s1 + 696] = 0\n 17989: a0 = u64 [s1 + 0x1a8]\n 17993: u64 [s1 + 0x2b0] = a0\n 17997: a0 = u64 [s1 + 0x1b0]\n 18001: u64 [s1 + 0x2a8] = a0\n 18005: a0 = u64 [s1 + 0x1b8]\n 18009: u64 [s1 + 0x2a0] = a0\n 18013: u64 [s1 + 0x2d8] = a3\n 18017: u64 [s1 + 0x2d0] = a1\n 18021: u64 [s1 + 0x2c8] = a2\n 18025: a0 = s1 + 0x2e0\n 18029: a1 = s1 + 0x2c0\n 18033: a2 = s1 + 0x2a0\n 18037: a3 = s1 + 0x280\n 18041: a4 = s1 + 0x260\n 18045: a5 = s1 + 0x240\n 18049: u64 [s1 + 0x2c0] = t2\n 18053: ra = 136, jump @447\n      : @252 [@dyn 68] (gas: 13)\n 18059: a4 = u64 [s1 + 0xf0]\n 18063: a2 = u64 [s1 + 0xe8]\n 18067: sp = sp + 0x18\n 18070: a0 = u64 [s1 + 0x1d8]\n 18074: a0 = a0 | a4\n 18077: a3 = u64 [s1 + 0xf8]\n 18081: a1 = a2 | a3\n 18084: a1 = a1 | a0\n 18087: a1 = a1 >> 0x20\n 18090: a0 = a0 | a3\n 18093: a0 = a0 << 0x20\n 18096: a0 = a0 | a1\n 18099: jump @256 if a0 != 0\n      : @253 (gas: 7)\n 18102: t0 = a3\n 18104: a0 = u64 [s1 + 0x2e8]\n 18108: a1 = u64 [s1 + 0x2f8]\n 18112: u64 [s1 + 0x1d0] = a1\n 18116: t1 = u64 [s1 + 0x2e0]\n 18120: a3 = u64 [s1 + 0x2f0]\n 18124: fallthrough\n      : @254 (gas: 26)\n 18125: t2 = a0 ^ a4\n 18128: a5 = a0 <u a4\n 18131: ra = t1 <u a2\n 18134: a5 = ra if t2 == 0\n 18137: a1 = a3 - t0\n 18140: t2 = a1 - a5\n 18143: a1 = a1 <u a5\n 18146: u64 [s1 + 0x1c8] = a1\n 18150: a3 = a3 <u t0\n 18153: a5 = u64 [s1 + 0x1d8]\n 18157: a1 = u64 [s1 + 0x1d0]\n 18161: a5 = a1 - a5\n 18164: a5 = a5 - a3\n 18167: a1 = u64 [s1 + 0x1c8]\n 18171: a5 = a5 - a1\n 18174: a0 = a0 - a4\n 18177: a0 = a0 - ra\n 18180: a1 = t1 - a2\n 18183: a0 = a0 | a5\n 18186: a3 = a1 | t2\n 18189: a3 = a3 | a0\n 18192: a0 = a0 | t2\n 18195: a3 = a3 >> 0x20\n 18198: a0 = a0 << 0x20\n 18201: a0 = a0 | a3\n 18204: jump @256 if a0 != 0\n      : @255 (gas: 1)\n 18207: jump @380\n      : @256 (gas: 1)\n 18210: trap\n      : @257 (gas: 10)\n 18211: ecalli 12 // 'return_data_size'\n 18213: a1 = a0 + 0x1f\n 18216: u64 [s1 + 0x170] = a0\n 18220: a0 = a1 <u a0\n 18223: u64 [s1 + 0x1a8] = a0\n 18227: a1 = a1 & 0xffffffffffffffe0\n 18230: u64 [s1 + 0x1a0] = a1\n 18234: a0 = 0x40\n 18237: a1 = 0x20\n 18240: ra = 138, jump @0\n      : @258 [@dyn 69] (gas: 118)\n 18246: a1 = u8 [a0 + 0x11]\n 18249: a2 = u8 [a0 + 0x10]\n 18252: a3 = u8 [a0 + 0x12]\n 18255: a4 = u8 [a0 + 0x13]\n 18258: a1 = a1 << 0x8\n 18261: a1 = a1 | a2\n 18264: a3 = a3 << 0x10\n 18267: a4 = a4 << 0x18\n 18270: a3 = a3 | a4\n 18273: a1 = a1 | a3\n 18276: a2 = u8 [a0 + 0x15]\n 18279: a3 = u8 [a0 + 0x14]\n 18282: a4 = u8 [a0 + 0x16]\n 18285: a5 = u8 [a0 + 0x17]\n 18288: a2 = a2 << 0x8\n 18291: a2 = a2 | a3\n 18294: a4 = a4 << 0x10\n 18297: a5 = a5 << 0x18\n 18300: a4 = a4 | a5\n 18303: a2 = a2 | a4\n 18306: a2 = a2 << 0x20\n 18309: t0 = a2 | a1\n 18312: a2 = u8 [a0 + 0x19]\n 18315: a3 = u8 [a0 + 0x18]\n 18318: a4 = u8 [a0 + 0x1a]\n 18321: a5 = u8 [a0 + 0x1b]\n 18324: a2 = a2 << 0x8\n 18327: a2 = a2 | a3\n 18330: a4 = a4 << 0x10\n 18333: a5 = a5 << 0x18\n 18336: a4 = a4 | a5\n 18339: a2 = a2 | a4\n 18342: a3 = u8 [a0 + 0x1d]\n 18345: a4 = u8 [a0 + 0x1c]\n 18348: a5 = u8 [a0 + 0x1e]\n 18351: a1 = u8 [a0 + 0x1f]\n 18354: a3 = a3 << 0x8\n 18357: a3 = a3 | a4\n 18360: a5 = a5 << 0x10\n 18363: a1 = a1 << 0x18\n 18366: a1 = a1 | a5\n 18369: a1 = a1 | a3\n 18372: a1 = a1 << 0x20\n 18375: t1 = a1 | a2\n 18378: a1 = u8 [a0 + 0x9]\n 18381: a3 = u8 [a0 + 0x8]\n 18384: a4 = u8 [a0 + 0xa]\n 18387: a5 = u8 [a0 + 0xb]\n 18390: a1 = a1 << 0x8\n 18393: a1 = a1 | a3\n 18396: a4 = a4 << 0x10\n 18399: a5 = a5 << 0x18\n 18402: a4 = a4 | a5\n 18405: a1 = a1 | a4\n 18408: a3 = u8 [a0 + 0xd]\n 18411: a4 = u8 [a0 + 0xc]\n 18414: a5 = u8 [a0 + 0xe]\n 18417: a2 = u8 [a0 + 0xf]\n 18420: a3 = a3 << 0x8\n 18423: a3 = a3 | a4\n 18426: a5 = a5 << 0x10\n 18429: a2 = a2 << 0x18\n 18432: a2 = a2 | a5\n 18435: a2 = a2 | a3\n 18438: a2 = a2 << 0x20\n 18441: a3 = a2 | a1\n 18444: a1 = u8 [a0 + 0x1]\n 18447: a2 = u8 [a0]\n 18449: a4 = u8 [a0 + 0x2]\n 18452: a5 = u8 [a0 + 0x3]\n 18455: a1 = a1 << 0x8\n 18458: a1 = a1 | a2\n 18461: a4 = a4 << 0x10\n 18464: a5 = a5 << 0x18\n 18467: a4 = a4 | a5\n 18470: a1 = a1 | a4\n 18473: a2 = u8 [a0 + 0x5]\n 18476: a4 = u8 [a0 + 0x4]\n 18479: a5 = u8 [a0 + 0x6]\n 18482: a0 = u8 [a0 + 0x7]\n 18485: a2 = a2 << 0x8\n 18488: a2 = a2 | a4\n 18491: a5 = a5 << 0x10\n 18494: a0 = a0 << 0x18\n 18497: a0 = a0 | a5\n 18500: a0 = a0 | a2\n 18503: a0 = a0 << 0x20\n 18506: a0 = a0 | a1\n 18509: t2 = reverse a0\n 18511: ra = reverse a3\n 18513: a3 = reverse t1\n 18515: a4 = reverse t0\n 18517: a1 = u64 [s1 + 0x1a0]\n 18521: a0 = a1 + 0x3f\n 18524: a1 = a0 <u a1\n 18527: a2 = u64 [s1 + 0x1a8]\n 18531: a1 = a1 + a2\n 18534: a0 = a0 & 0xffffffffffffffe0\n 18537: a2 = a1 + a4\n 18540: u64 [s1 + 0x1b0] = a3\n 18544: t0 = a0 + a3\n 18547: a0 = t0 <u a0\n 18550: a5 = a2 + a0\n 18553: a2 = a5 ^ a1\n 18556: a1 = a5 <u a1\n 18559: a1 = a0 if a2 == 0\n 18562: a3 = ra + a1\n 18565: t1 = a3 <u ra\n 18568: a0 = t2 + t1\n 18571: a1 = a3 >u 0\n 18573: a2 = a0 >u 0\n 18575: a2 = a1 if a0 == 0\n 18578: u64 [s1 + 0x1a8] = a3\n 18582: u64 [s1 + 0x1a0] = a0\n 18586: a1 = a3 | a0\n 18589: a3 = a5 >u 0\n 18591: a3 = a2 if a1 != 0\n 18594: jump @260 if a3 == 0\n      : @259 (gas: 1)\n 18597: jump @382\n      : @260 (gas: 14)\n 18600: a0 = u64 [s1 + 0x1b0]\n 18604: a1 = t0 <u a0\n 18607: a2 = a5 ^ a4\n 18610: a3 = a5 <u a4\n 18613: a3 = a1 if a2 == 0\n 18616: a0 = u64 [s1 + 0x1a0]\n 18620: a1 = a0 ^ t2\n 18623: a2 = a0 <u t2\n 18626: t1 = a2 if a1 != 0\n 18629: a2 = u64 [s1 + 0x1a8]\n 18633: a2 = a2 ^ ra\n 18636: a1 = a1 | a2\n 18639: t1 = a3 if a1 == 0\n 18642: jump @262 if t1 == 0\n      : @261 (gas: 1)\n 18645: jump @382\n      : @262 (gas: 8)\n 18648: a0 = 0x40\n 18651: a1 = 0x20\n 18654: u64 [s1 + 0x198] = a4\n 18658: u64 [s1 + 0x190] = t2\n 18662: u64 [s1 + 0x188] = ra\n 18666: u64 [s1 + 0x180] = t0\n 18670: u64 [s1 + 0x178] = a5\n 18674: ra = 140, jump @0\n      : @263 [@dyn 70] (gas: 80)\n 18680: t1 = u64 [s1 + 0x188]\n 18684: t0 = u64 [s1 + 0x190]\n 18688: a1 = u64 [s1 + 0x1a0]\n 18692: a1 = reverse a1\n 18694: a2 = u64 [s1 + 0x1a8]\n 18698: a2 = reverse a2\n 18700: a3 = u64 [s1 + 0x178]\n 18704: a3 = reverse a3\n 18706: a4 = u64 [s1 + 0x180]\n 18710: a4 = reverse a4\n 18712: u8 [a0 + 0x18] = a4\n 18715: a5 = a4 >> 0x38\n 18718: u8 [a0 + 0x1f] = a5\n 18721: a5 = a4 >> 0x30\n 18724: u8 [a0 + 0x1e] = a5\n 18727: a5 = a4 >> 0x28\n 18730: u8 [a0 + 0x1d] = a5\n 18733: a5 = a4 >> 0x20\n 18736: u8 [a0 + 0x1c] = a5\n 18739: a5 = a4 >> 0x18\n 18742: u8 [a0 + 0x1b] = a5\n 18745: a5 = a4 >> 0x10\n 18748: u8 [a0 + 0x1a] = a5\n 18751: a5 = u64 [s1 + 0x1b0]\n 18755: a4 = a4 >> 0x8\n 18758: u8 [a0 + 0x19] = a4\n 18761: u8 [a0 + 0x10] = a3\n 18764: a4 = a3 >> 0x38\n 18767: u8 [a0 + 0x17] = a4\n 18770: a4 = a3 >> 0x30\n 18773: u8 [a0 + 0x16] = a4\n 18776: a4 = a3 >> 0x28\n 18779: u8 [a0 + 0x15] = a4\n 18782: a4 = a3 >> 0x20\n 18785: u8 [a0 + 0x14] = a4\n 18788: a4 = a3 >> 0x18\n 18791: u8 [a0 + 0x13] = a4\n 18794: a4 = a3 >> 0x10\n 18797: u8 [a0 + 0x12] = a4\n 18800: a4 = u64 [s1 + 0x198]\n 18804: a3 = a3 >> 0x8\n 18807: u8 [a0 + 0x11] = a3\n 18810: u8 [a0 + 0x8] = a2\n 18813: a3 = a2 >> 0x38\n 18816: u8 [a0 + 0xf] = a3\n 18819: a3 = a2 >> 0x30\n 18822: u8 [a0 + 0xe] = a3\n 18825: a3 = a2 >> 0x28\n 18828: u8 [a0 + 0xd] = a3\n 18831: a3 = a2 >> 0x20\n 18834: u8 [a0 + 0xc] = a3\n 18837: a3 = a2 >> 0x18\n 18840: u8 [a0 + 0xb] = a3\n 18843: a3 = a2 >> 0x10\n 18846: u8 [a0 + 0xa] = a3\n 18849: a2 = a2 >> 0x8\n 18852: u8 [a0 + 0x9] = a2\n 18855: u8 [a0] = a1\n 18857: a2 = a1 >> 0x38\n 18860: u8 [a0 + 0x7] = a2\n 18863: a2 = a1 >> 0x30\n 18866: u8 [a0 + 0x6] = a2\n 18869: a2 = a1 >> 0x28\n 18872: u8 [a0 + 0x5] = a2\n 18875: a2 = a1 >> 0x20\n 18878: u8 [a0 + 0x4] = a2\n 18881: a2 = a1 >> 0x18\n 18884: u8 [a0 + 0x3] = a2\n 18887: a2 = a1 >> 0x10\n 18890: u8 [a0 + 0x2] = a2\n 18893: a1 = a1 >> 0x8\n 18896: a2 = a5 | t1\n 18899: a3 = a4 | t0\n 18902: a2 = a2 | a3\n 18905: a2 = a2 >> 0x20\n 18908: a3 = a3 | t1\n 18911: a3 = a3 << 0x20\n 18914: a2 = a2 | a3\n 18917: u8 [a0 + 0x1] = a1\n 18920: jump @256 if a2 != 0\n      : @264 (gas: 4)\n 18924: i32 a0 = a5 + 0\n 18926: a1 = 0x20\n 18929: u64 [s1 + 0x1a8] = a0\n 18933: ra = 142, jump @0\n      : @265 [@dyn 71] (gas: 43)\n 18939: a1 = u64 [s1 + 0x170]\n 18943: a1 = reverse a1\n 18945: a2 = a1 >> 0x38\n 18948: u8 [a0 + 0x1f] = a2\n 18951: a2 = a1 >> 0x30\n 18954: u8 [a0 + 0x1e] = a2\n 18957: a2 = a1 >> 0x28\n 18960: u8 [a0 + 0x1d] = a2\n 18963: a2 = a1 >> 0x20\n 18966: u8 [a0 + 0x1c] = a2\n 18969: a2 = a1 >> 0x18\n 18972: u8 [a0 + 0x1b] = a2\n 18975: a2 = a1 >> 0x10\n 18978: u8 [a0 + 0x1a] = a2\n 18981: a2 = a1 >> 0x8\n 18984: u8 [a0 + 0x19] = a2\n 18987: u8 [a0 + 0x18] = a1\n 18990: u8 [a0 + 23] = 0\n 18993: u8 [a0 + 22] = 0\n 18996: u8 [a0 + 21] = 0\n 18999: u8 [a0 + 20] = 0\n 19002: u8 [a0 + 19] = 0\n 19005: u8 [a0 + 18] = 0\n 19008: u8 [a0 + 17] = 0\n 19011: u8 [a0 + 16] = 0\n 19014: u8 [a0 + 15] = 0\n 19017: u8 [a0 + 14] = 0\n 19020: u8 [a0 + 13] = 0\n 19023: u8 [a0 + 12] = 0\n 19026: u8 [a0 + 11] = 0\n 19029: u8 [a0 + 10] = 0\n 19032: u8 [a0 + 9] = 0\n 19035: u8 [a0 + 8] = 0\n 19038: u8 [a0 + 7] = 0\n 19041: u8 [a0 + 6] = 0\n 19044: u8 [a0 + 5] = 0\n 19047: u8 [a0 + 4] = 0\n 19050: u8 [a0 + 3] = 0\n 19053: u8 [a0 + 2] = 0\n 19056: u8 [a0 + 1] = 0\n 19059: u8 [a0 + 0] = 0\n 19061: ecalli 12 // 'return_data_size'\n 19063: fallthrough\n      : @266 (gas: 10)\n 19064: a1 = u64 [s1 + 0x190]\n 19068: a2 = u64 [s1 + 0x188]\n 19072: a1 = a1 | a2\n 19075: a2 = 0xffffffe0\n 19085: a3 = u64 [s1 + 0x1b0]\n 19089: a2 = a3 <u a2\n 19092: a3 = u64 [s1 + 0x198]\n 19096: a2 = 0 if a3 != 0\n 19098: a2 = 0 if a1 != 0\n 19100: jump @256 if a2 == 0\n      : @267 (gas: 3)\n 19104: a3 = a0\n 19106: a0 = a0 >> 0x20\n 19109: jump @256 if a0 != 0\n      : @268 (gas: 6)\n 19113: a0 = u64 [s1 + 0x1a8]\n 19117: i32 a0 = a0 + 0x20\n 19120: i32 a1 = a3 + 0\n 19122: u64 [s1 + 0x1b0] = a1\n 19126: u64 [s1 + 0x1a8] = a3\n 19130: ra = 144, jump @0\n      : @269 [@dyn 72] (gas: 10)\n 19136: a1 = s1 + 0x7ff\n 19140: a1 = a1 + 0x159\n 19144: a2 = u64 [s1 + 0x1a8]\n 19148: u32 [a1 + 0x288] = a2\n 19152: i32 a0 = a0 + 0\n 19154: a1 = s1 + 0x1000\n 19158: i32 a1 = a1 + 0xfffffffffffffbe0\n 19162: a2 = 0\n 19164: ecalli 11 // 'return_data_copy'\n 19166: fallthrough\n      : @270 (gas: 6)\n 19167: a0 = s1 + 0x7ff\n 19171: a0 = a0 + 0x159\n 19175: a0 = i32 [a0 + 0x288]\n 19179: a2 = u64 [s1 + 0x1d8]\n 19183: a1 = u64 [s1 + 0x1b0]\n 19187: jump @256 if a0 <u a1\n      : @271 (gas: 1)\n 19191: jump @133\n      : @272 (gas: 3)\n 19194: a0 = 0x40\n 19197: a1 = 0x20\n 19200: ra = 146, jump @0\n      : @273 [@dyn 73] (gas: 100)\n 19206: a1 = u8 [a0 + 0x11]\n 19209: a2 = u8 [a0 + 0x10]\n 19212: a3 = u8 [a0 + 0x12]\n 19215: a4 = u8 [a0 + 0x13]\n 19218: a1 = a1 << 0x8\n 19221: a1 = a1 | a2\n 19224: a3 = a3 << 0x10\n 19227: a4 = a4 << 0x18\n 19230: a3 = a3 | a4\n 19233: a1 = a1 | a3\n 19236: a2 = u8 [a0 + 0x15]\n 19239: a3 = u8 [a0 + 0x14]\n 19242: a4 = u8 [a0 + 0x16]\n 19245: a5 = u8 [a0 + 0x17]\n 19248: a2 = a2 << 0x8\n 19251: a2 = a2 | a3\n 19254: a4 = a4 << 0x10\n 19257: a5 = a5 << 0x18\n 19260: a4 = a4 | a5\n 19263: a2 = a2 | a4\n 19266: a2 = a2 << 0x20\n 19269: t0 = a2 | a1\n 19272: a2 = u8 [a0 + 0x1]\n 19275: a3 = u8 [a0]\n 19277: a4 = u8 [a0 + 0x2]\n 19280: a5 = u8 [a0 + 0x3]\n 19283: a2 = a2 << 0x8\n 19286: a2 = a2 | a3\n 19289: a4 = a4 << 0x10\n 19292: a5 = a5 << 0x18\n 19295: a4 = a4 | a5\n 19298: a2 = a2 | a4\n 19301: a3 = u8 [a0 + 0x5]\n 19304: a4 = u8 [a0 + 0x4]\n 19307: a5 = u8 [a0 + 0x6]\n 19310: a1 = u8 [a0 + 0x7]\n 19313: a3 = a3 << 0x8\n 19316: a3 = a3 | a4\n 19319: a5 = a5 << 0x10\n 19322: a1 = a1 << 0x18\n 19325: a1 = a1 | a5\n 19328: a1 = a1 | a3\n 19331: a1 = a1 << 0x20\n 19334: t1 = a1 | a2\n 19337: a1 = u8 [a0 + 0x19]\n 19340: a3 = u8 [a0 + 0x18]\n 19343: a4 = u8 [a0 + 0x1a]\n 19346: a5 = u8 [a0 + 0x1b]\n 19349: a1 = a1 << 0x8\n 19352: a1 = a1 | a3\n 19355: a4 = a4 << 0x10\n 19358: a5 = a5 << 0x18\n 19361: a4 = a4 | a5\n 19364: a1 = a1 | a4\n 19367: a3 = u8 [a0 + 0x1d]\n 19370: a4 = u8 [a0 + 0x1c]\n 19373: a5 = u8 [a0 + 0x1e]\n 19376: a2 = u8 [a0 + 0x1f]\n 19379: a3 = a3 << 0x8\n 19382: a3 = a3 | a4\n 19385: a5 = a5 << 0x10\n 19388: a2 = a2 << 0x18\n 19391: a2 = a2 | a5\n 19394: a2 = a2 | a3\n 19397: a2 = a2 << 0x20\n 19400: a3 = a2 | a1\n 19403: a1 = u8 [a0 + 0x9]\n 19406: a2 = u8 [a0 + 0x8]\n 19409: a4 = u8 [a0 + 0xa]\n 19412: a5 = u8 [a0 + 0xb]\n 19415: a1 = a1 << 0x8\n 19418: a1 = a1 | a2\n 19421: a4 = a4 << 0x10\n 19424: a5 = a5 << 0x18\n 19427: a4 = a4 | a5\n 19430: a1 = a1 | a4\n 19433: a2 = u8 [a0 + 0xd]\n 19436: a4 = u8 [a0 + 0xc]\n 19439: a5 = u8 [a0 + 0xe]\n 19442: a0 = u8 [a0 + 0xf]\n 19445: a2 = a2 << 0x8\n 19448: a2 = a2 | a4\n 19451: a5 = a5 << 0x10\n 19454: a0 = a0 << 0x18\n 19457: a0 = a0 | a5\n 19460: a0 = a0 | a2\n 19463: a0 = a0 << 0x20\n 19466: a0 = a0 | a1\n 19469: a4 = reverse a0\n 19471: a2 = reverse a3\n 19473: a5 = reverse t1\n 19475: a3 = reverse t0\n 19477: a0 = a3 | a5\n 19480: a1 = a2 | a4\n 19483: a1 = a1 | a0\n 19486: a1 = a1 >> 0x20\n 19489: a0 = a0 | a4\n 19492: a0 = a0 << 0x20\n 19495: a0 = a0 | a1\n 19498: jump @256 if a0 != 0\n      : @274 (gas: 8)\n 19502: i32 a0 = a2 + 0\n 19504: a1 = 0x20\n 19507: u64 [s1 + 0x1b8] = a0\n 19511: u64 [s1 + 0x1d8] = a2\n 19515: u64 [s1 + 0x1d0] = a3\n 19519: u64 [s1 + 0x1c8] = a4\n 19523: u64 [s1 + 0x1c0] = a5\n 19527: ra = 148, jump @0\n      : @275 [@dyn 74] (gas: 43)\n 19533: u8 [a0 + 31] = 0\n 19536: u8 [a0 + 30] = 0\n 19539: u8 [a0 + 29] = 0\n 19542: u8 [a0 + 28] = 0\n 19545: u8 [a0 + 27] = 0\n 19548: u8 [a0 + 26] = 0\n 19551: u8 [a0 + 25] = 0\n 19554: u8 [a0 + 24] = 0\n 19557: u8 [a0 + 23] = 0\n 19560: u8 [a0 + 22] = 0\n 19563: u8 [a0 + 21] = 0\n 19566: u8 [a0 + 20] = 0\n 19569: u8 [a0 + 19] = 0\n 19572: u8 [a0 + 18] = 0\n 19575: u8 [a0 + 17] = 0\n 19578: u8 [a0 + 16] = 0\n 19581: u8 [a0 + 15] = 0\n 19584: u8 [a0 + 14] = 0\n 19587: u8 [a0 + 13] = 0\n 19590: u8 [a0 + 12] = 0\n 19593: u8 [a0 + 11] = 0\n 19596: u8 [a0 + 10] = 0\n 19599: u8 [a0 + 9] = 0\n 19602: u8 [a0 + 8] = 0\n 19605: u8 [a0 + 7] = 0\n 19608: u8 [a0 + 6] = 0\n 19611: u8 [a0 + 5] = 0\n 19614: u8 [a0 + 3] = 0xa0\n 19619: u8 [a0 + 2] = 0x79\n 19623: u8 [a0 + 1] = 0xc3\n 19628: u8 [a0 + 0] = 0x8\n 19631: a1 = u64 [s1 + 0x1c8]\n 19635: a3 = u64 [s1 + 0x1c0]\n 19639: a3 = a3 | a1\n 19642: a4 = 0x100000000\n 19652: a1 = 0xfffffffc\n 19662: a2 = u64 [s1 + 0x1d8]\n 19666: a1 = a2 <u a1\n 19669: a2 = u64 [s1 + 0x1d0]\n 19673: a1 = 0 if a2 != 0\n 19675: a1 = 0 if a3 != 0\n 19677: u8 [a0 + 4] = 0\n 19680: jump @256 if a1 == 0\n      : @276 (gas: 6)\n 19684: a0 = u64 [s1 + 0x1b8]\n 19688: i32 a0 = a0 + 0x4\n 19691: a1 = 0x20\n 19694: u64 [s1 + 0x1c8] = a3\n 19698: u64 [s1 + 0x1c0] = a4\n 19702: ra = 150, jump @0\n      : @277 [@dyn 75] (gas: 41)\n 19708: a4 = u64 [s1 + 0x1c8]\n 19712: a3 = u64 [s1 + 0x1d0]\n 19716: a2 = u64 [s1 + 0x1d8]\n 19720: u8 [a0 + 31] = 0x20\n 19724: u8 [a0 + 30] = 0\n 19727: u8 [a0 + 29] = 0\n 19730: u8 [a0 + 28] = 0\n 19733: u8 [a0 + 27] = 0\n 19736: u8 [a0 + 26] = 0\n 19739: u8 [a0 + 25] = 0\n 19742: u8 [a0 + 24] = 0\n 19745: u8 [a0 + 23] = 0\n 19748: u8 [a0 + 22] = 0\n 19751: u8 [a0 + 21] = 0\n 19754: u8 [a0 + 20] = 0\n 19757: u8 [a0 + 19] = 0\n 19760: u8 [a0 + 18] = 0\n 19763: u8 [a0 + 17] = 0\n 19766: u8 [a0 + 16] = 0\n 19769: u8 [a0 + 15] = 0\n 19772: u8 [a0 + 14] = 0\n 19775: u8 [a0 + 13] = 0\n 19778: u8 [a0 + 12] = 0\n 19781: u8 [a0 + 11] = 0\n 19784: u8 [a0 + 10] = 0\n 19787: u8 [a0 + 9] = 0\n 19790: u8 [a0 + 8] = 0\n 19793: u8 [a0 + 7] = 0\n 19796: u8 [a0 + 6] = 0\n 19799: u8 [a0 + 5] = 0\n 19802: u8 [a0 + 4] = 0\n 19805: u8 [a0 + 3] = 0\n 19808: u8 [a0 + 2] = 0\n 19811: u8 [a0 + 1] = 0\n 19814: a1 = u64 [s1 + 0x1c0]\n 19818: a1 = a1 + 0xffffffffffffffdc\n 19821: a1 = a2 <u a1\n 19824: a1 = 0 if a3 != 0\n 19826: a1 = 0 if a4 != 0\n 19828: u8 [a0 + 0] = 0\n 19830: jump @256 if a1 == 0\n      : @278 (gas: 4)\n 19834: a0 = u64 [s1 + 0x1b8]\n 19838: i32 a0 = a0 + 0x24\n 19841: a1 = 0x20\n 19844: ra = 152, jump @0\n      : @279 [@dyn 76] (gas: 40)\n 19850: u8 [a0 + 31] = 0xf\n 19854: u8 [a0 + 30] = 0\n 19857: u8 [a0 + 29] = 0\n 19860: u8 [a0 + 28] = 0\n 19863: u8 [a0 + 27] = 0\n 19866: u8 [a0 + 26] = 0\n 19869: u8 [a0 + 25] = 0\n 19872: u8 [a0 + 24] = 0\n 19875: u8 [a0 + 23] = 0\n 19878: u8 [a0 + 22] = 0\n 19881: u8 [a0 + 21] = 0\n 19884: u8 [a0 + 20] = 0\n 19887: u8 [a0 + 19] = 0\n 19890: u8 [a0 + 18] = 0\n 19893: u8 [a0 + 17] = 0\n 19896: u8 [a0 + 16] = 0\n 19899: u8 [a0 + 15] = 0\n 19902: u8 [a0 + 14] = 0\n 19905: u8 [a0 + 13] = 0\n 19908: u8 [a0 + 12] = 0\n 19911: u8 [a0 + 11] = 0\n 19914: u8 [a0 + 10] = 0\n 19917: u8 [a0 + 9] = 0\n 19920: u8 [a0 + 8] = 0\n 19923: u8 [a0 + 7] = 0\n 19926: u8 [a0 + 6] = 0\n 19929: u8 [a0 + 5] = 0\n 19932: u8 [a0 + 4] = 0\n 19935: u8 [a0 + 3] = 0\n 19938: u8 [a0 + 2] = 0\n 19941: u8 [a0 + 1] = 0\n 19944: a1 = 0xffffffbc\n 19954: a2 = u64 [s1 + 0x1d8]\n 19958: a1 = a2 <u a1\n 19961: a2 = u64 [s1 + 0x1d0]\n 19965: a1 = 0 if a2 != 0\n 19967: a2 = u64 [s1 + 0x1c8]\n 19971: a1 = 0 if a2 != 0\n 19973: u8 [a0 + 0] = 0\n 19975: jump @256 if a1 == 0\n      : @280 (gas: 4)\n 19979: a0 = u64 [s1 + 0x1b8]\n 19983: i32 a0 = a0 + 0x44\n 19986: a1 = 0x20\n 19989: ra = 154, jump @0\n      : @281 [@dyn 77] (gas: 36)\n 19995: u8 [a0 + 31] = 0\n 19998: u8 [a0 + 30] = 0\n 20001: u8 [a0 + 29] = 0\n 20004: u8 [a0 + 28] = 0\n 20007: u8 [a0 + 27] = 0\n 20010: u8 [a0 + 26] = 0\n 20013: u8 [a0 + 25] = 0\n 20016: u8 [a0 + 24] = 0\n 20019: u8 [a0 + 23] = 0\n 20022: u8 [a0 + 22] = 0\n 20025: u8 [a0 + 21] = 0\n 20028: u8 [a0 + 20] = 0\n 20031: u8 [a0 + 19] = 0\n 20034: u8 [a0 + 18] = 0\n 20037: u8 [a0 + 17] = 0\n 20040: u8 [a0 + 16] = 0\n 20043: u8 [a0 + 15] = 0\n 20046: u8 [a0 + 14] = 0x64\n 20050: u8 [a0 + 13] = 0x65\n 20054: u8 [a0 + 12] = 0x6c\n 20058: u8 [a0 + 11] = 0x69\n 20062: u8 [a0 + 10] = 0x61\n 20066: u8 [a0 + 9] = 0x66\n 20070: u8 [a0 + 8] = 0x20\n 20074: a4 = 0x72\n 20077: u8 [a0 + 0x7] = a4\n 20080: u8 [a0 + 6] = 0x65\n 20084: u8 [a0 + 5] = 0x66\n 20088: u8 [a0 + 4] = 0x73\n 20092: u8 [a0 + 3] = 0x6e\n 20096: u8 [a0 + 2] = 0x61\n 20100: u8 [a0 + 0x1] = a4\n 20103: u8 [a0 + 0] = 0x54\n 20106: a1 = 0x64\n 20109: a0 = u64 [s1 + 0x1b8]\n 20113: ra = 156, jump @0\n      : @282 [@dyn 78] (gas: 5)\n 20119: i32 a1 = a0 + 0\n 20121: a0 = 0x1\n 20124: a2 = 0x64\n 20127: ecalli 13 // 'seal_return'\n 20129: fallthrough\n      : @283 (gas: 3)\n 20130: a0 = 0x40\n 20133: a1 = 0x20\n 20136: ra = 158, jump @0\n      : @284 [@dyn 79] (gas: 100)\n 20142: a1 = u8 [a0 + 0x11]\n 20145: a2 = u8 [a0 + 0x10]\n 20148: a3 = u8 [a0 + 0x12]\n 20151: a4 = u8 [a0 + 0x13]\n 20154: a1 = a1 << 0x8\n 20157: a1 = a1 | a2\n 20160: a3 = a3 << 0x10\n 20163: a4 = a4 << 0x18\n 20166: a3 = a3 | a4\n 20169: a1 = a1 | a3\n 20172: a2 = u8 [a0 + 0x15]\n 20175: a3 = u8 [a0 + 0x14]\n 20178: a4 = u8 [a0 + 0x16]\n 20181: a5 = u8 [a0 + 0x17]\n 20184: a2 = a2 << 0x8\n 20187: a2 = a2 | a3\n 20190: a4 = a4 << 0x10\n 20193: a5 = a5 << 0x18\n 20196: a4 = a4 | a5\n 20199: a2 = a2 | a4\n 20202: a2 = a2 << 0x20\n 20205: t0 = a2 | a1\n 20208: a2 = u8 [a0 + 0x1]\n 20211: a3 = u8 [a0]\n 20213: a4 = u8 [a0 + 0x2]\n 20216: a5 = u8 [a0 + 0x3]\n 20219: a2 = a2 << 0x8\n 20222: a2 = a2 | a3\n 20225: a4 = a4 << 0x10\n 20228: a5 = a5 << 0x18\n 20231: a4 = a4 | a5\n 20234: a2 = a2 | a4\n 20237: a3 = u8 [a0 + 0x5]\n 20240: a4 = u8 [a0 + 0x4]\n 20243: a5 = u8 [a0 + 0x6]\n 20246: a1 = u8 [a0 + 0x7]\n 20249: a3 = a3 << 0x8\n 20252: a3 = a3 | a4\n 20255: a5 = a5 << 0x10\n 20258: a1 = a1 << 0x18\n 20261: a1 = a1 | a5\n 20264: a1 = a1 | a3\n 20267: a1 = a1 << 0x20\n 20270: t1 = a1 | a2\n 20273: a1 = u8 [a0 + 0x19]\n 20276: a3 = u8 [a0 + 0x18]\n 20279: a4 = u8 [a0 + 0x1a]\n 20282: a5 = u8 [a0 + 0x1b]\n 20285: a1 = a1 << 0x8\n 20288: a1 = a1 | a3\n 20291: a4 = a4 << 0x10\n 20294: a5 = a5 << 0x18\n 20297: a4 = a4 | a5\n 20300: a1 = a1 | a4\n 20303: a3 = u8 [a0 + 0x1d]\n 20306: a4 = u8 [a0 + 0x1c]\n 20309: a5 = u8 [a0 + 0x1e]\n 20312: a2 = u8 [a0 + 0x1f]\n 20315: a3 = a3 << 0x8\n 20318: a3 = a3 | a4\n 20321: a5 = a5 << 0x10\n 20324: a2 = a2 << 0x18\n 20327: a2 = a2 | a5\n 20330: a2 = a2 | a3\n 20333: a2 = a2 << 0x20\n 20336: a3 = a2 | a1\n 20339: a1 = u8 [a0 + 0x9]\n 20342: a2 = u8 [a0 + 0x8]\n 20345: a4 = u8 [a0 + 0xa]\n 20348: a5 = u8 [a0 + 0xb]\n 20351: a1 = a1 << 0x8\n 20354: a1 = a1 | a2\n 20357: a4 = a4 << 0x10\n 20360: a5 = a5 << 0x18\n 20363: a4 = a4 | a5\n 20366: a1 = a1 | a4\n 20369: a2 = u8 [a0 + 0xd]\n 20372: a4 = u8 [a0 + 0xc]\n 20375: a5 = u8 [a0 + 0xe]\n 20378: a0 = u8 [a0 + 0xf]\n 20381: a2 = a2 << 0x8\n 20384: a2 = a2 | a4\n 20387: a5 = a5 << 0x10\n 20390: a0 = a0 << 0x18\n 20393: a0 = a0 | a5\n 20396: a0 = a0 | a2\n 20399: a0 = a0 << 0x20\n 20402: a0 = a0 | a1\n 20405: a4 = reverse a0\n 20407: a3 = reverse a3\n 20409: a5 = reverse t1\n 20411: a2 = reverse t0\n 20413: a0 = a2 | a5\n 20416: a1 = a3 | a4\n 20419: a1 = a1 | a0\n 20422: a1 = a1 >> 0x20\n 20425: a0 = a0 | a4\n 20428: a0 = a0 << 0x20\n 20431: a0 = a0 | a1\n 20434: jump @256 if a0 != 0\n      : @285 (gas: 8)\n 20438: i32 a0 = a3 + 0\n 20440: a1 = 0x20\n 20443: u64 [s1 + 0x1b8] = a0\n 20447: u64 [s1 + 0x1d8] = a2\n 20451: u64 [s1 + 0x1d0] = a3\n 20455: u64 [s1 + 0x1c8] = a4\n 20459: u64 [s1 + 0x1c0] = a5\n 20463: ra = 160, jump @0\n      : @286 [@dyn 80] (gas: 43)\n 20469: u8 [a0 + 31] = 0\n 20472: u8 [a0 + 30] = 0\n 20475: u8 [a0 + 29] = 0\n 20478: u8 [a0 + 28] = 0\n 20481: u8 [a0 + 27] = 0\n 20484: u8 [a0 + 26] = 0\n 20487: u8 [a0 + 25] = 0\n 20490: u8 [a0 + 24] = 0\n 20493: u8 [a0 + 23] = 0\n 20496: u8 [a0 + 22] = 0\n 20499: u8 [a0 + 21] = 0\n 20502: u8 [a0 + 20] = 0\n 20505: u8 [a0 + 19] = 0\n 20508: u8 [a0 + 18] = 0\n 20511: u8 [a0 + 17] = 0\n 20514: u8 [a0 + 16] = 0\n 20517: u8 [a0 + 15] = 0\n 20520: u8 [a0 + 14] = 0\n 20523: u8 [a0 + 13] = 0\n 20526: u8 [a0 + 12] = 0\n 20529: u8 [a0 + 11] = 0\n 20532: u8 [a0 + 10] = 0\n 20535: u8 [a0 + 9] = 0\n 20538: u8 [a0 + 8] = 0\n 20541: u8 [a0 + 7] = 0\n 20544: u8 [a0 + 6] = 0\n 20547: u8 [a0 + 5] = 0\n 20550: u8 [a0 + 3] = 0xa0\n 20555: u8 [a0 + 2] = 0x79\n 20559: u8 [a0 + 1] = 0xc3\n 20564: u8 [a0 + 0] = 0x8\n 20567: a1 = u64 [s1 + 0x1c8]\n 20571: a3 = u64 [s1 + 0x1c0]\n 20575: a3 = a3 | a1\n 20578: a4 = 0x100000000\n 20588: a1 = 0xfffffffc\n 20598: a2 = u64 [s1 + 0x1d0]\n 20602: a1 = a2 <u a1\n 20605: a2 = u64 [s1 + 0x1d8]\n 20609: a1 = 0 if a2 != 0\n 20611: a1 = 0 if a3 != 0\n 20613: u8 [a0 + 4] = 0\n 20616: jump @256 if a1 == 0\n      : @287 (gas: 6)\n 20620: a0 = u64 [s1 + 0x1b8]\n 20624: i32 a0 = a0 + 0x4\n 20627: a1 = 0x20\n 20630: u64 [s1 + 0x1c8] = a3\n 20634: u64 [s1 + 0x1c0] = a4\n 20638: ra = 162, jump @0\n      : @288 [@dyn 81] (gas: 41)\n 20644: u8 [a0 + 31] = 0x20\n 20648: u8 [a0 + 30] = 0\n 20651: u8 [a0 + 29] = 0\n 20654: u8 [a0 + 28] = 0\n 20657: u8 [a0 + 27] = 0\n 20660: u8 [a0 + 26] = 0\n 20663: u8 [a0 + 25] = 0\n 20666: u8 [a0 + 24] = 0\n 20669: u8 [a0 + 23] = 0\n 20672: u8 [a0 + 22] = 0\n 20675: u8 [a0 + 21] = 0\n 20678: u8 [a0 + 20] = 0\n 20681: u8 [a0 + 19] = 0\n 20684: u8 [a0 + 18] = 0\n 20687: u8 [a0 + 17] = 0\n 20690: u8 [a0 + 16] = 0\n 20693: u8 [a0 + 15] = 0\n 20696: u8 [a0 + 14] = 0\n 20699: u8 [a0 + 13] = 0\n 20702: u8 [a0 + 12] = 0\n 20705: u8 [a0 + 11] = 0\n 20708: u8 [a0 + 10] = 0\n 20711: u8 [a0 + 9] = 0\n 20714: u8 [a0 + 8] = 0\n 20717: u8 [a0 + 7] = 0\n 20720: u8 [a0 + 6] = 0\n 20723: u8 [a0 + 5] = 0\n 20726: u8 [a0 + 4] = 0\n 20729: u8 [a0 + 3] = 0\n 20732: u8 [a0 + 2] = 0\n 20735: u8 [a0 + 1] = 0\n 20738: a1 = u64 [s1 + 0x1c0]\n 20742: a1 = a1 + 0xffffffffffffffdc\n 20745: a2 = u64 [s1 + 0x1d0]\n 20749: a1 = a2 <u a1\n 20752: a2 = u64 [s1 + 0x1d8]\n 20756: a1 = 0 if a2 != 0\n 20758: a2 = u64 [s1 + 0x1c8]\n 20762: a1 = 0 if a2 != 0\n 20764: u8 [a0 + 0] = 0\n 20766: jump @256 if a1 == 0\n      : @289 (gas: 4)\n 20770: a0 = u64 [s1 + 0x1b8]\n 20774: i32 a0 = a0 + 0x24\n 20777: a1 = 0x20\n 20780: ra = 164, jump @0\n      : @290 [@dyn 82] (gas: 41)\n 20786: a4 = u64 [s1 + 0x1c8]\n 20790: a3 = u64 [s1 + 0x1d0]\n 20794: a2 = u64 [s1 + 0x1d8]\n 20798: u8 [a0 + 31] = 0x26\n 20802: u8 [a0 + 30] = 0\n 20805: u8 [a0 + 29] = 0\n 20808: u8 [a0 + 28] = 0\n 20811: u8 [a0 + 27] = 0\n 20814: u8 [a0 + 26] = 0\n 20817: u8 [a0 + 25] = 0\n 20820: u8 [a0 + 24] = 0\n 20823: u8 [a0 + 23] = 0\n 20826: u8 [a0 + 22] = 0\n 20829: u8 [a0 + 21] = 0\n 20832: u8 [a0 + 20] = 0\n 20835: u8 [a0 + 19] = 0\n 20838: u8 [a0 + 18] = 0\n 20841: u8 [a0 + 17] = 0\n 20844: u8 [a0 + 16] = 0\n 20847: u8 [a0 + 15] = 0\n 20850: u8 [a0 + 14] = 0\n 20853: u8 [a0 + 13] = 0\n 20856: u8 [a0 + 12] = 0\n 20859: u8 [a0 + 11] = 0\n 20862: u8 [a0 + 10] = 0\n 20865: u8 [a0 + 9] = 0\n 20868: u8 [a0 + 8] = 0\n 20871: u8 [a0 + 7] = 0\n 20874: u8 [a0 + 6] = 0\n 20877: u8 [a0 + 5] = 0\n 20880: u8 [a0 + 4] = 0\n 20883: u8 [a0 + 3] = 0\n 20886: u8 [a0 + 2] = 0\n 20889: u8 [a0 + 1] = 0\n 20892: a5 = 0x100000000\n 20902: a1 = 0xffffffbc\n 20912: a1 = a3 <u a1\n 20915: a1 = 0 if a2 != 0\n 20917: a1 = 0 if a4 != 0\n 20919: u8 [a0 + 0] = 0\n 20921: jump @256 if a1 == 0\n      : @291 (gas: 5)\n 20925: a0 = u64 [s1 + 0x1b8]\n 20929: i32 a0 = a0 + 0x44\n 20932: a1 = 0x20\n 20935: u64 [s1 + 0x1c0] = a5\n 20939: ra = 166, jump @0\n      : @292 [@dyn 83] (gas: 42)\n 20945: u8 [a0 + 31] = 0x72\n 20949: u8 [a0 + 26] = 0x72\n 20953: u8 [a0 + 23] = 0x66\n 20957: u8 [a0 + 19] = 0x62\n 20961: u8 [a0 + 28] = 0x73\n 20965: u8 [a0 + 16] = 0x73\n 20969: u8 [a0 + 15] = 0x75\n 20973: u8 [a0 + 7] = 0x64\n 20977: u8 [a0 + 6] = 0x6e\n 20981: u8 [a0 + 27] = 0x20\n 20985: u8 [a0 + 21] = 0x20\n 20989: u8 [a0 + 18] = 0x20\n 20993: u8 [a0 + 13] = 0x20\n 20997: u8 [a0 + 8] = 0x20\n 21001: u8 [a0 + 4] = 0x20\n 21005: u8 [a0 + 2] = 0x6c\n 21009: u8 [a0 + 30] = 0x61\n 21013: u8 [a0 + 22] = 0x61\n 21017: u8 [a0 + 1] = 0x61\n 21021: u8 [a0 + 0] = 0x53\n 21024: u8 [a0 + 29] = 0x74\n 21028: a1 = u64 [s1 + 0x1c0]\n 21032: a1 = a1 + 0xffffffffffffff9c\n 21035: a2 = u64 [s1 + 0x1d0]\n 21039: a1 = a2 <u a1\n 21042: a4 = 0x65\n 21045: u8 [a0 + 0x19] = a4\n 21048: u8 [a0 + 24] = 0x74\n 21052: u8 [a0 + 0x14] = a4\n 21055: u8 [a0 + 17] = 0x74\n 21059: a2 = u64 [s1 + 0x1d8]\n 21063: a1 = 0 if a2 != 0\n 21065: u8 [a0 + 14] = 0x6d\n 21069: u8 [a0 + 0xc] = a4\n 21072: u8 [a0 + 11] = 0x6d\n 21076: a2 = u64 [s1 + 0x1c8]\n 21080: a1 = 0 if a2 != 0\n 21082: u8 [a0 + 10] = 0x69\n 21086: u8 [a0 + 9] = 0x74\n 21090: u8 [a0 + 0x5] = a4\n 21093: u8 [a0 + 0x3] = a4\n 21096: jump @256 if a1 == 0\n      : @293 (gas: 4)\n 21100: a0 = u64 [s1 + 0x1b8]\n 21104: i32 a0 = a0 + 0x64\n 21107: a1 = 0x20\n 21110: ra = 168, jump @0\n      : @294 [@dyn 84] (gas: 33)\n 21116: u8 [a0 + 31] = 0\n 21119: u8 [a0 + 30] = 0\n 21122: u8 [a0 + 29] = 0\n 21125: u8 [a0 + 28] = 0\n 21128: u8 [a0 + 27] = 0\n 21131: u8 [a0 + 26] = 0\n 21134: u8 [a0 + 25] = 0\n 21137: u8 [a0 + 24] = 0\n 21140: u8 [a0 + 23] = 0\n 21143: u8 [a0 + 22] = 0\n 21146: u8 [a0 + 21] = 0\n 21149: u8 [a0 + 20] = 0\n 21152: u8 [a0 + 19] = 0\n 21155: u8 [a0 + 18] = 0\n 21158: u8 [a0 + 17] = 0\n 21161: u8 [a0 + 16] = 0\n 21164: u8 [a0 + 15] = 0\n 21167: u8 [a0 + 14] = 0\n 21170: u8 [a0 + 13] = 0\n 21173: u8 [a0 + 12] = 0\n 21176: u8 [a0 + 11] = 0\n 21179: u8 [a0 + 10] = 0\n 21182: u8 [a0 + 9] = 0\n 21185: u8 [a0 + 8] = 0\n 21188: u8 [a0 + 7] = 0\n 21191: u8 [a0 + 6] = 0\n 21194: u8 [a0 + 5] = 0x65\n 21198: u8 [a0 + 4] = 0x6d\n 21202: u8 [a0 + 3] = 0x69\n 21206: u8 [a0 + 2] = 0x74\n 21210: u8 [a0 + 1] = 0x20\n 21214: u8 [a0 + 0] = 0x74\n 21217: fallthrough\n      : @295 (gas: 3)\n 21218: a1 = 0x84\n 21222: a0 = u64 [s1 + 0x1b8]\n 21226: ra = 170, jump @0\n      : @296 [@dyn 85] (gas: 5)\n 21232: i32 a1 = a0 + 0\n 21234: a0 = 0x1\n 21237: a2 = 0x84\n 21241: ecalli 13 // 'seal_return'\n 21243: fallthrough\n      : @297 (gas: 13)\n 21244: a0 = s1 + 0x1000\n 21248: u64 [a0 + 4294965496] = 0\n 21252: a0 = s1 + 0x1000\n 21256: u64 [a0 + 4294965488] = 0\n 21260: a0 = s1 + 0x1000\n 21264: u64 [a0 + 4294965480] = 0\n 21268: a0 = s1 + 0x7ff\n 21272: a0 = a0 + 0x101\n 21276: a2 = s1 + 0x7ff\n 21280: a2 = a2 + 0xe1\n 21284: a3 = s1 + 0x1000\n 21288: u64 [a3 + 4294965472] = 0x1\n 21293: ra = 172, jump @25\n      : @298 [@dyn 86] (gas: 15)\n 21299: a0 = s1 + 0x1000\n 21303: a0 = u64 [a0 + 0xfffffffffffff918]\n 21307: u64 [s1 + 0x78] = a0\n 21310: a0 = s1 + 0x1000\n 21314: a0 = u64 [a0 + 0xfffffffffffff910]\n 21318: u64 [s1 + 0x70] = a0\n 21321: a0 = s1 + 0x1000\n 21325: a0 = u64 [a0 + 0xfffffffffffff908]\n 21329: u64 [s1 + 0x68] = a0\n 21332: a0 = s1 + 0x1000\n 21336: a0 = u64 [a0 + 0xfffffffffffff900]\n 21340: u64 [s1 + 0x60] = a0\n 21343: a1 = 0x20\n 21346: a0 = 0\n 21348: ra = 174, jump @0\n      : @299 [@dyn 87] (gas: 71)\n 21354: a1 = u64 [s1 + 0x78]\n 21357: a1 = reverse a1\n 21359: a2 = u64 [s1 + 0x70]\n 21362: a2 = reverse a2\n 21364: a3 = u64 [s1 + 0x68]\n 21367: a3 = reverse a3\n 21369: a4 = u64 [s1 + 0x60]\n 21372: a4 = reverse a4\n 21374: a5 = a4 >> 0x38\n 21377: u8 [a0 + 0x1f] = a5\n 21380: a5 = a4 >> 0x30\n 21383: u8 [a0 + 0x1e] = a5\n 21386: a5 = a4 >> 0x28\n 21389: u8 [a0 + 0x1d] = a5\n 21392: a5 = a4 >> 0x20\n 21395: u8 [a0 + 0x1c] = a5\n 21398: a5 = a4 >> 0x18\n 21401: u8 [a0 + 0x1b] = a5\n 21404: a5 = a4 >> 0x10\n 21407: u8 [a0 + 0x1a] = a5\n 21410: a5 = a4 >> 0x8\n 21413: u8 [a0 + 0x19] = a5\n 21416: u8 [a0 + 0x18] = a4\n 21419: a4 = a3 >> 0x38\n 21422: u8 [a0 + 0x17] = a4\n 21425: a4 = a3 >> 0x30\n 21428: u8 [a0 + 0x16] = a4\n 21431: a4 = a3 >> 0x28\n 21434: u8 [a0 + 0x15] = a4\n 21437: a4 = a3 >> 0x20\n 21440: u8 [a0 + 0x14] = a4\n 21443: a4 = a3 >> 0x18\n 21446: u8 [a0 + 0x13] = a4\n 21449: a4 = a3 >> 0x10\n 21452: u8 [a0 + 0x12] = a4\n 21455: a4 = a3 >> 0x8\n 21458: u8 [a0 + 0x11] = a4\n 21461: u8 [a0 + 0x10] = a3\n 21464: a3 = a2 >> 0x38\n 21467: u8 [a0 + 0xf] = a3\n 21470: a3 = a2 >> 0x30\n 21473: u8 [a0 + 0xe] = a3\n 21476: a3 = a2 >> 0x28\n 21479: u8 [a0 + 0xd] = a3\n 21482: a3 = a2 >> 0x20\n 21485: u8 [a0 + 0xc] = a3\n 21488: a3 = a2 >> 0x18\n 21491: u8 [a0 + 0xb] = a3\n 21494: a3 = a2 >> 0x10\n 21497: u8 [a0 + 0xa] = a3\n 21500: a3 = a2 >> 0x8\n 21503: u8 [a0 + 0x9] = a3\n 21506: u8 [a0 + 0x8] = a2\n 21509: a2 = a1 >> 0x38\n 21512: u8 [a0 + 0x7] = a2\n 21515: a2 = a1 >> 0x30\n 21518: u8 [a0 + 0x6] = a2\n 21521: a2 = a1 >> 0x28\n 21524: u8 [a0 + 0x5] = a2\n 21527: a2 = a1 >> 0x20\n 21530: u8 [a0 + 0x4] = a2\n 21533: a2 = a1 >> 0x18\n 21536: u8 [a0 + 0x3] = a2\n 21539: a2 = a1 >> 0x10\n 21542: u8 [a0 + 0x2] = a2\n 21545: a2 = a1 >> 0x8\n 21548: u8 [a0 + 0x1] = a2\n 21551: u8 [a0] = a1\n 21553: a0 = 0x20\n 21556: a1 = 0x20\n 21559: ra = 176, jump @0\n      : @300 [@dyn 88] (gas: 35)\n 21565: u8 [a0 + 31] = 0x2\n 21569: u8 [a0 + 30] = 0\n 21572: u8 [a0 + 29] = 0\n 21575: u8 [a0 + 28] = 0\n 21578: u8 [a0 + 27] = 0\n 21581: u8 [a0 + 26] = 0\n 21584: u8 [a0 + 25] = 0\n 21587: u8 [a0 + 24] = 0\n 21590: u8 [a0 + 23] = 0\n 21593: u8 [a0 + 22] = 0\n 21596: u8 [a0 + 21] = 0\n 21599: u8 [a0 + 20] = 0\n 21602: u8 [a0 + 19] = 0\n 21605: u8 [a0 + 18] = 0\n 21608: u8 [a0 + 17] = 0\n 21611: u8 [a0 + 16] = 0\n 21614: u8 [a0 + 15] = 0\n 21617: u8 [a0 + 14] = 0\n 21620: u8 [a0 + 13] = 0\n 21623: u8 [a0 + 12] = 0\n 21626: u8 [a0 + 11] = 0\n 21629: u8 [a0 + 10] = 0\n 21632: u8 [a0 + 9] = 0\n 21635: u8 [a0 + 8] = 0\n 21638: u8 [a0 + 7] = 0\n 21641: u8 [a0 + 6] = 0\n 21644: u8 [a0 + 5] = 0\n 21647: u8 [a0 + 4] = 0\n 21650: u8 [a0 + 3] = 0\n 21653: u8 [a0 + 2] = 0\n 21656: u8 [a0 + 1] = 0\n 21659: u8 [a0 + 0] = 0\n 21661: a1 = 0x40\n 21664: a0 = 0\n 21666: ra = 178, jump @0\n      : @301 [@dyn 89] (gas: 34)\n 21672: a1 = sp + 0xffffffffffffffe0\n 21675: a1 = a1 & 0xffffffffffffffe0\n 21678: u64 [s1 + 0x1c0] = a1\n 21682: sp = a1\n 21684: i32 a0 = a0 + 0\n 21686: i32 a2 = a1 + 0\n 21688: a1 = 0x40\n 21691: ecalli 8 // 'hash_keccak_256'\n 21693: a3 = u64 [s1 + 0x1c0]\n 21697: a0 = u64 [a3 + 0x18]\n 21700: a1 = u64 [a3 + 0x10]\n 21703: a2 = u64 [a3 + 0x8]\n 21706: a3 = u64 [a3]\n 21708: a4 = reverse a0\n 21710: u64 [s1 + 0xe0] = a4\n 21714: a0 = reverse a1\n 21716: u64 [s1 + 0xe8] = a0\n 21720: a1 = reverse a2\n 21722: u64 [s1 + 0xf8] = a1\n 21726: a2 = reverse a3\n 21728: u64 [s1 + 0xf0] = a2\n 21732: a3 = s1 + 0x1000\n 21736: u64 [a3 + 0xfffffffffffff8b8] = a2\n 21740: a2 = s1 + 0x1000\n 21744: u64 [a2 + 0xfffffffffffff8b0] = a1\n 21748: a1 = s1 + 0x1000\n 21752: u64 [a1 + 0xfffffffffffff8a8] = a0\n 21756: a0 = s1 + 0x7ff\n 21760: a0 = a0 + 0xc1\n 21764: a2 = s1 + 0x7ff\n 21768: a2 = a2 + 0xa1\n 21772: a1 = s1 + 0x1000\n 21776: u64 [a1 + 0xfffffffffffff8a0] = a4\n 21780: ra = 180, jump @25\n      : @302 [@dyn 90] (gas: 34)\n 21786: a0 = s1 + 0x1000\n 21790: a0 = u32 [a0 + 0xfffffffffffff8d4]\n 21794: a0 = a0 << 0x20\n 21797: a1 = s1 + 0x1000\n 21801: a1 = u64 [a1 + 0xfffffffffffff8d8]\n 21805: a2 = u64 [s1 + 0x1c8]\n 21809: a0 = a0 | a2\n 21812: a2 = s1 + 0x7ff\n 21816: a2 = a2 + 0x159\n 21820: a3 = u64 [s1 + 0xf0]\n 21824: u64 [a2 + 0x4c0] = a3\n 21828: a3 = u64 [s1 + 0xf8]\n 21832: u64 [a2 + 0x4b8] = a3\n 21836: a3 = u64 [s1 + 0xe8]\n 21840: u64 [a2 + 0x4b0] = a3\n 21844: a3 = u64 [s1 + 0xe0]\n 21848: u64 [a2 + 0x4a8] = a3\n 21852: u64 [a2 + 0x4e0] = a1\n 21856: a1 = u64 [s1 + 0x1d0]\n 21860: u64 [a2 + 0x4d0] = a1\n 21864: a1 = u64 [s1 + 0x1d8]\n 21868: u64 [a2 + 0x4c8] = a1\n 21872: u64 [a2 + 0x4d8] = a0\n 21876: a0 = s1 + 0x1000\n 21880: i32 a1 = a0 + 0xfffffffffffffe00\n 21884: a0 = s1 + 0x1000\n 21888: i32 a3 = a0 + 0xfffffffffffffe20\n 21892: a2 = 0xffffffffffffffff\n 21895: a4 = 0x20\n 21898: a0 = 0\n 21900: ecalli 15 // 'set_storage'\n 21902: a1 = 0x20\n 21905: a0 = u64 [s1 + 0x1b8]\n 21909: ra = 182, jump @0\n      : @303 [@dyn 91] (gas: 80)\n 21915: a1 = u8 [a0 + 0x9]\n 21918: a2 = u8 [a0 + 0x8]\n 21921: a3 = u8 [a0 + 0xa]\n 21924: a4 = u8 [a0 + 0xb]\n 21927: a1 = a1 << 0x8\n 21930: a1 = a1 | a2\n 21933: a3 = a3 << 0x10\n 21936: a4 = a4 << 0x18\n 21939: a3 = a3 | a4\n 21942: a1 = a1 | a3\n 21945: a2 = u8 [a0 + 0xd]\n 21948: a3 = u8 [a0 + 0xc]\n 21951: a4 = u8 [a0 + 0xe]\n 21954: a5 = u8 [a0 + 0xf]\n 21957: a2 = a2 << 0x8\n 21960: a2 = a2 | a3\n 21963: a4 = a4 << 0x10\n 21966: a5 = a5 << 0x18\n 21969: a4 = a4 | a5\n 21972: a2 = a2 | a4\n 21975: a2 = a2 << 0x20\n 21978: t0 = a2 | a1\n 21981: a1 = u8 [a0 + 0x1]\n 21984: a2 = u8 [a0]\n 21986: a3 = u8 [a0 + 0x2]\n 21989: a4 = u8 [a0 + 0x3]\n 21992: a1 = a1 << 0x8\n 21995: a1 = a1 | a2\n 21998: a3 = a3 << 0x10\n 22001: a4 = a4 << 0x18\n 22004: a3 = a3 | a4\n 22007: a1 = a1 | a3\n 22010: a2 = u8 [a0 + 0x5]\n 22013: a3 = u8 [a0 + 0x4]\n 22016: a4 = u8 [a0 + 0x6]\n 22019: a5 = u8 [a0 + 0x7]\n 22022: a2 = a2 << 0x8\n 22025: a2 = a2 | a3\n 22028: a4 = a4 << 0x10\n 22031: a5 = a5 << 0x18\n 22034: a4 = a4 | a5\n 22037: a2 = a2 | a4\n 22040: a2 = a2 << 0x20\n 22043: t1 = a2 | a1\n 22046: a1 = u8 [a0 + 0x11]\n 22049: a2 = u8 [a0 + 0x10]\n 22052: a3 = u8 [a0 + 0x12]\n 22055: a4 = u8 [a0 + 0x13]\n 22058: a1 = a1 << 0x8\n 22061: a1 = a1 | a2\n 22064: a3 = a3 << 0x10\n 22067: a4 = a4 << 0x18\n 22070: a3 = a3 | a4\n 22073: a1 = a1 | a3\n 22076: a2 = u8 [a0 + 0x15]\n 22079: a3 = u8 [a0 + 0x14]\n 22082: a4 = u8 [a0 + 0x16]\n 22085: a5 = u8 [a0 + 0x17]\n 22088: a2 = a2 << 0x8\n 22091: a2 = a2 | a3\n 22094: a4 = a4 << 0x10\n 22097: a5 = a5 << 0x18\n 22100: a4 = a4 | a5\n 22103: a2 = a2 | a4\n 22106: a2 = a2 << 0x20\n 22109: a1 = a1 | a2\n 22112: u64 [s1 + 0x38] = a1\n 22115: a1 = reverse a1\n 22117: u64 [s1 + 0x40] = t1\n 22120: a3 = reverse t1\n 22122: u64 [s1 + 0x48] = t0\n 22125: a2 = reverse t0\n 22127: u64 [s1 + 0xb0] = a2\n 22131: u64 [s1 + 0xa0] = a3\n 22135: a2 = a2 | a3\n 22138: u64 [s1 + 0xa8] = a1\n 22142: a1 = a1 <u 0x1\n 22145: u64 [s1 + 0x178] = a2\n 22149: a1 = 0 if a2 != 0\n 22151: jump @305 if a1 != 0\n      : @304 (gas: 1)\n 22154: jump @387\n      : @305 (gas: 55)\n 22157: a1 = u8 [a0 + 0x19]\n 22160: a2 = u8 [a0 + 0x18]\n 22163: a3 = u8 [a0 + 0x1a]\n 22166: a4 = u8 [a0 + 0x1b]\n 22169: a1 = a1 << 0x8\n 22172: t0 = a1 | a2\n 22175: a3 = a3 << 0x10\n 22178: a4 = a4 << 0x18\n 22181: a3 = a3 | a4\n 22184: a2 = u8 [a0 + 0x1d]\n 22187: a4 = u8 [a0 + 0x1c]\n 22190: a5 = u64 [s1 + 0xe0]\n 22194: a1 = a5 + 0x1\n 22197: t0 = a3 | t0\n 22200: a2 = a2 << 0x8\n 22203: a2 = a2 | a4\n 22206: a3 = u8 [a0 + 0x1e]\n 22209: a0 = u8 [a0 + 0x1f]\n 22212: a4 = a1 <u 0x1\n 22215: a5 = u64 [s1 + 0xe8]\n 22219: a4 = a4 + a5\n 22222: a3 = a3 << 0x10\n 22225: a0 = a0 << 0x18\n 22228: a0 = a0 | a3\n 22231: u64 [s1 + 0x98] = a1\n 22235: a3 = a1 | a4\n 22238: t1 = a4\n 22240: u64 [s1 + 0x90] = a4\n 22244: a3 = a3 <u 0x1\n 22247: a4 = u64 [s1 + 0xf8]\n 22251: a5 = a4 + a3\n 22254: u64 [s1 + 0x88] = a5\n 22258: a0 = a0 | a2\n 22261: a2 = a5 <u a4\n 22264: a3 = u64 [s1 + 0xf0]\n 22268: a3 = a3 + a2\n 22271: u64 [s1 + 0x80] = a3\n 22275: a0 = a0 << 0x20\n 22278: a0 = a0 | t0\n 22281: u64 [s1 + 0x30] = a0\n 22284: a0 = reverse a0\n 22286: u64 [s1 + 0xb8] = a0\n 22290: a0 = s1 + 0x1000\n 22294: u64 [a0 + 0xfffffffffffff860] = a1\n 22298: a0 = s1 + 0x1000\n 22302: u64 [a0 + 0xfffffffffffff868] = t1\n 22306: a0 = s1 + 0x1000\n 22310: u64 [a0 + 0xfffffffffffff870] = a5\n 22314: a0 = s1 + 0x7ff\n 22318: a0 = a0 + 0x81\n 22322: a2 = s1 + 0x7ff\n 22326: a2 = a2 + 0x61\n 22329: a1 = s1 + 0x1000\n 22333: u64 [a1 + 0xfffffffffffff878] = a3\n 22337: ra = 184, jump @25\n      : @306 [@dyn 92] (gas: 21)\n 22343: a0 = s1 + 0x1000\n 22347: a2 = u64 [a0 + 0xfffffffffffff880]\n 22351: a0 = s1 + 0x1000\n 22355: a0 = u64 [a0 + 0xfffffffffffff888]\n 22359: a1 = s1 + 0x1000\n 22363: a1 = u64 [a1 + 0xfffffffffffff890]\n 22367: a3 = s1 + 0x1000\n 22371: a3 = u64 [a3 + 0xfffffffffffff898]\n 22375: a4 = s1 + 0x1000\n 22379: u64 [a4 + 0xfffffffffffff838] = a3\n 22383: a3 = s1 + 0x1000\n 22387: u64 [a3 + 0xfffffffffffff830] = a1\n 22391: a1 = s1 + 0x1000\n 22395: u64 [a1 + 0xfffffffffffff828] = a0\n 22399: a0 = s1 + 0x7ff\n 22403: a0 = a0 + 0x41\n 22406: a1 = s1 + 0x7ff\n 22410: a1 = a1 + 0x21\n 22413: a3 = s1 + 0x1000\n 22417: u64 [a3 + 0xfffffffffffff820] = a2\n 22421: ra = 186, jump @389\n      : @307 [@dyn 93] (gas: 28)\n 22427: a0 = s1 + 0x1000\n 22431: a2 = u64 [a0 + 0xfffffffffffff858]\n 22435: a0 = s1 + 0x1000\n 22439: a3 = u64 [a0 + 0xfffffffffffff850]\n 22443: a0 = s1 + 0x1000\n 22447: a5 = u64 [a0 + 0xfffffffffffff840]\n 22451: a0 = s1 + 0x1000\n 22455: a4 = u64 [a0 + 0xfffffffffffff848]\n 22459: a0 = a3 | a2\n 22462: a1 = a5 <u 0x20\n 22465: a1 = 0 if a4 != 0\n 22467: a1 = 0 if a0 != 0\n 22469: a0 = u64 [s1 + 0x80]\n 22473: a0 = reverse a0\n 22475: u64 [s1 + 0x168] = a0\n 22479: a0 = u64 [s1 + 0x88]\n 22483: a0 = reverse a0\n 22485: u64 [s1 + 0x160] = a0\n 22489: a0 = u64 [s1 + 0x90]\n 22493: a0 = reverse a0\n 22495: u64 [s1 + 0x58] = a0\n 22498: a0 = u64 [s1 + 0x98]\n 22502: a0 = reverse a0\n 22504: u64 [s1 + 0x50] = a0\n 22507: a0 = u64 [s1 + 0xb8]\n 22511: a0 = a0 <u 0x20\n 22514: u64 [s1 + 0x170] = a0\n 22518: jump @315 if a1 != 0\n      : @308 (gas: 7)\n 22522: a1 = 0x20\n 22525: a0 = 0\n 22527: u64 [s1 + 0x1c0] = a2\n 22531: u64 [s1 + 0x1c8] = a3\n 22535: u64 [s1 + 0x1b8] = a4\n 22539: u64 [s1 + 0x1b0] = a5\n 22543: ra = 188, jump @0\n      : @309 [@dyn 94] (gas: 67)\n 22549: a2 = u64 [s1 + 0x50]\n 22552: u8 [a0 + 0x18] = a2\n 22555: a1 = a2 >> 0x38\n 22558: u8 [a0 + 0x1f] = a1\n 22561: a1 = a2 >> 0x30\n 22564: u8 [a0 + 0x1e] = a1\n 22567: a1 = a2 >> 0x28\n 22570: u8 [a0 + 0x1d] = a1\n 22573: a1 = a2 >> 0x20\n 22576: u8 [a0 + 0x1c] = a1\n 22579: a1 = a2 >> 0x18\n 22582: u8 [a0 + 0x1b] = a1\n 22585: a1 = a2 >> 0x10\n 22588: u8 [a0 + 0x1a] = a1\n 22591: a1 = a2 >> 0x8\n 22594: u8 [a0 + 0x19] = a1\n 22597: a2 = u64 [s1 + 0x58]\n 22600: u8 [a0 + 0x10] = a2\n 22603: a1 = a2 >> 0x38\n 22606: u8 [a0 + 0x17] = a1\n 22609: a1 = a2 >> 0x30\n 22612: u8 [a0 + 0x16] = a1\n 22615: a1 = a2 >> 0x28\n 22618: u8 [a0 + 0x15] = a1\n 22621: a1 = a2 >> 0x20\n 22624: u8 [a0 + 0x14] = a1\n 22627: a1 = a2 >> 0x18\n 22630: u8 [a0 + 0x13] = a1\n 22633: a1 = a2 >> 0x10\n 22636: u8 [a0 + 0x12] = a1\n 22639: a1 = a2 >> 0x8\n 22642: u8 [a0 + 0x11] = a1\n 22645: a2 = u64 [s1 + 0x160]\n 22649: u8 [a0 + 0x8] = a2\n 22652: a1 = a2 >> 0x38\n 22655: u8 [a0 + 0xf] = a1\n 22658: a1 = a2 >> 0x30\n 22661: u8 [a0 + 0xe] = a1\n 22664: a1 = a2 >> 0x28\n 22667: u8 [a0 + 0xd] = a1\n 22670: a1 = a2 >> 0x20\n 22673: u8 [a0 + 0xc] = a1\n 22676: a1 = a2 >> 0x18\n 22679: u8 [a0 + 0xb] = a1\n 22682: a1 = a2 >> 0x10\n 22685: u8 [a0 + 0xa] = a1\n 22688: a1 = a2 >> 0x8\n 22691: u8 [a0 + 0x9] = a1\n 22694: a2 = u64 [s1 + 0x168]\n 22698: u8 [a0] = a2\n 22700: a1 = a2 >> 0x38\n 22703: u8 [a0 + 0x7] = a1\n 22706: a1 = a2 >> 0x30\n 22709: u8 [a0 + 0x6] = a1\n 22712: a1 = a2 >> 0x28\n 22715: u8 [a0 + 0x5] = a1\n 22718: a1 = a2 >> 0x20\n 22721: u8 [a0 + 0x4] = a1\n 22724: a1 = a2 >> 0x18\n 22727: u8 [a0 + 0x3] = a1\n 22730: a1 = a2 >> 0x10\n 22733: u8 [a0 + 0x2] = a1\n 22736: a1 = a2 >> 0x8\n 22739: u8 [a0 + 0x1] = a1\n 22742: a1 = 0x20\n 22745: a0 = 0\n 22747: ra = 190, jump @0\n      : @310 [@dyn 95] (gas: 9)\n 22753: a1 = sp + 0xffffffffffffffe0\n 22756: a1 = a1 & 0xffffffffffffffe0\n 22759: u64 [s1 + 0x1d0] = a1\n 22763: sp = a1\n 22765: i32 a0 = a0 + 0\n 22767: i32 a2 = a1 + 0\n 22769: a1 = 0x20\n 22772: ecalli 8 // 'hash_keccak_256'\n 22774: fallthrough\n      : @311 (gas: 120)\n 22775: a0 = u64 [s1 + 0xb8]\n 22779: a1 = a0 + 0x1f\n 22782: a0 = a1 <u a0\n 22785: a5 = u64 [s1 + 0xa8]\n 22789: a3 = a5 + a0\n 22792: a2 = a3 <u a5\n 22795: a2 = a0 if a0 == 0\n 22798: a4 = u64 [s1 + 0xb0]\n 22802: a2 = a2 + a4\n 22805: u64 [s1 + 0x1a8] = a2\n 22809: a2 = a2 << 0x3b\n 22812: a4 = a3 >> 0x5\n 22815: a2 = a2 | a4\n 22818: a0 = u64 [s1 + 0x1d0]\n 22822: t0 = u64 [a0 + 0x18]\n 22825: a3 = a3 << 0x3b\n 22828: a0 = u64 [a0 + 0x10]\n 22831: a1 = a1 >> 0x5\n 22834: a3 = a3 | a1\n 22837: t2 = reverse t0\n 22839: a4 = reverse a0\n 22841: a1 = u64 [s1 + 0x170]\n 22845: a1 = 0 if a5 != 0\n 22847: a0 = u64 [s1 + 0x178]\n 22851: a1 = 0 if a0 != 0\n 22853: a2 = 0 if a1 != 0\n 22855: a3 = 0 if a1 != 0\n 22857: a3 = a3 + t2\n 22860: u64 [s1 + 0x1d8] = a3\n 22864: a0 = a3 <u t2\n 22867: a3 = a4 + a0\n 22870: t0 = a3 + a2\n 22873: a3 = t0 ^ a4\n 22876: a2 = t0 <u a4\n 22879: a2 = a0 if a3 == 0\n 22882: u64 [s1 + 0x28] = a2\n 22885: a0 = u64 [s1 + 0x1b0]\n 22889: ra = a0 + 0x1f\n 22892: a2 = ra <u a0\n 22895: a3 = u64 [s1 + 0x1b8]\n 22899: a0 = a3 + a2\n 22902: a3 = a0 <u a3\n 22905: a3 = a2 if a2 == 0\n 22908: t1 = u64 [s1 + 0x1c8]\n 22912: a2 = t1 + a3\n 22915: u64 [s1 + 0x1b0] = a2\n 22919: a2 = a2 << 0x3b\n 22922: a5 = a0 >> 0x5\n 22925: a2 = a2 | a5\n 22928: a0 = a0 << 0x3b\n 22931: a5 = ra >> 0x5\n 22934: ra = u64 [s1 + 0x1d8]\n 22938: a0 = a0 | a5\n 22941: a3 = t2 + a0\n 22944: a0 = a3 <u t2\n 22947: a5 = a4 + a0\n 22950: a2 = a2 + a5\n 22953: t2 = a3\n 22955: a3 = a2 ^ a4\n 22958: a4 = a2 <u a4\n 22961: a4 = a0 if a3 == 0\n 22964: u64 [s1 + 0x20] = a4\n 22967: a0 = t0 ^ a2\n 22970: u64 [s1 + 0x1b8] = a2\n 22974: a2 = t0 <u a2\n 22977: t1 = ra <u t2\n 22980: t1 = a2 if a0 != 0\n 22983: a2 = u64 [s1 + 0x1a8]\n 22987: a0 = u64 [s1 + 0xb0]\n 22991: a0 = a2 <u a0\n 22994: a4 = u64 [s1 + 0xa0]\n 22998: a4 = a4 + a0\n 23001: a2 = a2 >> 0x5\n 23004: a0 = a4 << 0x3b\n 23007: a0 = a0 | a2\n 23010: a2 = u64 [s1 + 0x1d0]\n 23014: a3 = u64 [a2]\n 23016: a2 = u64 [a2 + 0x8]\n 23019: a4 = a4 >> 0x5\n 23022: a0 = 0 if a1 != 0\n 23024: a4 = 0 if a1 != 0\n 23026: a1 = reverse a2\n 23028: a2 = reverse a3\n 23030: a4 = a4 + a2\n 23033: a0 = a0 + a1\n 23036: a3 = a0 <u a1\n 23039: a3 = a3 + a4\n 23042: a4 = u64 [s1 + 0x28]\n 23045: a4 = a4 + a0\n 23048: u64 [s1 + 0x1d0] = a4\n 23052: a0 = a4 <u a0\n 23055: a5 = a3 + a0\n 23058: a0 = u64 [s1 + 0x1c8]\n 23062: a4 = u64 [s1 + 0x1b0]\n 23066: a0 = a4 <u a0\n 23069: a3 = u64 [s1 + 0x1c0]\n 23073: a0 = a0 + a3\n 23076: a3 = a4 >> 0x5\n 23079: a4 = a0 << 0x3b\n 23082: a3 = a3 | a4\n 23085: a0 = a0 >> 0x5\n 23088: a0 = a0 + a2\n 23091: a3 = a3 + a1\n 23094: a1 = a3 <u a1\n 23097: a0 = a0 + a1\n 23100: a4 = u64 [s1 + 0x20]\n 23103: a4 = a4 + a3\n 23106: a1 = a4 <u a3\n 23109: a3 = u64 [s1 + 0x1d0]\n 23113: a2 = a0 + a1\n 23116: a0 = a3 <u a4\n 23119: a1 = a5 ^ a2\n 23122: u64 [s1 + 0x1a8] = a2\n 23126: a2 = a5 <u a2\n 23129: a2 = a0 if a1 == 0\n 23132: u64 [s1 + 0x1b0] = a4\n 23136: a0 = a3 ^ a4\n 23139: a0 = a0 | a1\n 23142: t1 = a2 if a0 != 0\n 23145: jump @315 if t1 == 0\n      : @312 (gas: 2)\n 23149: u64 [s1 + 0x1a0] = t2\n 23153: fallthrough\n      : @313 (gas: 23)\n 23154: u64 [s1 + 0x1d0] = a3\n 23158: u64 [s1 + 0x1c0] = a5\n 23162: u64 [s1 + 0x1c8] = t0\n 23166: u64 [s1 + 0x1d8] = ra\n 23170: a0 = s1 + 0x7ff\n 23174: a0 = a0 + 0x159\n 23178: u64 [a0 + 0x4b0] = t0\n 23182: u64 [a0 + 0x4a8] = ra\n 23186: u64 [a0 + 0x4b8] = a3\n 23190: u64 [a0 + 0x4c0] = a5\n 23194: u64 [a0 + 1248] = 0\n 23198: u64 [a0 + 1240] = 0\n 23202: u64 [a0 + 1232] = 0\n 23206: u64 [a0 + 1224] = 0\n 23210: a0 = s1 + 0x1000\n 23214: i32 a1 = a0 + 0xfffffffffffffe00\n 23218: a0 = s1 + 0x1000\n 23222: i32 a3 = a0 + 0xfffffffffffffe20\n 23226: a2 = 0xffffffffffffffff\n 23229: a4 = 0x20\n 23232: a0 = 0\n 23234: ecalli 15 // 'set_storage'\n 23236: fallthrough\n      : @314 (gas: 29)\n 23237: a5 = u64 [s1 + 0x1c0]\n 23241: t2 = u64 [s1 + 0x1a0]\n 23245: t0 = u64 [s1 + 0x1c8]\n 23249: ra = u64 [s1 + 0x1d8]\n 23253: ra = ra + 0x1\n 23256: a0 = ra <u 0x1\n 23259: t0 = t0 + a0\n 23262: a0 = ra | t0\n 23265: a0 = a0 <u 0x1\n 23268: a1 = u64 [s1 + 0x1d0]\n 23272: a0 = a0 + a1\n 23275: a1 = a0 <u a1\n 23278: a5 = a5 + a1\n 23281: a1 = ra <u t2\n 23284: a3 = u64 [s1 + 0x1b8]\n 23288: a2 = t0 ^ a3\n 23291: a3 = t0 <u a3\n 23294: a3 = a1 if a2 == 0\n 23297: a1 = u64 [s1 + 0x1b0]\n 23301: t1 = a0 <u a1\n 23304: a4 = u64 [s1 + 0x1a8]\n 23308: a2 = a5 ^ a4\n 23311: a4 = a5 <u a4\n 23314: a4 = t1 if a2 == 0\n 23317: a1 = a1 ^ a0\n 23320: a1 = a1 | a2\n 23323: a4 = a3 if a1 == 0\n 23326: a3 = a0\n 23328: jump @313 if a4 != 0\n      : @315 (gas: 13)\n 23332: t2 = u64 [s1 + 0xa8]\n 23336: a0 = t2 >u 0\n 23338: a1 = u64 [s1 + 0x170]\n 23342: a1 = a1 ^ 0x1\n 23345: a1 = a0 if t2 != 0\n 23348: a3 = u64 [s1 + 0xb0]\n 23352: a0 = a3 >u 0\n 23354: a4 = u64 [s1 + 0xa0]\n 23358: a2 = a4 >u 0\n 23360: a2 = a0 if a4 == 0\n 23363: a0 = u64 [s1 + 0x178]\n 23367: a2 = a1 if a0 == 0\n 23370: jump @321 if a2 == 0\n      : @316 (gas: 6)\n 23374: a0 = u64 [s1 + 0xb8]\n 23378: a0 = a0 & 0xffffffffffffffe0\n 23381: u64 [s1 + 0x48] = a0\n 23384: a1 = 0x20\n 23387: a0 = 0\n 23389: ra = 192, jump @0\n      : @317 [@dyn 96] (gas: 67)\n 23395: a2 = u64 [s1 + 0x50]\n 23398: u8 [a0 + 0x18] = a2\n 23401: a1 = a2 >> 0x38\n 23404: u8 [a0 + 0x1f] = a1\n 23407: a1 = a2 >> 0x30\n 23410: u8 [a0 + 0x1e] = a1\n 23413: a1 = a2 >> 0x28\n 23416: u8 [a0 + 0x1d] = a1\n 23419: a1 = a2 >> 0x20\n 23422: u8 [a0 + 0x1c] = a1\n 23425: a1 = a2 >> 0x18\n 23428: u8 [a0 + 0x1b] = a1\n 23431: a1 = a2 >> 0x10\n 23434: u8 [a0 + 0x1a] = a1\n 23437: a1 = a2 >> 0x8\n 23440: u8 [a0 + 0x19] = a1\n 23443: a2 = u64 [s1 + 0x58]\n 23446: u8 [a0 + 0x10] = a2\n 23449: a1 = a2 >> 0x38\n 23452: u8 [a0 + 0x17] = a1\n 23455: a1 = a2 >> 0x30\n 23458: u8 [a0 + 0x16] = a1\n 23461: a1 = a2 >> 0x28\n 23464: u8 [a0 + 0x15] = a1\n 23467: a1 = a2 >> 0x20\n 23470: u8 [a0 + 0x14] = a1\n 23473: a1 = a2 >> 0x18\n 23476: u8 [a0 + 0x13] = a1\n 23479: a1 = a2 >> 0x10\n 23482: u8 [a0 + 0x12] = a1\n 23485: a1 = a2 >> 0x8\n 23488: u8 [a0 + 0x11] = a1\n 23491: a2 = u64 [s1 + 0x160]\n 23495: u8 [a0 + 0x8] = a2\n 23498: a1 = a2 >> 0x38\n 23501: u8 [a0 + 0xf] = a1\n 23504: a1 = a2 >> 0x30\n 23507: u8 [a0 + 0xe] = a1\n 23510: a1 = a2 >> 0x28\n 23513: u8 [a0 + 0xd] = a1\n 23516: a1 = a2 >> 0x20\n 23519: u8 [a0 + 0xc] = a1\n 23522: a1 = a2 >> 0x18\n 23525: u8 [a0 + 0xb] = a1\n 23528: a1 = a2 >> 0x10\n 23531: u8 [a0 + 0xa] = a1\n 23534: a1 = a2 >> 0x8\n 23537: u8 [a0 + 0x9] = a1\n 23540: a2 = u64 [s1 + 0x168]\n 23544: u8 [a0] = a2\n 23546: a1 = a2 >> 0x38\n 23549: u8 [a0 + 0x7] = a1\n 23552: a1 = a2 >> 0x30\n 23555: u8 [a0 + 0x6] = a1\n 23558: a1 = a2 >> 0x28\n 23561: u8 [a0 + 0x5] = a1\n 23564: a1 = a2 >> 0x20\n 23567: u8 [a0 + 0x4] = a1\n 23570: a1 = a2 >> 0x18\n 23573: u8 [a0 + 0x3] = a1\n 23576: a1 = a2 >> 0x10\n 23579: u8 [a0 + 0x2] = a1\n 23582: a1 = a2 >> 0x8\n 23585: u8 [a0 + 0x1] = a1\n 23588: a1 = 0x20\n 23591: a0 = 0\n 23593: ra = 194, jump @0\n      : @318 [@dyn 97] (gas: 9)\n 23599: a1 = sp + 0xffffffffffffffe0\n 23602: a1 = a1 & 0xffffffffffffffe0\n 23605: u64 [s1 + 0x1d8] = a1\n 23609: sp = a1\n 23611: i32 a0 = a0 + 0\n 23613: i32 a2 = a1 + 0\n 23615: a1 = 0x20\n 23618: ecalli 8 // 'hash_keccak_256'\n 23620: fallthrough\n      : @319 (gas: 15)\n 23621: a3 = u64 [s1 + 0x1d8]\n 23625: a0 = u64 [a3]\n 23627: a1 = u64 [a3 + 0x8]\n 23630: a2 = u64 [a3 + 0x10]\n 23633: a3 = u64 [a3 + 0x18]\n 23636: a0 = reverse a0\n 23638: u64 [s1 + 0x1c0] = a0\n 23642: a0 = reverse a1\n 23644: u64 [s1 + 0x1a0] = a0\n 23648: a0 = reverse a2\n 23650: u64 [s1 + 0x1c8] = a0\n 23654: a0 = reverse a3\n 23656: u64 [s1 + 0x1d0] = a0\n 23660: a0 = u64 [s1 + 0x48]\n 23663: jump @323 if a0 != 0\n      : @320 (gas: 6)\n 23666: a2 = 0\n 23668: u64 [s1 + 472] = 0\n 23672: t1 = u64 [s1 + 0x188]\n 23676: t0 = u64 [s1 + 0x180]\n 23680: a1 = 0x20\n 23683: jump @329\n      : @321 (gas: 9)\n 23686: a0 = u64 [s1 + 0x40]\n 23689: a1 = u64 [s1 + 0x38]\n 23692: a0 = a0 | a1\n 23695: a1 = u64 [s1 + 0x48]\n 23698: a2 = u64 [s1 + 0x30]\n 23701: a1 = a1 | a2\n 23704: a0 = a0 | a1\n 23707: a1 = u64 [s1 + 0x188]\n 23711: jump @335 if a0 != 0\n      : @322 (gas: 5)\n 23715: u64 [s1 + 472] = 0\n 23719: u64 [s1 + 464] = 0\n 23723: u64 [s1 + 456] = 0\n 23727: u64 [s1 + 448] = 0\n 23731: jump @337\n      : @323 (gas: 125)\n 23734: u64 [s1 + 424] = 0\n 23738: u64 [s1 + 432] = 0\n 23742: u64 [s1 + 472] = 0\n 23746: a1 = u64 [s1 + 0x188]\n 23750: t0 = a1 + 0x20\n 23753: a0 = t0 <u a1\n 23756: t1 = a1\n 23758: a3 = u64 [s1 + 0x180]\n 23762: a2 = a3 + a0\n 23765: a1 = a2 <u a3\n 23768: ra = a3\n 23770: a1 = a0 if a0 == 0\n 23773: a0 = u64 [s1 + 0x198]\n 23777: a1 = a1 + a0\n 23780: a0 = a1 <u a0\n 23783: t2 = u64 [s1 + 0x190]\n 23787: t2 = t2 + a0\n 23790: a4 = a1 >u 0\n 23792: a5 = t2 >u 0\n 23794: a5 = a4 if t2 == 0\n 23797: a4 = 0x100000000\n 23807: a3 = t0\n 23809: a0 = maxu(t0, a4)\n 23812: t0 = a4 if a5 == 0\n 23815: a3 = a4 if a2 == 0\n 23818: a0 = a3 if a2 != 0\n 23821: a3 = a1 | t2\n 23824: a0 = t0 if a3 != 0\n 23827: a4 = a2\n 23829: a4 = 0 if a5 == 0\n 23831: a4 = a2 if a3 == 0\n 23834: a2 = ra ^ 0xffffffffffffffff\n 23837: a4 = a4 + a2\n 23840: a3 = t1 ^ 0xffffffffffffffff\n 23843: a0 = a0 + a3\n 23846: a5 = a0 <u a3\n 23849: a3 = a4 + a5\n 23852: a4 = a3 ^ a2\n 23855: a2 = a3 <u a2\n 23858: a2 = a5 if a4 == 0\n 23861: a5 = a1\n 23863: a5 = 0 if t2 == 0\n 23865: a5 = a1 if t2 == 0\n 23868: a1 = u64 [s1 + 0x198]\n 23872: a1 = a1 ^ 0xffffffffffffffff\n 23875: u64 [s1 + 0x178] = a1\n 23879: a5 = a5 + a1\n 23882: t1 = a5 + a2\n 23885: a1 = t1 << 0x3b\n 23888: a2 = a3 >> 0x5\n 23891: ra = a2 | a1\n 23894: a3 = a3 << 0x3b\n 23897: a0 = a0 >> 0x5\n 23900: a3 = a3 | a0\n 23903: a4 = u64 [s1 + 0x48]\n 23906: a0 = a4 <u 0x1\n 23909: a1 = -a0\n 23911: a2 = a0 << 0x3b\n 23914: a0 = a4 + 0xffffffffffffffff\n 23917: a0 = a0 >> 0x5\n 23920: a0 = a0 - a2\n 23923: u64 [s1 + 0x1b8] = a0\n 23927: a4 = ra ^ a1\n 23930: t0 = ra <u a1\n 23933: u64 [s1 + 0x168] = a1\n 23937: a0 = a3 <u a0\n 23940: a0 = t0 if a4 != 0\n 23943: u64 [s1 + 0x170] = a0\n 23947: a0 = u64 [s1 + 0x190]\n 23951: a4 = a0 ^ 0xffffffffffffffff\n 23954: t2 = t2 + a4\n 23957: a0 = u64 [s1 + 0x178]\n 23961: a4 = a5 <u a0\n 23964: a4 = a4 + t2\n 23967: a5 = t1 <u a5\n 23970: a5 = a5 + a4\n 23973: t0 = t1 >> 0x5\n 23976: a4 = a5 << 0x3b\n 23979: a4 = t0 | a4\n 23982: a5 = a5 >> 0x5\n 23985: t0 = a1 >> 0x5\n 23988: t1 = t0 - a2\n 23991: a2 = a4 <u t1\n 23994: t2 = a5 ^ t0\n 23997: a0 = a5 <u t0\n 24000: a0 = a2 if t2 == 0\n 24003: a2 = a4 ^ t1\n 24006: a2 = a2 | t2\n 24009: a1 = u64 [s1 + 0x170]\n 24013: a0 = a1 if a2 == 0\n 24016: a2 = u64 [s1 + 0x1b8]\n 24020: a3 = a2 if a0 == 0\n 24023: a1 = u64 [s1 + 0x168]\n 24027: ra = a1 if a0 == 0\n 24030: a5 = t0 if a0 == 0\n 24033: a4 = t1 if a0 == 0\n 24036: t0 = u64 [s1 + 0x180]\n 24040: t1 = u64 [s1 + 0x188]\n 24044: a0 = a4 >> 0x3b\n 24047: a5 = a5 << 0x5\n 24050: a0 = a0 | a5\n 24053: t2 = u64 [s1 + 0x1b0]\n 24057: a2 = ra >> 0x3b\n 24060: a4 = a4 << 0x5\n 24063: a2 = a2 | a4\n 24066: a4 = a3 >> 0x3b\n 24069: a1 = ra << 0x5\n 24072: a1 = a1 | a4\n 24075: a3 = a3 << 0x5\n 24078: a4 = a3 + 0x40\n 24081: u64 [s1 + 0x178] = a4\n 24085: a3 = a4 <u a3\n 24088: a4 = a1 + a3\n 24091: u64 [s1 + 0x170] = a4\n 24095: a1 = a4 <u a1\n 24098: a1 = a3 if a3 == 0\n 24101: a1 = a1 + a2\n 24104: u64 [s1 + 0x168] = a1\n 24108: a1 = a1 <u a2\n 24111: a3 = u64 [s1 + 0x1a8]\n 24115: a0 = a0 + a1\n 24118: u64 [s1 + 0x160] = a0\n 24122: a4 = 0x20\n 24125: ra = u64 [s1 + 0x1a0]\n 24129: fallthrough\n      : @324 (gas: 28)\n 24130: u64 [s1 + 0x1a0] = a4\n 24134: a0 = t1 + a4\n 24137: a1 = a0 <u t1\n 24140: u64 [s1 + 0x1a8] = a3\n 24144: a2 = t0 + a3\n 24147: a2 = a2 + a1\n 24150: a3 = a2 ^ t0\n 24153: a4 = a2 <u t0\n 24156: a4 = a1 if a3 == 0\n 24159: u64 [s1 + 0x1b0] = t2\n 24163: a3 = u64 [s1 + 0x198]\n 24167: a1 = a3 + t2\n 24170: t0 = a1 <u a3\n 24173: a5 = u64 [s1 + 0x190]\n 24177: a3 = u64 [s1 + 0x1d8]\n 24181: a5 = a5 + a3\n 24184: a5 = a5 + t0\n 24187: a4 = a4 + a1\n 24190: a1 = a4 <u a1\n 24193: a1 = a1 + a5\n 24196: a1 = a1 | a2\n 24199: a2 = a0 | a4\n 24202: a2 = a2 | a1\n 24205: a1 = a1 | a4\n 24208: a2 = a2 >> 0x20\n 24211: a1 = a1 << 0x20\n 24214: a1 = a1 | a2\n 24217: jump @326 if a1 == 0\n      : @325 (gas: 1)\n 24220: jump @256\n      : @326 (gas: 5)\n 24223: i32 a0 = a0 + 0\n 24225: a1 = 0x20\n 24228: u64 [s1 + 0x1d8] = a3\n 24232: u64 [s1 + 0x1b8] = ra\n 24236: ra = 196, jump @0\n      : @327 [@dyn 98] (gas: 115)\n 24242: a1 = u8 [a0 + 0x1]\n 24245: a2 = u8 [a0]\n 24247: a3 = u8 [a0 + 0x2]\n 24250: a4 = u8 [a0 + 0x3]\n 24253: a1 = a1 << 0x8\n 24256: a1 = a1 | a2\n 24259: a3 = a3 << 0x10\n 24262: a4 = a4 << 0x18\n 24265: a3 = a3 | a4\n 24268: a1 = a1 | a3\n 24271: a2 = u8 [a0 + 0x5]\n 24274: a3 = u8 [a0 + 0x4]\n 24277: a4 = u8 [a0 + 0x6]\n 24280: a5 = u8 [a0 + 0x7]\n 24283: a2 = a2 << 0x8\n 24286: a2 = a2 | a3\n 24289: a4 = a4 << 0x10\n 24292: a5 = a5 << 0x18\n 24295: a4 = a4 | a5\n 24298: a2 = a2 | a4\n 24301: a2 = a2 << 0x20\n 24304: t0 = a2 | a1\n 24307: a2 = u8 [a0 + 0x9]\n 24310: a3 = u8 [a0 + 0x8]\n 24313: a4 = u8 [a0 + 0xa]\n 24316: a5 = u8 [a0 + 0xb]\n 24319: a2 = a2 << 0x8\n 24322: a2 = a2 | a3\n 24325: a4 = a4 << 0x10\n 24328: a5 = a5 << 0x18\n 24331: a4 = a4 | a5\n 24334: a2 = a2 | a4\n 24337: a3 = u8 [a0 + 0xd]\n 24340: a4 = u8 [a0 + 0xc]\n 24343: a5 = u8 [a0 + 0xe]\n 24346: a1 = u8 [a0 + 0xf]\n 24349: a3 = a3 << 0x8\n 24352: a3 = a3 | a4\n 24355: a5 = a5 << 0x10\n 24358: a1 = a1 << 0x18\n 24361: a1 = a1 | a5\n 24364: a1 = a1 | a3\n 24367: a1 = a1 << 0x20\n 24370: t1 = a1 | a2\n 24373: a1 = u8 [a0 + 0x11]\n 24376: a3 = u8 [a0 + 0x10]\n 24379: a4 = u8 [a0 + 0x12]\n 24382: a5 = u8 [a0 + 0x13]\n 24385: a1 = a1 << 0x8\n 24388: a1 = a1 | a3\n 24391: a4 = a4 << 0x10\n 24394: a5 = a5 << 0x18\n 24397: a4 = a4 | a5\n 24400: a1 = a1 | a4\n 24403: a3 = u8 [a0 + 0x15]\n 24406: a4 = u8 [a0 + 0x14]\n 24409: a5 = u8 [a0 + 0x16]\n 24412: a2 = u8 [a0 + 0x17]\n 24415: a3 = a3 << 0x8\n 24418: a3 = a3 | a4\n 24421: a5 = a5 << 0x10\n 24424: a2 = a2 << 0x18\n 24427: a2 = a2 | a5\n 24430: a2 = a2 | a3\n 24433: a2 = a2 << 0x20\n 24436: a3 = a2 | a1\n 24439: a1 = u8 [a0 + 0x19]\n 24442: a2 = u8 [a0 + 0x18]\n 24445: a4 = u8 [a0 + 0x1a]\n 24448: a5 = u8 [a0 + 0x1b]\n 24451: a1 = a1 << 0x8\n 24454: a1 = a1 | a2\n 24457: a4 = a4 << 0x10\n 24460: a5 = a5 << 0x18\n 24463: a4 = a4 | a5\n 24466: a1 = a1 | a4\n 24469: a2 = u8 [a0 + 0x1d]\n 24472: a4 = u8 [a0 + 0x1c]\n 24475: a5 = u8 [a0 + 0x1e]\n 24478: a0 = u8 [a0 + 0x1f]\n 24481: a2 = a2 << 0x8\n 24484: a2 = a2 | a4\n 24487: a5 = a5 << 0x10\n 24490: a0 = a0 << 0x18\n 24493: a0 = a0 | a5\n 24496: a0 = a0 | a2\n 24499: a0 = a0 << 0x20\n 24502: a0 = a0 | a1\n 24505: a1 = reverse t0\n 24507: a2 = s1 + 0x7ff\n 24511: a2 = a2 + 0x159\n 24515: u64 [a2 + 0x4e0] = a1\n 24519: a1 = reverse t1\n 24521: u64 [a2 + 0x4d8] = a1\n 24525: a1 = reverse a3\n 24527: u64 [a2 + 0x4d0] = a1\n 24531: a0 = reverse a0\n 24533: u64 [a2 + 0x4c8] = a0\n 24537: a0 = u64 [s1 + 0x1c0]\n 24541: u64 [a2 + 0x4c0] = a0\n 24545: a0 = u64 [s1 + 0x1b8]\n 24549: u64 [a2 + 0x4b8] = a0\n 24553: a0 = u64 [s1 + 0x1c8]\n 24557: u64 [a2 + 0x4b0] = a0\n 24561: a0 = u64 [s1 + 0x1d0]\n 24565: u64 [a2 + 0x4a8] = a0\n 24569: a0 = s1 + 0x1000\n 24573: i32 a1 = a0 + 0xfffffffffffffe00\n 24577: a0 = s1 + 0x1000\n 24581: i32 a3 = a0 + 0xfffffffffffffe20\n 24585: a2 = 0xffffffffffffffff\n 24588: a4 = 0x20\n 24591: a0 = 0\n 24593: ecalli 15 // 'set_storage'\n 24595: fallthrough\n      : @328 (gas: 48)\n 24596: t0 = u64 [s1 + 0x180]\n 24600: t1 = u64 [s1 + 0x188]\n 24604: a2 = u64 [s1 + 0x1d0]\n 24608: a2 = a2 + 0x1\n 24611: a0 = a2 <u 0x1\n 24614: a1 = u64 [s1 + 0x1c8]\n 24618: a1 = a1 + a0\n 24621: u64 [s1 + 0x1d0] = a2\n 24625: u64 [s1 + 0x1c8] = a1\n 24629: a0 = a2 | a1\n 24632: a0 = a0 <u 0x1\n 24635: a1 = u64 [s1 + 0x1b8]\n 24639: ra = a1 + a0\n 24642: t2 = ra <u a1\n 24645: a0 = u64 [s1 + 0x1a0]\n 24649: a1 = a0 + 0x20\n 24652: a0 = a1 <u a0\n 24655: a3 = u64 [s1 + 0x1a8]\n 24659: a2 = a3 + a0\n 24662: a3 = a2 <u a3\n 24665: a3 = a0 if a0 == 0\n 24668: a4 = u64 [s1 + 0x1b0]\n 24672: a0 = a4 + a3\n 24675: a3 = a0 <u a4\n 24678: a5 = u64 [s1 + 0x1d8]\n 24682: a5 = a5 + a3\n 24685: a3 = u64 [s1 + 0x168]\n 24689: a3 = a3 ^ a0\n 24692: a4 = u64 [s1 + 0x178]\n 24696: a4 = a4 ^ a1\n 24699: a3 = a3 | a4\n 24702: u64 [s1 + 0x1d8] = a5\n 24706: a4 = u64 [s1 + 0x160]\n 24710: a4 = a4 ^ a5\n 24713: a5 = u64 [s1 + 0x170]\n 24717: a5 = a5 ^ a2\n 24720: a4 = a4 | a5\n 24723: a3 = a3 | a4\n 24726: u64 [s1 + 0x1b8] = a3\n 24730: a4 = u64 [s1 + 0x1c0]\n 24734: a4 = a4 + t2\n 24737: u64 [s1 + 0x1c0] = a4\n 24741: a4 = a1\n 24743: a3 = a2\n 24745: t2 = a0\n 24747: u64 [s1 + 0x1a0] = ra\n 24751: a5 = u64 [s1 + 0x1b8]\n 24755: jump @324 if a5 != 0\n      : @329 (gas: 13)\n 24759: u64 [s1 + 0x1b0] = a2\n 24763: u64 [s1 + 0x1b8] = a1\n 24767: a1 = u64 [s1 + 0xb8]\n 24771: a2 = u64 [s1 + 0x48]\n 24774: t2 = a1\n 24776: a2 = a2 ^ a1\n 24779: a4 = u64 [s1 + 0xb0]\n 24783: a2 = a2 | a4\n 24786: a5 = u64 [s1 + 0xa8]\n 24790: ra = u64 [s1 + 0xa0]\n 24794: a3 = a5 | ra\n 24797: a2 = a2 | a3\n 24800: jump @334 if a2 == 0\n      : @330 (gas: 27)\n 24804: ra = u64 [s1 + 0x1b8]\n 24808: ra = ra + t1\n 24811: a3 = ra <u t1\n 24814: a1 = u64 [s1 + 0x1b0]\n 24818: a1 = a1 + t0\n 24821: a1 = a1 + a3\n 24824: a4 = a1 ^ t0\n 24827: a5 = a1 <u t0\n 24830: a5 = a3 if a4 == 0\n 24833: t0 = u64 [s1 + 0x198]\n 24837: a0 = a0 + t0\n 24840: a3 = a0 <u t0\n 24843: a4 = u64 [s1 + 0x190]\n 24847: a2 = u64 [s1 + 0x1d8]\n 24851: a4 = a4 + a2\n 24854: a3 = a3 + a4\n 24857: a5 = a5 + a0\n 24860: a0 = a5 <u a0\n 24863: a0 = a0 + a3\n 24866: a0 = a0 | a1\n 24869: a1 = ra | a5\n 24872: a1 = a1 | a0\n 24875: a0 = a0 | a5\n 24878: a1 = a1 >> 0x20\n 24881: a0 = a0 << 0x20\n 24884: a0 = a0 | a1\n 24887: jump @332 if a0 == 0\n      : @331 (gas: 1)\n 24890: jump @256\n      : @332 (gas: 3)\n 24893: i32 a0 = ra + 0\n 24895: a1 = 0x20\n 24898: ra = 198, jump @0\n      : @333 [@dyn 99] (gas: 286)\n 24904: a1 = u8 [a0 + 0x19]\n 24907: a2 = u8 [a0 + 0x18]\n 24910: a3 = u8 [a0 + 0x1a]\n 24913: a4 = u8 [a0 + 0x1b]\n 24916: a1 = a1 << 0x8\n 24919: a1 = a1 | a2\n 24922: a3 = a3 << 0x10\n 24925: a4 = a4 << 0x18\n 24928: a3 = a3 | a4\n 24931: a1 = a1 | a3\n 24934: a2 = u8 [a0 + 0x1d]\n 24937: a3 = u8 [a0 + 0x1c]\n 24940: a4 = u8 [a0 + 0x1e]\n 24943: a5 = u8 [a0 + 0x1f]\n 24946: a2 = a2 << 0x8\n 24949: a2 = a2 | a3\n 24952: a4 = a4 << 0x10\n 24955: a5 = a5 << 0x18\n 24958: a4 = a4 | a5\n 24961: a2 = a2 | a4\n 24964: a2 = a2 << 0x20\n 24967: a1 = a1 | a2\n 24970: u64 [s1 + 0x1d8] = a1\n 24974: a1 = u8 [a0 + 0x11]\n 24977: a2 = u8 [a0 + 0x10]\n 24980: a3 = u8 [a0 + 0x12]\n 24983: a4 = u8 [a0 + 0x13]\n 24986: a1 = a1 << 0x8\n 24989: a1 = a1 | a2\n 24992: a3 = a3 << 0x10\n 24995: a4 = a4 << 0x18\n 24998: a3 = a3 | a4\n 25001: a1 = a1 | a3\n 25004: a2 = u8 [a0 + 0x15]\n 25007: a3 = u8 [a0 + 0x14]\n 25010: a4 = u8 [a0 + 0x16]\n 25013: a5 = u8 [a0 + 0x17]\n 25016: a2 = a2 << 0x8\n 25019: a2 = a2 | a3\n 25022: a4 = a4 << 0x10\n 25025: a5 = a5 << 0x18\n 25028: a4 = a4 | a5\n 25031: a2 = a2 | a4\n 25034: a2 = a2 << 0x20\n 25037: a1 = a1 | a2\n 25040: u64 [s1 + 0x1b8] = a1\n 25044: a1 = u8 [a0 + 0x9]\n 25047: a2 = u8 [a0 + 0x8]\n 25050: a3 = u8 [a0 + 0xa]\n 25053: a4 = u8 [a0 + 0xb]\n 25056: a1 = a1 << 0x8\n 25059: a1 = a1 | a2\n 25062: a3 = a3 << 0x10\n 25065: a4 = a4 << 0x18\n 25068: a3 = a3 | a4\n 25071: a1 = a1 | a3\n 25074: a2 = u8 [a0 + 0xd]\n 25077: a3 = u8 [a0 + 0xc]\n 25080: a4 = u8 [a0 + 0xe]\n 25083: a5 = u8 [a0 + 0xf]\n 25086: a2 = a2 << 0x8\n 25089: a2 = a2 | a3\n 25092: a4 = a4 << 0x10\n 25095: a5 = a5 << 0x18\n 25098: a4 = a4 | a5\n 25101: a2 = a2 | a4\n 25104: a2 = a2 << 0x20\n 25107: t2 = a2 | a1\n 25110: a1 = u8 [a0 + 0x1]\n 25113: a2 = u8 [a0]\n 25115: a4 = u8 [a0 + 0x2]\n 25118: a5 = u8 [a0 + 0x3]\n 25121: a1 = a1 << 0x8\n 25124: a1 = a1 | a2\n 25127: a4 = a4 << 0x10\n 25130: a5 = a5 << 0x18\n 25133: a4 = a4 | a5\n 25136: a1 = a1 | a4\n 25139: a2 = u8 [a0 + 0x5]\n 25142: a4 = u8 [a0 + 0x4]\n 25145: a5 = u8 [a0 + 0x6]\n 25148: a0 = u8 [a0 + 0x7]\n 25151: a2 = a2 << 0x8\n 25154: a2 = a2 | a4\n 25157: a5 = a5 << 0x10\n 25160: a0 = a0 << 0x18\n 25163: a0 = a0 | a5\n 25166: a0 = a0 | a2\n 25169: a0 = a0 << 0x20\n 25172: ra = a0 | a1\n 25175: u8 [s1 + 2015] = 0\n 25179: u8 [s1 + 2014] = 0\n 25183: u8 [s1 + 2013] = 0\n 25187: u8 [s1 + 2012] = 0\n 25191: u8 [s1 + 2011] = 0\n 25195: u8 [s1 + 2010] = 0\n 25199: u8 [s1 + 2009] = 0\n 25203: u8 [s1 + 2008] = 0\n 25207: u8 [s1 + 2007] = 0\n 25211: u8 [s1 + 2006] = 0\n 25215: u8 [s1 + 2005] = 0\n 25219: u8 [s1 + 2004] = 0\n 25223: u8 [s1 + 2003] = 0\n 25227: u8 [s1 + 2002] = 0\n 25231: u8 [s1 + 2001] = 0\n 25235: u8 [s1 + 2000] = 0\n 25239: u8 [s1 + 1999] = 0\n 25243: u8 [s1 + 1998] = 0\n 25247: u8 [s1 + 1997] = 0\n 25251: u8 [s1 + 1996] = 0\n 25255: u8 [s1 + 1995] = 0\n 25259: u8 [s1 + 1994] = 0\n 25263: u8 [s1 + 1993] = 0\n 25267: u8 [s1 + 1992] = 0\n 25271: u8 [s1 + 1991] = 0\n 25275: u8 [s1 + 1990] = 0\n 25279: u8 [s1 + 1989] = 0\n 25283: u8 [s1 + 1988] = 0\n 25287: u8 [s1 + 1987] = 0\n 25291: u8 [s1 + 1986] = 0\n 25295: u8 [s1 + 1985] = 0\n 25299: u8 [s1 + 1984] = 0\n 25303: u8 [s1 + 1983] = 0xff\n 25309: u8 [s1 + 1982] = 0xff\n 25315: u8 [s1 + 1981] = 0xff\n 25321: u8 [s1 + 1979] = 0xff\n 25327: u8 [s1 + 1976] = 0xffffffffffffffff\n 25332: u8 [s1 + 1975] = 0xff\n 25338: u8 [s1 + 1974] = 0xff\n 25344: u8 [s1 + 1973] = 0xff\n 25350: u8 [s1 + 1971] = 0xff\n 25356: u8 [s1 + 1968] = 0xffffffffffffffff\n 25361: u8 [s1 + 1967] = 0xff\n 25367: u8 [s1 + 1966] = 0xff\n 25373: u8 [s1 + 1965] = 0xff\n 25379: u8 [s1 + 1963] = 0xff\n 25385: u8 [s1 + 1960] = 0xffffffffffffffff\n 25390: u8 [s1 + 1959] = 0xff\n 25396: u8 [s1 + 1958] = 0xff\n 25402: u8 [s1 + 1957] = 0xff\n 25408: u8 [s1 + 1955] = 0xff\n 25414: u8 [s1 + 1952] = 0xffffffffffffffff\n 25419: a2 = 0xffffffff\n 25429: u8 [s1 + 0x7bc] = a2\n 25433: u8 [s1 + 0x7b4] = a2\n 25437: u8 [s1 + 0x7ac] = a2\n 25441: u8 [s1 + 0x7a4] = a2\n 25445: a2 = 0xffffffffffff\n 25455: u8 [s1 + 0x7ba] = a2\n 25459: a1 = 0xffffffffffffff\n 25469: u8 [s1 + 0x7b9] = a1\n 25473: u8 [s1 + 0x7b2] = a2\n 25477: u8 [s1 + 0x7b1] = a1\n 25481: u8 [s1 + 0x7aa] = a2\n 25485: u8 [s1 + 0x7a9] = a1\n 25489: u8 [s1 + 0x7a2] = a2\n 25493: u8 [s1 + 0x7a1] = a1\n 25497: a4 = u64 [s1 + 0xb8]\n 25501: a4 = a4 & 0x1f\n 25504: a1 = s1 + 0x7a0\n 25508: a4 = a4 + a1\n 25511: a1 = u8 [a4 + 0x19]\n 25514: a2 = u8 [a4 + 0x18]\n 25517: a5 = u8 [a4 + 0x1a]\n 25520: a3 = u8 [a4 + 0x1b]\n 25523: a1 = a1 << 0x8\n 25526: a1 = a1 | a2\n 25529: a5 = a5 << 0x10\n 25532: a3 = a3 << 0x18\n 25535: a3 = a3 | a5\n 25538: a1 = a1 | a3\n 25541: a2 = u8 [a4 + 0x1d]\n 25544: a3 = u8 [a4 + 0x1c]\n 25547: a5 = u8 [a4 + 0x1e]\n 25550: a0 = u8 [a4 + 0x1f]\n 25553: a2 = a2 << 0x8\n 25556: a2 = a2 | a3\n 25559: a5 = a5 << 0x10\n 25562: a0 = a0 << 0x18\n 25565: a0 = a0 | a5\n 25568: a0 = a0 | a2\n 25571: a0 = a0 << 0x20\n 25574: t1 = a0 | a1\n 25577: a0 = u8 [a4 + 0x11]\n 25580: a1 = u8 [a4 + 0x10]\n 25583: a2 = u8 [a4 + 0x12]\n 25586: a3 = u8 [a4 + 0x13]\n 25589: a0 = a0 << 0x8\n 25592: a0 = a0 | a1\n 25595: a2 = a2 << 0x10\n 25598: a3 = a3 << 0x18\n 25601: a2 = a2 | a3\n 25604: a5 = a2 | a0\n 25607: a1 = u8 [a4 + 0x15]\n 25610: a2 = u8 [a4 + 0x14]\n 25613: a3 = u8 [a4 + 0x16]\n 25616: a0 = u8 [a4 + 0x17]\n 25619: a1 = a1 << 0x8\n 25622: a1 = a1 | a2\n 25625: a3 = a3 << 0x10\n 25628: a0 = a0 << 0x18\n 25631: a0 = a0 | a3\n 25634: a0 = a0 | a1\n 25637: a0 = a0 << 0x20\n 25640: t0 = a0 | a5\n 25643: a0 = u8 [a4 + 0x9]\n 25646: a2 = u8 [a4 + 0x8]\n 25649: a3 = u8 [a4 + 0xa]\n 25652: a5 = u8 [a4 + 0xb]\n 25655: a0 = a0 << 0x8\n 25658: a0 = a0 | a2\n 25661: a3 = a3 << 0x10\n 25664: a5 = a5 << 0x18\n 25667: a3 = a3 | a5\n 25670: a1 = a3 | a0\n 25673: a2 = u8 [a4 + 0xd]\n 25676: a3 = u8 [a4 + 0xc]\n 25679: a5 = u8 [a4 + 0xe]\n 25682: a0 = u8 [a4 + 0xf]\n 25685: a2 = a2 << 0x8\n 25688: a2 = a2 | a3\n 25691: a5 = a5 << 0x10\n 25694: a0 = a0 << 0x18\n 25697: a0 = a0 | a5\n 25700: a0 = a0 | a2\n 25703: a0 = a0 << 0x20\n 25706: a2 = a0 | a1\n 25709: a0 = u8 [a4 + 0x1]\n 25712: a1 = u8 [a4]\n 25714: a3 = u8 [a4 + 0x2]\n 25717: a5 = u8 [a4 + 0x3]\n 25720: a0 = a0 << 0x8\n 25723: a0 = a0 | a1\n 25726: a3 = a3 << 0x10\n 25729: a5 = a5 << 0x18\n 25732: a3 = a3 | a5\n 25735: a0 = a0 | a3\n 25738: a1 = u8 [a4 + 0x5]\n 25741: a3 = u8 [a4 + 0x4]\n 25744: a5 = u8 [a4 + 0x6]\n 25747: a4 = u8 [a4 + 0x7]\n 25750: a1 = a1 << 0x8\n 25753: a1 = a1 | a3\n 25756: a5 = a5 << 0x10\n 25759: a4 = a4 << 0x18\n 25762: a4 = a4 | a5\n 25765: a1 = a1 | a4\n 25768: a1 = a1 << 0x20\n 25771: a0 = a0 | a1\n 25774: a1 = u64 [s1 + 0x1d8]\n 25778: a1 = reverse a1\n 25780: a0 = a1 & ~a0\n 25783: a1 = u64 [s1 + 0x1b8]\n 25787: a1 = reverse a1\n 25789: a1 = a1 & ~a2\n 25792: a2 = reverse t2\n 25794: a2 = a2 & ~t0\n 25797: a3 = reverse ra\n 25799: a3 = a3 & ~t1\n 25802: a4 = s1 + 0x7ff\n 25806: a4 = a4 + 0x159\n 25810: a5 = u64 [s1 + 0x1c0]\n 25814: u64 [a4 + 0x4c0] = a5\n 25818: a5 = u64 [s1 + 0x1a0]\n 25822: u64 [a4 + 0x4b8] = a5\n 25826: a5 = u64 [s1 + 0x1c8]\n 25830: u64 [a4 + 0x4b0] = a5\n 25834: a5 = u64 [s1 + 0x1d0]\n 25838: u64 [a4 + 0x4a8] = a5\n 25842: u64 [a4 + 0x4e0] = a3\n 25846: u64 [a4 + 0x4d8] = a2\n 25850: u64 [a4 + 0x4d0] = a1\n 25854: u64 [a4 + 0x4c8] = a0\n 25858: a0 = s1 + 0x1000\n 25862: i32 a1 = a0 + 0xfffffffffffffe00\n 25866: a0 = s1 + 0x1000\n 25870: i32 a3 = a0 + 0xfffffffffffffe20\n 25874: a2 = 0xffffffffffffffff\n 25877: a4 = 0x20\n 25880: a0 = 0\n 25882: ecalli 15 // 'set_storage'\n 25884: a5 = u64 [s1 + 0xa8]\n 25888: t2 = u64 [s1 + 0xb8]\n 25892: a4 = u64 [s1 + 0xb0]\n 25896: ra = u64 [s1 + 0xa0]\n 25900: fallthrough\n      : @334 (gas: 26)\n 25901: a0 = a4 >> 0x3f\n 25904: a1 = ra << 0x1\n 25907: a0 = a0 | a1\n 25910: a1 = a5 >> 0x3f\n 25913: a2 = a4 << 0x1\n 25916: a1 = a1 | a2\n 25919: a2 = t2 >> 0x3f\n 25922: a3 = a5 << 0x1\n 25925: a2 = a2 | a3\n 25928: a3 = t2 << 0x1\n 25931: a3 = a3 + 0x1\n 25934: a5 = s1 + 0x7ff\n 25938: a5 = a5 + 0x159\n 25942: a4 = u64 [s1 + 0x90]\n 25946: u64 [a5 + 0x4b0] = a4\n 25950: a4 = u64 [s1 + 0x98]\n 25954: u64 [a5 + 0x4a8] = a4\n 25958: a4 = u64 [s1 + 0x88]\n 25962: u64 [a5 + 0x4b8] = a4\n 25966: a4 = u64 [s1 + 0x80]\n 25970: u64 [a5 + 0x4c0] = a4\n 25974: u64 [a5 + 0x4c8] = a3\n 25978: u64 [a5 + 0x4d0] = a2\n 25982: u64 [a5 + 0x4d8] = a1\n 25986: u64 [a5 + 0x4e0] = a0\n 25990: jump @338\n      : @335 (gas: 3)\n 25993: i32 a0 = a1 + 0x20\n 25996: a1 = 0x20\n 25999: ra = 200, jump @0\n      : @336 [@dyn 100] (gas: 100)\n 26005: t2 = u64 [s1 + 0xa8]\n 26009: a1 = u8 [a0 + 0x19]\n 26012: a2 = u8 [a0 + 0x18]\n 26015: a3 = u8 [a0 + 0x1a]\n 26018: a4 = u8 [a0 + 0x1b]\n 26021: a1 = a1 << 0x8\n 26024: a1 = a1 | a2\n 26027: a3 = a3 << 0x10\n 26030: a4 = a4 << 0x18\n 26033: a3 = a3 | a4\n 26036: a1 = a1 | a3\n 26039: a2 = u8 [a0 + 0x1d]\n 26042: a3 = u8 [a0 + 0x1c]\n 26045: a4 = u8 [a0 + 0x1e]\n 26048: a5 = u8 [a0 + 0x1f]\n 26051: a2 = a2 << 0x8\n 26054: a2 = a2 | a3\n 26057: a4 = a4 << 0x10\n 26060: a5 = a5 << 0x18\n 26063: a4 = a4 | a5\n 26066: a2 = a2 | a4\n 26069: a2 = a2 << 0x20\n 26072: t0 = a2 | a1\n 26075: a2 = u8 [a0 + 0x11]\n 26078: a3 = u8 [a0 + 0x10]\n 26081: a4 = u8 [a0 + 0x12]\n 26084: a5 = u8 [a0 + 0x13]\n 26087: a2 = a2 << 0x8\n 26090: a2 = a2 | a3\n 26093: a4 = a4 << 0x10\n 26096: a5 = a5 << 0x18\n 26099: a4 = a4 | a5\n 26102: a2 = a2 | a4\n 26105: a3 = u8 [a0 + 0x15]\n 26108: a4 = u8 [a0 + 0x14]\n 26111: a5 = u8 [a0 + 0x16]\n 26114: a1 = u8 [a0 + 0x17]\n 26117: a3 = a3 << 0x8\n 26120: a3 = a3 | a4\n 26123: a5 = a5 << 0x10\n 26126: a1 = a1 << 0x18\n 26129: a1 = a1 | a5\n 26132: a1 = a1 | a3\n 26135: a1 = a1 << 0x20\n 26138: t1 = a1 | a2\n 26141: a1 = u8 [a0 + 0x9]\n 26144: a3 = u8 [a0 + 0x8]\n 26147: a4 = u8 [a0 + 0xa]\n 26150: a5 = u8 [a0 + 0xb]\n 26153: a1 = a1 << 0x8\n 26156: a1 = a1 | a3\n 26159: a4 = a4 << 0x10\n 26162: a5 = a5 << 0x18\n 26165: a4 = a4 | a5\n 26168: a1 = a1 | a4\n 26171: a3 = u8 [a0 + 0xd]\n 26174: a4 = u8 [a0 + 0xc]\n 26177: a5 = u8 [a0 + 0xe]\n 26180: a2 = u8 [a0 + 0xf]\n 26183: a3 = a3 << 0x8\n 26186: a3 = a3 | a4\n 26189: a5 = a5 << 0x10\n 26192: a2 = a2 << 0x18\n 26195: a2 = a2 | a5\n 26198: a2 = a2 | a3\n 26201: a2 = a2 << 0x20\n 26204: a3 = a2 | a1\n 26207: a1 = u8 [a0 + 0x1]\n 26210: a2 = u8 [a0]\n 26212: a4 = u8 [a0 + 0x2]\n 26215: a5 = u8 [a0 + 0x3]\n 26218: a1 = a1 << 0x8\n 26221: a1 = a1 | a2\n 26224: a4 = a4 << 0x10\n 26227: a5 = a5 << 0x18\n 26230: a4 = a4 | a5\n 26233: a1 = a1 | a4\n 26236: a2 = u8 [a0 + 0x5]\n 26239: a4 = u8 [a0 + 0x4]\n 26242: a5 = u8 [a0 + 0x6]\n 26245: a0 = u8 [a0 + 0x7]\n 26248: a2 = a2 << 0x8\n 26251: a2 = a2 | a4\n 26254: a4 = u64 [s1 + 0xa0]\n 26258: a5 = a5 << 0x10\n 26261: a0 = a0 << 0x18\n 26264: a0 = a0 | a5\n 26267: a0 = a0 | a2\n 26270: a0 = a0 << 0x20\n 26273: a0 = a0 | a1\n 26276: a0 = reverse a0\n 26278: u64 [s1 + 0x1c0] = a0\n 26282: a0 = reverse a3\n 26284: u64 [s1 + 0x1c8] = a0\n 26288: a0 = reverse t1\n 26290: u64 [s1 + 0x1d0] = a0\n 26294: a0 = reverse t0\n 26296: u64 [s1 + 0x1d8] = a0\n 26300: a3 = u64 [s1 + 0xb0]\n 26304: fallthrough\n      : @337 (gas: 232)\n 26305: a0 = a4 << 0x1\n 26308: a4 = a3 >> 0x3f\n 26311: a0 = a0 | a4\n 26314: u64 [s1 + 0x1b8] = a0\n 26318: a0 = a3 << 0x1\n 26321: a5 = t2 >> 0x3f\n 26324: a0 = a0 | a5\n 26327: u64 [s1 + 0x1b0] = a0\n 26331: a0 = t2 << 0x1\n 26334: a5 = u64 [s1 + 0xb8]\n 26338: a1 = a5 >> 0x3f\n 26341: a4 = a0 | a1\n 26344: u8 [s1 + 2047] = 0xff\n 26350: u8 [s1 + 2046] = 0xff\n 26356: u8 [s1 + 2045] = 0xff\n 26362: u8 [s1 + 2043] = 0xff\n 26368: u8 [s1 + 2039] = 0xff\n 26374: u8 [s1 + 2038] = 0xff\n 26380: u8 [s1 + 2037] = 0xff\n 26386: u8 [s1 + 2035] = 0xff\n 26392: u8 [s1 + 2031] = 0xff\n 26398: u8 [s1 + 2030] = 0xff\n 26404: u8 [s1 + 2029] = 0xff\n 26410: u8 [s1 + 2027] = 0xff\n 26416: u8 [s1 + 2023] = 0xff\n 26422: u8 [s1 + 2022] = 0xff\n 26428: u8 [s1 + 2021] = 0xff\n 26434: u8 [s1 + 2019] = 0xff\n 26440: a2 = 0xffffffff\n 26450: u8 [s1 + 0x7fc] = a2\n 26454: u8 [s1 + 0x7f4] = a2\n 26458: u8 [s1 + 0x7ec] = a2\n 26462: u8 [s1 + 0x7e4] = a2\n 26466: a2 = 0xffffffffffff\n 26476: u8 [s1 + 0x7fa] = a2\n 26480: u8 [s1 + 0x7f2] = a2\n 26484: u8 [s1 + 0x7ea] = a2\n 26488: u8 [s1 + 0x7e2] = a2\n 26492: u8 [s1 + 2040] = 0xffffffffffffffff\n 26497: u8 [s1 + 2032] = 0xffffffffffffffff\n 26502: u8 [s1 + 2024] = 0xffffffffffffffff\n 26507: u8 [s1 + 2016] = 0xffffffffffffffff\n 26512: a1 = 0xffffffffffffff\n 26522: u8 [s1 + 0x7f9] = a1\n 26526: u8 [s1 + 0x7f1] = a1\n 26530: u8 [s1 + 0x7e9] = a1\n 26534: u8 [s1 + 0x7e1] = a1\n 26538: a1 = a5 & 0x1f\n 26541: a2 = s1 + 0x7e0\n 26545: a1 = a1 + a2\n 26548: a0 = s1 + 0x1000\n 26552: u8 [a0 + 4294965279] = 0\n 26556: a0 = s1 + 0x1000\n 26560: u8 [a0 + 4294965278] = 0\n 26564: a0 = s1 + 0x1000\n 26568: u8 [a0 + 4294965277] = 0\n 26572: a0 = s1 + 0x1000\n 26576: u8 [a0 + 4294965276] = 0\n 26580: a0 = s1 + 0x1000\n 26584: u8 [a0 + 4294965275] = 0\n 26588: a0 = s1 + 0x1000\n 26592: u8 [a0 + 4294965274] = 0\n 26596: a0 = s1 + 0x1000\n 26600: u8 [a0 + 4294965273] = 0\n 26604: a0 = s1 + 0x1000\n 26608: u8 [a0 + 4294965272] = 0\n 26612: a0 = s1 + 0x1000\n 26616: u8 [a0 + 4294965271] = 0\n 26620: a0 = s1 + 0x1000\n 26624: u8 [a0 + 4294965270] = 0\n 26628: a0 = s1 + 0x1000\n 26632: u8 [a0 + 4294965269] = 0\n 26636: a0 = s1 + 0x1000\n 26640: u8 [a0 + 4294965268] = 0\n 26644: a0 = s1 + 0x1000\n 26648: u8 [a0 + 4294965267] = 0\n 26652: a0 = s1 + 0x1000\n 26656: u8 [a0 + 4294965266] = 0\n 26660: a0 = s1 + 0x1000\n 26664: u8 [a0 + 4294965265] = 0\n 26668: a0 = s1 + 0x1000\n 26672: u8 [a0 + 4294965264] = 0\n 26676: a0 = s1 + 0x1000\n 26680: u8 [a0 + 4294965263] = 0\n 26684: a0 = s1 + 0x1000\n 26688: u8 [a0 + 4294965262] = 0\n 26692: a0 = s1 + 0x1000\n 26696: u8 [a0 + 4294965261] = 0\n 26700: a0 = s1 + 0x1000\n 26704: u8 [a0 + 4294965260] = 0\n 26708: a0 = s1 + 0x1000\n 26712: u8 [a0 + 4294965259] = 0\n 26716: a0 = s1 + 0x1000\n 26720: u8 [a0 + 4294965258] = 0\n 26724: a0 = s1 + 0x1000\n 26728: u8 [a0 + 4294965257] = 0\n 26732: a0 = s1 + 0x1000\n 26736: u8 [a0 + 4294965256] = 0\n 26740: a0 = s1 + 0x1000\n 26744: u8 [a0 + 4294965255] = 0\n 26748: a0 = s1 + 0x1000\n 26752: u8 [a0 + 4294965254] = 0\n 26756: a0 = s1 + 0x1000\n 26760: u8 [a0 + 4294965253] = 0\n 26764: a0 = s1 + 0x1000\n 26768: u8 [a0 + 4294965252] = 0\n 26772: a0 = s1 + 0x1000\n 26776: u8 [a0 + 4294965251] = 0\n 26780: a0 = s1 + 0x1000\n 26784: u8 [a0 + 4294965250] = 0\n 26788: a0 = s1 + 0x1000\n 26792: u8 [a0 + 4294965249] = 0\n 26796: a0 = s1 + 0x1000\n 26800: u8 [a0 + 4294965248] = 0\n 26804: t0 = u8 [a1 + 0x1]\n 26807: a3 = u8 [a1]\n 26809: a2 = u8 [a1 + 0x2]\n 26812: t1 = u8 [a1 + 0x3]\n 26815: t0 = t0 << 0x8\n 26818: a3 = t0 | a3\n 26821: a2 = a2 << 0x10\n 26824: t1 = t1 << 0x18\n 26827: a2 = t1 | a2\n 26830: t0 = a2 | a3\n 26833: a3 = u8 [a1 + 0x5]\n 26836: t1 = u8 [a1 + 0x4]\n 26839: a2 = u8 [a1 + 0x6]\n 26842: t2 = u8 [a1 + 0x7]\n 26845: a3 = a3 << 0x8\n 26848: a3 = a3 | t1\n 26851: a2 = a2 << 0x10\n 26854: t2 = t2 << 0x18\n 26857: a2 = t2 | a2\n 26860: a2 = a2 | a3\n 26863: a2 = a2 << 0x20\n 26866: t1 = a2 | t0\n 26869: t2 = u8 [a1 + 0x9]\n 26872: t0 = u8 [a1 + 0x8]\n 26875: a2 = u8 [a1 + 0xa]\n 26878: a3 = u8 [a1 + 0xb]\n 26881: t2 = t2 << 0x8\n 26884: t0 = t2 | t0\n 26887: a2 = a2 << 0x10\n 26890: a3 = a3 << 0x18\n 26893: a2 = a2 | a3\n 26896: t0 = a2 | t0\n 26899: a3 = u8 [a1 + 0xd]\n 26902: t2 = u8 [a1 + 0xc]\n 26905: a2 = u8 [a1 + 0xe]\n 26908: ra = u8 [a1 + 0xf]\n 26911: a3 = a3 << 0x8\n 26914: a3 = a3 | t2\n 26917: a2 = a2 << 0x10\n 26920: ra = ra << 0x18\n 26923: a2 = ra | a2\n 26926: a2 = a2 | a3\n 26929: a2 = a2 << 0x20\n 26932: t2 = a2 | t0\n 26935: t0 = u8 [a1 + 0x11]\n 26938: ra = u8 [a1 + 0x10]\n 26941: a2 = u8 [a1 + 0x12]\n 26944: a3 = u8 [a1 + 0x13]\n 26947: t0 = t0 << 0x8\n 26950: t0 = t0 | ra\n 26953: a2 = a2 << 0x10\n 26956: a3 = a3 << 0x18\n 26959: a2 = a2 | a3\n 26962: t0 = a2 | t0\n 26965: a3 = u8 [a1 + 0x15]\n 26968: ra = u8 [a1 + 0x14]\n 26971: a2 = u8 [a1 + 0x16]\n 26974: a0 = u8 [a1 + 0x17]\n 26977: a3 = a3 << 0x8\n 26980: a3 = a3 | ra\n 26983: a2 = a2 << 0x10\n 26986: a0 = a0 << 0x18\n 26989: a0 = a0 | a2\n 26992: a0 = a0 | a3\n 26995: a0 = a0 << 0x20\n 26998: t0 = a0 | t0\n 27001: ra = u8 [a1 + 0x19]\n 27004: a2 = u8 [a1 + 0x18]\n 27007: a3 = u8 [a1 + 0x1a]\n 27010: a0 = u8 [a1 + 0x1b]\n 27013: ra = ra << 0x8\n 27016: a2 = ra | a2\n 27019: a3 = a3 << 0x10\n 27022: a0 = a0 << 0x18\n 27025: a0 = a0 | a3\n 27028: ra = a0 | a2\n 27031: a2 = u8 [a1 + 0x1d]\n 27034: a3 = u8 [a1 + 0x1c]\n 27037: a0 = u8 [a1 + 0x1e]\n 27040: a1 = u8 [a1 + 0x1f]\n 27043: a2 = a2 << 0x8\n 27046: a2 = a2 | a3\n 27049: a0 = a0 << 0x10\n 27052: a1 = a1 << 0x18\n 27055: a0 = a0 | a1\n 27058: a0 = a0 | a2\n 27061: a0 = a0 << 0x20\n 27064: a0 = a0 | ra\n 27067: a1 = u64 [s1 + 0x1c0]\n 27071: a0 = a1 & ~a0\n 27074: a1 = u64 [s1 + 0x1c8]\n 27078: a1 = a1 & ~t0\n 27081: a2 = u64 [s1 + 0x1d0]\n 27085: a2 = a2 & ~t2\n 27088: a3 = u64 [s1 + 0x1d8]\n 27092: a3 = a3 & ~t1\n 27095: a5 = a5 << 0x1\n 27098: a3 = a3 | a5\n 27101: a2 = a2 | a4\n 27104: a4 = u64 [s1 + 0x1b0]\n 27108: a1 = a1 | a4\n 27111: a4 = u64 [s1 + 0x1b8]\n 27115: a0 = a0 | a4\n 27118: a5 = s1 + 0x7ff\n 27122: a5 = a5 + 0x159\n 27126: a4 = u64 [s1 + 0x90]\n 27130: u64 [a5 + 0x4b0] = a4\n 27134: a4 = u64 [s1 + 0x98]\n 27138: u64 [a5 + 0x4a8] = a4\n 27142: a4 = u64 [s1 + 0x88]\n 27146: u64 [a5 + 0x4b8] = a4\n 27150: a4 = u64 [s1 + 0x80]\n 27154: u64 [a5 + 0x4c0] = a4\n 27158: u64 [a5 + 0x4e0] = a0\n 27162: u64 [a5 + 0x4d8] = a1\n 27166: u64 [a5 + 0x4d0] = a2\n 27170: u64 [a5 + 0x4c8] = a3\n 27174: fallthrough\n      : @338 (gas: 151)\n 27175: a0 = s1 + 0x1000\n 27179: i32 a1 = a0 + 0xfffffffffffffe00\n 27183: a0 = s1 + 0x1000\n 27187: i32 a3 = a0 + 0xfffffffffffffe20\n 27191: a2 = 0xffffffffffffffff\n 27194: a4 = 0x20\n 27197: a0 = 0\n 27199: ecalli 15 // 'set_storage'\n 27201: a1 = u64 [s1 + 0xe0]\n 27205: a0 = a1 + 0x2\n 27208: a1 = a0 <u a1\n 27211: a3 = u64 [s1 + 0xe8]\n 27215: a2 = a3 + a1\n 27218: a3 = a2 <u a3\n 27221: a3 = a1 if a1 == 0\n 27224: a4 = s1 + 0x7ff\n 27228: a4 = a4 + 0x159\n 27232: u64 [a4 + 0x4a8] = a0\n 27236: u64 [a4 + 0x4b0] = a2\n 27240: a0 = u64 [s1 + 0xf8]\n 27244: a3 = a3 + a0\n 27247: u64 [a4 + 0x4b8] = a3\n 27251: a0 = a3 <u a0\n 27254: a1 = u64 [s1 + 0xf0]\n 27258: a0 = a0 + a1\n 27261: u64 [a4 + 0x4c0] = a0\n 27265: a0 = u64 [s1 + 0xd8]\n 27269: u64 [a4 + 0x4c8] = a0\n 27273: a0 = u64 [s1 + 0xd0]\n 27277: u64 [a4 + 0x4d0] = a0\n 27281: a0 = u64 [s1 + 0xc8]\n 27285: u64 [a4 + 0x4d8] = a0\n 27289: a0 = u64 [s1 + 0xc0]\n 27293: u64 [a4 + 0x4e0] = a0\n 27297: a0 = s1 + 0x1000\n 27301: i32 a1 = a0 + 0xfffffffffffffe00\n 27305: a0 = s1 + 0x1000\n 27309: i32 a3 = a0 + 0xfffffffffffffe20\n 27313: a2 = 0xffffffffffffffff\n 27316: a4 = 0x20\n 27319: a0 = 0\n 27321: ecalli 15 // 'set_storage'\n 27323: a1 = u64 [s1 + 0xe0]\n 27327: a0 = a1 + 0x3\n 27330: a1 = a0 <u a1\n 27333: a3 = u64 [s1 + 0xe8]\n 27337: a2 = a3 + a1\n 27340: a3 = a2 <u a3\n 27343: a3 = a1 if a1 == 0\n 27346: a1 = u64 [s1 + 0xf8]\n 27350: a3 = a3 + a1\n 27353: a1 = a3 <u a1\n 27356: a4 = u64 [s1 + 0xf0]\n 27360: a1 = a1 + a4\n 27363: a4 = s1 + 0x7ff\n 27367: a4 = a4 + 0x159\n 27371: u64 [a4 + 0x4c0] = a1\n 27375: u64 [a4 + 0x4b8] = a3\n 27379: u64 [a4 + 0x4b0] = a2\n 27383: u64 [a4 + 0x4a8] = a0\n 27387: a0 = u64 [s1 + 0x100]\n 27391: u64 [a4 + 0x4e0] = a0\n 27395: a0 = u64 [s1 + 0x108]\n 27399: u64 [a4 + 0x4d8] = a0\n 27403: a0 = u64 [s1 + 0x110]\n 27407: u64 [a4 + 0x4d0] = a0\n 27411: a0 = u64 [s1 + 0x118]\n 27415: u64 [a4 + 0x4c8] = a0\n 27419: a0 = s1 + 0x1000\n 27423: i32 a1 = a0 + 0xfffffffffffffe00\n 27427: a0 = s1 + 0x1000\n 27431: i32 a3 = a0 + 0xfffffffffffffe20\n 27435: a2 = 0xffffffffffffffff\n 27438: a4 = 0x20\n 27441: a0 = 0\n 27443: ecalli 15 // 'set_storage'\n 27445: a1 = u64 [s1 + 0xe0]\n 27449: a0 = a1 + 0x5\n 27452: a1 = a0 <u a1\n 27455: a3 = u64 [s1 + 0xe8]\n 27459: a2 = a3 + a1\n 27462: a3 = a2 <u a3\n 27465: a3 = a1 if a1 == 0\n 27468: a1 = u64 [s1 + 0xf8]\n 27472: a3 = a3 + a1\n 27475: a1 = a3 <u a1\n 27478: a4 = u64 [s1 + 0xf0]\n 27482: a1 = a1 + a4\n 27485: a4 = s1 + 0x7ff\n 27489: a4 = a4 + 0x159\n 27493: u64 [a4 + 0x4c0] = a1\n 27497: u64 [a4 + 0x4b8] = a3\n 27501: u64 [a4 + 0x4b0] = a2\n 27505: u64 [a4 + 0x4a8] = a0\n 27509: a0 = u64 [s1 + 0x140]\n 27513: u64 [a4 + 0x4e0] = a0\n 27517: a0 = u64 [s1 + 0x148]\n 27521: u64 [a4 + 0x4d8] = a0\n 27525: a0 = u64 [s1 + 0x150]\n 27529: u64 [a4 + 0x4d0] = a0\n 27533: a0 = u64 [s1 + 0x158]\n 27537: u64 [a4 + 0x4c8] = a0\n 27541: a0 = s1 + 0x1000\n 27545: i32 a1 = a0 + 0xfffffffffffffe00\n 27549: a0 = s1 + 0x1000\n 27553: i32 a3 = a0 + 0xfffffffffffffe20\n 27557: a2 = 0xffffffffffffffff\n 27560: a4 = 0x20\n 27563: a0 = 0\n 27565: ecalli 15 // 'set_storage'\n 27567: a1 = u64 [s1 + 0xe0]\n 27571: a0 = a1 + 0x6\n 27574: a1 = a0 <u a1\n 27577: a3 = u64 [s1 + 0xe8]\n 27581: a2 = a3 + a1\n 27584: a3 = a2 <u a3\n 27587: a3 = a1 if a1 == 0\n 27590: a1 = u64 [s1 + 0xf8]\n 27594: a3 = a3 + a1\n 27597: a1 = a3 <u a1\n 27600: a4 = u64 [s1 + 0xf0]\n 27604: a1 = a1 + a4\n 27607: a4 = s1 + 0x7ff\n 27611: a4 = a4 + 0x159\n 27615: u64 [a4 + 0x4c0] = a1\n 27619: u64 [a4 + 0x4b8] = a3\n 27623: u64 [a4 + 0x4b0] = a2\n 27627: u64 [a4 + 0x4a8] = a0\n 27631: a0 = u64 [s1 + 0x138]\n 27635: u64 [a4 + 0x4e0] = a0\n 27639: a0 = u64 [s1 + 0x130]\n 27643: u64 [a4 + 0x4d8] = a0\n 27647: a0 = u64 [s1 + 0x128]\n 27651: u64 [a4 + 0x4d0] = a0\n 27655: a0 = u64 [s1 + 0x120]\n 27659: u64 [a4 + 0x4c8] = a0\n 27663: a0 = s1 + 0x1000\n 27667: i32 a1 = a0 + 0xfffffffffffffe00\n 27671: a0 = s1 + 0x1000\n 27675: i32 a3 = a0 + 0xfffffffffffffe20\n 27679: a2 = 0xffffffffffffffff\n 27682: a4 = 0x20\n 27685: a0 = 0\n 27687: ecalli 15 // 'set_storage'\n 27689: u64 [s1 + 1912] = 0\n 27693: u64 [s1 + 1904] = 0\n 27697: u64 [s1 + 1896] = 0\n 27701: a0 = s1 + 0x780\n 27705: a2 = s1 + 0x760\n 27709: u64 [s1 + 1888] = 0x1\n 27714: ra = 202, jump @25\n      : @339 [@dyn 101] (gas: 11)\n 27720: a2 = u64 [s1 + 0x780]\n 27724: a0 = u64 [s1 + 0x788]\n 27728: a1 = u64 [s1 + 0x790]\n 27732: a3 = u64 [s1 + 0x798]\n 27736: u64 [s1 + 0x738] = a3\n 27740: u64 [s1 + 0x730] = a1\n 27744: u64 [s1 + 0x728] = a0\n 27748: a0 = s1 + 0x740\n 27752: a1 = s1 + 0x720\n 27756: u64 [s1 + 0x720] = a2\n 27760: ra = 204, jump @478\n      : @340 [@dyn 102] (gas: 29)\n 27766: a0 = u64 [s1 + 0x740]\n 27770: a1 = u64 [s1 + 0x748]\n 27774: a2 = u64 [s1 + 0x750]\n 27778: a3 = u64 [s1 + 0x758]\n 27782: a4 = s1 + 0x7ff\n 27786: a4 = a4 + 0x159\n 27790: u64 [a4 + 1216] = 0\n 27794: u64 [a4 + 1208] = 0\n 27798: u64 [a4 + 1200] = 0\n 27802: u64 [a4 + 1192] = 0x1\n 27807: u64 [a4 + 0x4e0] = a3\n 27811: u64 [a4 + 0x4d8] = a2\n 27815: u64 [a4 + 0x4d0] = a1\n 27819: u64 [a4 + 0x4c8] = a0\n 27823: a0 = s1 + 0x1000\n 27827: i32 a1 = a0 + 0xfffffffffffffe00\n 27831: a0 = s1 + 0x1000\n 27835: i32 a3 = a0 + 0xfffffffffffffe20\n 27839: a2 = 0xffffffffffffffff\n 27842: a4 = 0x20\n 27845: a0 = 0\n 27847: ecalli 15 // 'set_storage'\n 27849: u64 [s1 + 1784] = 0\n 27853: u64 [s1 + 1776] = 0\n 27857: u64 [s1 + 1768] = 0\n 27861: a0 = s1 + 0x700\n 27865: a2 = s1 + 0x6e0\n 27869: u64 [s1 + 1760] = 0\n 27873: ra = 206, jump @25\n      : @341 [@dyn 103] (gas: 9)\n 27879: a0 = u64 [s1 + 0x710]\n 27883: u64 [s1 + 0x1a8] = a0\n 27887: a0 = u64 [s1 + 0x708]\n 27891: u64 [s1 + 0x1b0] = a0\n 27895: a0 = u64 [s1 + 0x700]\n 27899: u64 [s1 + 0x1b8] = a0\n 27903: a0 = 0x40\n 27906: a1 = 0x20\n 27909: ra = 208, jump @0\n      : @342 [@dyn 104] (gas: 102)\n 27915: a1 = u8 [a0 + 0x11]\n 27918: a2 = u8 [a0 + 0x10]\n 27921: a3 = u8 [a0 + 0x12]\n 27924: a4 = u8 [a0 + 0x13]\n 27927: a1 = a1 << 0x8\n 27930: a1 = a1 | a2\n 27933: a3 = a3 << 0x10\n 27936: a4 = a4 << 0x18\n 27939: a3 = a3 | a4\n 27942: a1 = a1 | a3\n 27945: a2 = u8 [a0 + 0x15]\n 27948: a3 = u8 [a0 + 0x14]\n 27951: a4 = u8 [a0 + 0x16]\n 27954: a5 = u8 [a0 + 0x17]\n 27957: a2 = a2 << 0x8\n 27960: a2 = a2 | a3\n 27963: a4 = a4 << 0x10\n 27966: a5 = a5 << 0x18\n 27969: a4 = a4 | a5\n 27972: a2 = a2 | a4\n 27975: a2 = a2 << 0x20\n 27978: t0 = a2 | a1\n 27981: a2 = u8 [a0 + 0x1]\n 27984: a3 = u8 [a0]\n 27986: a4 = u8 [a0 + 0x2]\n 27989: a5 = u8 [a0 + 0x3]\n 27992: a2 = a2 << 0x8\n 27995: a2 = a2 | a3\n 27998: a4 = a4 << 0x10\n 28001: a5 = a5 << 0x18\n 28004: a4 = a4 | a5\n 28007: a2 = a2 | a4\n 28010: a3 = u8 [a0 + 0x5]\n 28013: a4 = u8 [a0 + 0x4]\n 28016: a5 = u8 [a0 + 0x6]\n 28019: a1 = u8 [a0 + 0x7]\n 28022: a3 = a3 << 0x8\n 28025: a3 = a3 | a4\n 28028: a5 = a5 << 0x10\n 28031: a1 = a1 << 0x18\n 28034: a1 = a1 | a5\n 28037: a1 = a1 | a3\n 28040: a1 = a1 << 0x20\n 28043: t1 = a1 | a2\n 28046: a1 = u8 [a0 + 0x19]\n 28049: a3 = u8 [a0 + 0x18]\n 28052: a4 = u8 [a0 + 0x1a]\n 28055: a5 = u8 [a0 + 0x1b]\n 28058: a1 = a1 << 0x8\n 28061: a1 = a1 | a3\n 28064: a4 = a4 << 0x10\n 28067: a5 = a5 << 0x18\n 28070: a4 = a4 | a5\n 28073: a1 = a1 | a4\n 28076: a3 = u8 [a0 + 0x1d]\n 28079: a4 = u8 [a0 + 0x1c]\n 28082: a5 = u8 [a0 + 0x1e]\n 28085: a2 = u8 [a0 + 0x1f]\n 28088: a3 = a3 << 0x8\n 28091: a3 = a3 | a4\n 28094: a5 = a5 << 0x10\n 28097: a2 = a2 << 0x18\n 28100: a2 = a2 | a5\n 28103: a2 = a2 | a3\n 28106: a2 = a2 << 0x20\n 28109: a3 = a2 | a1\n 28112: a1 = u8 [a0 + 0x9]\n 28115: a2 = u8 [a0 + 0x8]\n 28118: a4 = u8 [a0 + 0xa]\n 28121: a5 = u8 [a0 + 0xb]\n 28124: a1 = a1 << 0x8\n 28127: a1 = a1 | a2\n 28130: a4 = a4 << 0x10\n 28133: a5 = a5 << 0x18\n 28136: a4 = a4 | a5\n 28139: a1 = a1 | a4\n 28142: a2 = u8 [a0 + 0xd]\n 28145: a4 = u8 [a0 + 0xc]\n 28148: a5 = u8 [a0 + 0xe]\n 28151: a0 = u8 [a0 + 0xf]\n 28154: a2 = a2 << 0x8\n 28157: a2 = a2 | a4\n 28160: a5 = a5 << 0x10\n 28163: a0 = a0 << 0x18\n 28166: a0 = a0 | a5\n 28169: a0 = a0 | a2\n 28172: a0 = a0 << 0x20\n 28175: a0 = a0 | a1\n 28178: a2 = reverse a0\n 28180: a1 = reverse a3\n 28182: a3 = reverse t1\n 28184: a0 = reverse t0\n 28186: u64 [s1 + 0x1d0] = a0\n 28190: a0 = a0 | a3\n 28193: u64 [s1 + 0x1d8] = a1\n 28197: a1 = a1 | a2\n 28200: a1 = a1 | a0\n 28203: a1 = a1 >> 0x20\n 28206: a0 = a0 | a2\n 28209: a0 = a0 << 0x20\n 28212: a0 = a0 | a1\n 28215: jump @344 if a0 == 0\n      : @343 (gas: 1)\n 28218: jump @256\n      : @344 (gas: 6)\n 28221: a0 = i32 [s1 + 0x1d8]\n 28225: a1 = 0x20\n 28228: u64 [s1 + 0x1a0] = a0\n 28232: u64 [s1 + 0x1c8] = a2\n 28236: u64 [s1 + 0x1c0] = a3\n 28240: ra = 210, jump @0\n      : @345 [@dyn 105] (gas: 61)\n 28246: u8 [a0 + 31] = 0xa0\n 28251: u8 [a0 + 30] = 0\n 28254: u8 [a0 + 29] = 0\n 28257: u8 [a0 + 28] = 0\n 28260: u8 [a0 + 27] = 0\n 28263: u8 [a0 + 26] = 0\n 28266: u8 [a0 + 25] = 0\n 28269: u8 [a0 + 24] = 0\n 28272: u8 [a0 + 23] = 0\n 28275: u8 [a0 + 22] = 0\n 28278: u8 [a0 + 21] = 0\n 28281: u8 [a0 + 20] = 0\n 28284: u8 [a0 + 19] = 0\n 28287: u8 [a0 + 18] = 0\n 28290: u8 [a0 + 17] = 0\n 28293: u8 [a0 + 16] = 0\n 28296: u8 [a0 + 15] = 0\n 28299: u8 [a0 + 14] = 0\n 28302: u8 [a0 + 13] = 0\n 28305: u8 [a0 + 12] = 0\n 28308: u8 [a0 + 11] = 0\n 28311: u8 [a0 + 10] = 0\n 28314: u8 [a0 + 9] = 0\n 28317: u8 [a0 + 8] = 0\n 28320: u8 [a0 + 7] = 0\n 28323: u8 [a0 + 6] = 0\n 28326: u8 [a0 + 5] = 0\n 28329: u8 [a0 + 4] = 0\n 28332: u8 [a0 + 3] = 0\n 28335: u8 [a0 + 2] = 0\n 28338: u8 [a0 + 1] = 0\n 28341: u8 [a0 + 0] = 0\n 28343: a1 = u64 [s1 + 0x1d8]\n 28347: a0 = a1 + 0xa0\n 28351: a1 = a0 <u a1\n 28354: a3 = u64 [s1 + 0x1d0]\n 28358: a2 = a3 + a1\n 28361: a3 = a2 <u a3\n 28364: a3 = a1 if a1 == 0\n 28367: a1 = u64 [s1 + 0x1c8]\n 28371: a3 = a3 + a1\n 28374: a1 = u64 [s1 + 0x1c8]\n 28378: a1 = a3 <u a1\n 28381: a4 = u64 [s1 + 0x1c0]\n 28385: a4 = a4 + a1\n 28388: u64 [s1 + 0x688] = a2\n 28392: u64 [s1 + 0x680] = a0\n 28396: a0 = u64 [s1 + 0x190]\n 28400: u64 [s1 + 0x6b8] = a0\n 28404: a0 = u64 [s1 + 0x198]\n 28408: u64 [s1 + 0x6b0] = a0\n 28412: a0 = u64 [s1 + 0x180]\n 28416: u64 [s1 + 0x6a8] = a0\n 28420: a0 = u64 [s1 + 0x188]\n 28424: u64 [s1 + 0x6a0] = a0\n 28428: u64 [s1 + 0x690] = a3\n 28432: a0 = s1 + 0x6c0\n 28436: a1 = s1 + 0x6a0\n 28440: a2 = s1 + 0x680\n 28444: u64 [s1 + 0x698] = a4\n 28448: ra = 212, jump @433\n      : @346 [@dyn 106] (gas: 11)\n 28454: a0 = u64 [s1 + 0x1c8]\n 28458: a1 = u64 [s1 + 0x1c0]\n 28462: a1 = a1 | a0\n 28465: a0 = 0xffffffe0\n 28475: a2 = u64 [s1 + 0x1d8]\n 28479: a0 = a2 <u a0\n 28482: a2 = u64 [s1 + 0x1d0]\n 28486: a0 = 0 if a2 != 0\n 28488: u64 [s1 + 0x198] = a1\n 28492: a0 = 0 if a1 != 0\n 28494: jump @348 if a0 != 0\n      : @347 (gas: 1)\n 28497: jump @256\n      : @348 (gas: 12)\n 28500: a0 = u64 [s1 + 0x6d8]\n 28504: u64 [s1 + 0x180] = a0\n 28508: a0 = u64 [s1 + 0x6d0]\n 28512: u64 [s1 + 0x178] = a0\n 28516: a0 = u64 [s1 + 0x6c8]\n 28520: u64 [s1 + 0x188] = a0\n 28524: a0 = u64 [s1 + 0x6c0]\n 28528: u64 [s1 + 0x190] = a0\n 28532: a0 = u64 [s1 + 0x1a0]\n 28536: i32 a0 = a0 + 0x20\n 28539: a1 = 0x20\n 28542: ra = 214, jump @0\n      : @349 [@dyn 107] (gas: 77)\n 28548: a1 = u64 [s1 + 0xc0]\n 28552: a1 = reverse a1\n 28554: a2 = u64 [s1 + 0xc8]\n 28558: a2 = reverse a2\n 28560: a3 = u64 [s1 + 0xd0]\n 28564: a3 = reverse a3\n 28566: a4 = u64 [s1 + 0xd8]\n 28570: a4 = reverse a4\n 28572: a5 = a4 >> 0x38\n 28575: u8 [a0 + 0x1f] = a5\n 28578: a5 = a4 >> 0x30\n 28581: u8 [a0 + 0x1e] = a5\n 28584: a5 = a4 >> 0x28\n 28587: u8 [a0 + 0x1d] = a5\n 28590: a5 = a4 >> 0x20\n 28593: u8 [a0 + 0x1c] = a5\n 28596: a5 = a4 >> 0x18\n 28599: u8 [a0 + 0x1b] = a5\n 28602: a5 = a4 >> 0x10\n 28605: u8 [a0 + 0x1a] = a5\n 28608: a5 = a4 >> 0x8\n 28611: u8 [a0 + 0x19] = a5\n 28614: u8 [a0 + 0x18] = a4\n 28617: u8 [a0 + 0x10] = a3\n 28620: a4 = a3 >> 0x38\n 28623: u8 [a0 + 0x17] = a4\n 28626: a4 = a3 >> 0x30\n 28629: u8 [a0 + 0x16] = a4\n 28632: a4 = a3 >> 0x28\n 28635: u8 [a0 + 0x15] = a4\n 28638: a4 = a3 >> 0x20\n 28641: u8 [a0 + 0x14] = a4\n 28644: a4 = a3 >> 0x18\n 28647: u8 [a0 + 0x13] = a4\n 28650: a4 = a3 >> 0x10\n 28653: u8 [a0 + 0x12] = a4\n 28656: a3 = a3 >> 0x8\n 28659: u8 [a0 + 0x11] = a3\n 28662: u8 [a0 + 0x8] = a2\n 28665: a3 = a2 >> 0x38\n 28668: u8 [a0 + 0xf] = a3\n 28671: a3 = a2 >> 0x30\n 28674: u8 [a0 + 0xe] = a3\n 28677: a3 = a2 >> 0x28\n 28680: u8 [a0 + 0xd] = a3\n 28683: a3 = a2 >> 0x20\n 28686: u8 [a0 + 0xc] = a3\n 28689: a3 = a2 >> 0x18\n 28692: u8 [a0 + 0xb] = a3\n 28695: a3 = a2 >> 0x10\n 28698: u8 [a0 + 0xa] = a3\n 28701: a2 = a2 >> 0x8\n 28704: u8 [a0 + 0x9] = a2\n 28707: u8 [a0] = a1\n 28709: a2 = a1 >> 0x38\n 28712: u8 [a0 + 0x7] = a2\n 28715: a2 = a1 >> 0x30\n 28718: u8 [a0 + 0x6] = a2\n 28721: a2 = a1 >> 0x28\n 28724: u8 [a0 + 0x5] = a2\n 28727: a2 = a1 >> 0x20\n 28730: u8 [a0 + 0x4] = a2\n 28733: a2 = a1 >> 0x18\n 28736: u8 [a0 + 0x3] = a2\n 28739: a2 = a1 >> 0x10\n 28742: u8 [a0 + 0x2] = a2\n 28745: a1 = a1 >> 0x8\n 28748: a4 = 0x100000000\n 28758: a2 = 0xffffffc0\n 28768: a3 = u64 [s1 + 0x1d8]\n 28772: a2 = a3 <u a2\n 28775: a3 = u64 [s1 + 0x1d0]\n 28779: a2 = 0 if a3 != 0\n 28781: a3 = u64 [s1 + 0x198]\n 28785: a2 = 0 if a3 != 0\n 28787: u8 [a0 + 0x1] = a1\n 28790: jump @351 if a2 != 0\n      : @350 (gas: 1)\n 28793: jump @256\n      : @351 (gas: 5)\n 28796: a0 = u64 [s1 + 0x1a0]\n 28800: i32 a0 = a0 + 0x40\n 28803: a1 = 0x20\n 28806: u64 [s1 + 0x170] = a4\n 28810: ra = 216, jump @0\n      : @352 [@dyn 108] (gas: 77)\n 28816: a1 = u64 [s1 + 0x100]\n 28820: a1 = reverse a1\n 28822: a2 = u64 [s1 + 0x108]\n 28826: a2 = reverse a2\n 28828: a3 = u64 [s1 + 0x110]\n 28832: a3 = reverse a3\n 28834: a4 = u64 [s1 + 0x118]\n 28838: a4 = reverse a4\n 28840: a5 = a4 >> 0x38\n 28843: u8 [a0 + 0x1f] = a5\n 28846: a5 = a4 >> 0x30\n 28849: u8 [a0 + 0x1e] = a5\n 28852: a5 = a4 >> 0x28\n 28855: u8 [a0 + 0x1d] = a5\n 28858: a5 = a4 >> 0x20\n 28861: u8 [a0 + 0x1c] = a5\n 28864: a5 = a4 >> 0x18\n 28867: u8 [a0 + 0x1b] = a5\n 28870: a5 = a4 >> 0x10\n 28873: u8 [a0 + 0x1a] = a5\n 28876: a5 = a4 >> 0x8\n 28879: u8 [a0 + 0x19] = a5\n 28882: u8 [a0 + 0x18] = a4\n 28885: u8 [a0 + 0x10] = a3\n 28888: a4 = a3 >> 0x38\n 28891: u8 [a0 + 0x17] = a4\n 28894: a4 = a3 >> 0x30\n 28897: u8 [a0 + 0x16] = a4\n 28900: a4 = a3 >> 0x28\n 28903: u8 [a0 + 0x15] = a4\n 28906: a4 = a3 >> 0x20\n 28909: u8 [a0 + 0x14] = a4\n 28912: a4 = a3 >> 0x18\n 28915: u8 [a0 + 0x13] = a4\n 28918: a4 = a3 >> 0x10\n 28921: u8 [a0 + 0x12] = a4\n 28924: a3 = a3 >> 0x8\n 28927: u8 [a0 + 0x11] = a3\n 28930: u8 [a0 + 0x8] = a2\n 28933: a3 = a2 >> 0x38\n 28936: u8 [a0 + 0xf] = a3\n 28939: a3 = a2 >> 0x30\n 28942: u8 [a0 + 0xe] = a3\n 28945: a3 = a2 >> 0x28\n 28948: u8 [a0 + 0xd] = a3\n 28951: a3 = a2 >> 0x20\n 28954: u8 [a0 + 0xc] = a3\n 28957: a3 = a2 >> 0x18\n 28960: u8 [a0 + 0xb] = a3\n 28963: a3 = a2 >> 0x10\n 28966: u8 [a0 + 0xa] = a3\n 28969: a2 = a2 >> 0x8\n 28972: u8 [a0 + 0x9] = a2\n 28975: u8 [a0] = a1\n 28977: a2 = a1 >> 0x38\n 28980: u8 [a0 + 0x7] = a2\n 28983: a2 = a1 >> 0x30\n 28986: u8 [a0 + 0x6] = a2\n 28989: a2 = a1 >> 0x28\n 28992: u8 [a0 + 0x5] = a2\n 28995: a2 = a1 >> 0x20\n 28998: u8 [a0 + 0x4] = a2\n 29001: a2 = a1 >> 0x18\n 29004: u8 [a0 + 0x3] = a2\n 29007: a2 = a1 >> 0x10\n 29010: u8 [a0 + 0x2] = a2\n 29013: a1 = a1 >> 0x8\n 29016: a2 = u64 [s1 + 0x170]\n 29020: a2 = a2 + 0xffffffffffffffa0\n 29023: a3 = u64 [s1 + 0x1d8]\n 29027: a2 = a3 <u a2\n 29030: a3 = u64 [s1 + 0x1d0]\n 29034: a2 = 0 if a3 != 0\n 29036: a3 = u64 [s1 + 0x198]\n 29040: a2 = 0 if a3 != 0\n 29042: u8 [a0 + 0x1] = a1\n 29045: jump @354 if a2 != 0\n      : @353 (gas: 1)\n 29048: jump @256\n      : @354 (gas: 4)\n 29051: a0 = u64 [s1 + 0x1a0]\n 29055: i32 a0 = a0 + 0x60\n 29058: a1 = 0x20\n 29061: ra = 218, jump @0\n      : @355 [@dyn 109] (gas: 76)\n 29067: a1 = u64 [s1 + 0x140]\n 29071: a1 = reverse a1\n 29073: a2 = u64 [s1 + 0x148]\n 29077: a2 = reverse a2\n 29079: a3 = u64 [s1 + 0x150]\n 29083: a3 = reverse a3\n 29085: a4 = u64 [s1 + 0x158]\n 29089: a4 = reverse a4\n 29091: a5 = a4 >> 0x38\n 29094: u8 [a0 + 0x1f] = a5\n 29097: a5 = a4 >> 0x30\n 29100: u8 [a0 + 0x1e] = a5\n 29103: a5 = a4 >> 0x28\n 29106: u8 [a0 + 0x1d] = a5\n 29109: a5 = a4 >> 0x20\n 29112: u8 [a0 + 0x1c] = a5\n 29115: a5 = a4 >> 0x18\n 29118: u8 [a0 + 0x1b] = a5\n 29121: a5 = a4 >> 0x10\n 29124: u8 [a0 + 0x1a] = a5\n 29127: a5 = a4 >> 0x8\n 29130: u8 [a0 + 0x19] = a5\n 29133: u8 [a0 + 0x18] = a4\n 29136: u8 [a0 + 0x10] = a3\n 29139: a4 = a3 >> 0x38\n 29142: u8 [a0 + 0x17] = a4\n 29145: a4 = a3 >> 0x30\n 29148: u8 [a0 + 0x16] = a4\n 29151: a4 = a3 >> 0x28\n 29154: u8 [a0 + 0x15] = a4\n 29157: a4 = a3 >> 0x20\n 29160: u8 [a0 + 0x14] = a4\n 29163: a4 = a3 >> 0x18\n 29166: u8 [a0 + 0x13] = a4\n 29169: a4 = a3 >> 0x10\n 29172: u8 [a0 + 0x12] = a4\n 29175: a3 = a3 >> 0x8\n 29178: u8 [a0 + 0x11] = a3\n 29181: u8 [a0 + 0x8] = a2\n 29184: a3 = a2 >> 0x38\n 29187: u8 [a0 + 0xf] = a3\n 29190: a3 = a2 >> 0x30\n 29193: u8 [a0 + 0xe] = a3\n 29196: a3 = a2 >> 0x28\n 29199: u8 [a0 + 0xd] = a3\n 29202: a3 = a2 >> 0x20\n 29205: u8 [a0 + 0xc] = a3\n 29208: a3 = a2 >> 0x18\n 29211: u8 [a0 + 0xb] = a3\n 29214: a3 = a2 >> 0x10\n 29217: u8 [a0 + 0xa] = a3\n 29220: a2 = a2 >> 0x8\n 29223: u8 [a0 + 0x9] = a2\n 29226: u8 [a0] = a1\n 29228: a2 = a1 >> 0x38\n 29231: u8 [a0 + 0x7] = a2\n 29234: a2 = a1 >> 0x30\n 29237: u8 [a0 + 0x6] = a2\n 29240: a2 = a1 >> 0x28\n 29243: u8 [a0 + 0x5] = a2\n 29246: a2 = a1 >> 0x20\n 29249: u8 [a0 + 0x4] = a2\n 29252: a2 = a1 >> 0x18\n 29255: u8 [a0 + 0x3] = a2\n 29258: a2 = a1 >> 0x10\n 29261: u8 [a0 + 0x2] = a2\n 29264: a1 = a1 >> 0x8\n 29267: a2 = 0xffffff80\n 29277: a3 = u64 [s1 + 0x1d8]\n 29281: a2 = a3 <u a2\n 29284: a3 = u64 [s1 + 0x1d0]\n 29288: a2 = 0 if a3 != 0\n 29290: a3 = u64 [s1 + 0x198]\n 29294: a2 = 0 if a3 != 0\n 29296: u8 [a0 + 0x1] = a1\n 29299: jump @357 if a2 != 0\n      : @356 (gas: 1)\n 29302: jump @256\n      : @357 (gas: 4)\n 29305: a0 = u64 [s1 + 0x1a0]\n 29309: i32 a0 = a0 + 0x80\n 29313: a1 = 0x20\n 29316: ra = 220, jump @0\n      : @358 [@dyn 110] (gas: 102)\n 29322: a1 = u64 [s1 + 0x120]\n 29326: a1 = reverse a1\n 29328: a2 = a1 >> 0x38\n 29331: u8 [a0 + 0x1f] = a2\n 29334: a2 = a1 >> 0x30\n 29337: u8 [a0 + 0x1e] = a2\n 29340: a2 = a1 >> 0x28\n 29343: u8 [a0 + 0x1d] = a2\n 29346: a2 = a1 >> 0x20\n 29349: u8 [a0 + 0x1c] = a2\n 29352: a2 = a1 >> 0x18\n 29355: u8 [a0 + 0x1b] = a2\n 29358: a2 = a1 >> 0x10\n 29361: u8 [a0 + 0x1a] = a2\n 29364: a2 = a1 >> 0x8\n 29367: u8 [a0 + 0x19] = a2\n 29370: u8 [a0 + 0x18] = a1\n 29373: a1 = u64 [s1 + 0x128]\n 29377: a1 = reverse a1\n 29379: a2 = a1 >> 0x38\n 29382: u8 [a0 + 0x17] = a2\n 29385: a2 = a1 >> 0x30\n 29388: u8 [a0 + 0x16] = a2\n 29391: a2 = a1 >> 0x28\n 29394: u8 [a0 + 0x15] = a2\n 29397: a2 = a1 >> 0x20\n 29400: u8 [a0 + 0x14] = a2\n 29403: a2 = a1 >> 0x18\n 29406: u8 [a0 + 0x13] = a2\n 29409: a2 = a1 >> 0x10\n 29412: u8 [a0 + 0x12] = a2\n 29415: u8 [a0 + 0x10] = a1\n 29418: a1 = a1 >> 0x8\n 29421: u8 [a0 + 0x11] = a1\n 29424: a1 = u64 [s1 + 0x130]\n 29428: a1 = reverse a1\n 29430: a2 = a1 >> 0x38\n 29433: u8 [a0 + 0xf] = a2\n 29436: a2 = a1 >> 0x30\n 29439: u8 [a0 + 0xe] = a2\n 29442: a2 = a1 >> 0x28\n 29445: u8 [a0 + 0xd] = a2\n 29448: a2 = a1 >> 0x20\n 29451: u8 [a0 + 0xc] = a2\n 29454: a2 = a1 >> 0x18\n 29457: u8 [a0 + 0xb] = a2\n 29460: a2 = a1 >> 0x10\n 29463: u8 [a0 + 0xa] = a2\n 29466: u8 [a0 + 0x8] = a1\n 29469: a1 = a1 >> 0x8\n 29472: u8 [a0 + 0x9] = a1\n 29475: a1 = u64 [s1 + 0x138]\n 29479: a2 = reverse a1\n 29481: a1 = a2 >> 0x38\n 29484: u8 [a0 + 0x7] = a1\n 29487: a1 = a2 >> 0x30\n 29490: u8 [a0 + 0x6] = a1\n 29493: a1 = a2 >> 0x28\n 29496: u8 [a0 + 0x5] = a1\n 29499: a1 = a2 >> 0x20\n 29502: u8 [a0 + 0x4] = a1\n 29505: a1 = a2 >> 0x18\n 29508: u8 [a0 + 0x3] = a1\n 29511: a1 = a2 >> 0x10\n 29514: u8 [a0 + 0x2] = a1\n 29517: a1 = u64 [s1 + 0x1d8]\n 29521: a3 = u64 [s1 + 0x190]\n 29525: ra = a3 <u a1\n 29528: t0 = u64 [s1 + 0x1d0]\n 29532: a3 = u64 [s1 + 0x188]\n 29536: a5 = a3 ^ t0\n 29539: a4 = a3 <u t0\n 29542: a4 = ra if a5 == 0\n 29545: t1 = u64 [s1 + 0x1c8]\n 29549: a5 = u64 [s1 + 0x178]\n 29553: t2 = a5 - t1\n 29556: a1 = a5 <u t1\n 29559: u64 [s1 + 0x1c8] = a1\n 29563: a5 = u64 [s1 + 0x1c0]\n 29567: t1 = u64 [s1 + 0x180]\n 29571: a5 = t1 - a5\n 29574: a1 = u64 [s1 + 0x1c8]\n 29578: a1 = a5 - a1\n 29581: a5 = t2 <u a4\n 29584: a5 = a1 - a5\n 29587: t1 = t2 - a4\n 29590: a4 = a3 - t0\n 29593: a4 = a4 - ra\n 29596: a1 = u64 [s1 + 0x1d8]\n 29600: a3 = u64 [s1 + 0x190]\n 29604: a1 = a3 - a1\n 29607: a4 = a4 | a5\n 29610: a5 = a1 | t1\n 29613: a5 = a5 | a4\n 29616: a3 = a4 | t1\n 29619: a5 = a5 >> 0x20\n 29622: a3 = a3 << 0x20\n 29625: a3 = a3 | a5\n 29628: u8 [a0] = a2\n 29630: a2 = a2 >> 0x8\n 29633: u8 [a0 + 0x1] = a2\n 29636: jump @360 if a3 == 0\n      : @359 (gas: 1)\n 29639: jump @256\n      : @360 (gas: 33)\n 29642: a0 = 0xffffffff\n 29652: a2 = u64 [s1 + 0x1a8]\n 29656: t0 = a2 & a0\n 29659: a2 = u64 [s1 + 0x1b0]\n 29663: a2 = a2 & 0xffffffffffffffff\n 29666: a0 = u64 [s1 + 0x1b8]\n 29670: a3 = a0 & 0xffffffffffffffff\n 29673: u64 [s1 + 1592] = 0\n 29677: a0 = u64 [s1 + 0x60]\n 29680: u64 [s1 + 0x640] = a0\n 29684: u64 [s1 + 0x620] = a3\n 29688: a0 = u64 [s1 + 0x68]\n 29691: u64 [s1 + 0x648] = a0\n 29695: a3 = u64 [0x20000]\n 29700: a4 = u64 [0x20008]\n 29705: a5 = u64 [0x20010]\n 29710: a0 = u64 [0x20018]\n 29715: u64 [s1 + 0x678] = a3\n 29719: u64 [s1 + 0x670] = a4\n 29723: u64 [s1 + 0x668] = a5\n 29727: u64 [s1 + 0x660] = a0\n 29731: u64 [s1 + 0x628] = a2\n 29735: a0 = u64 [s1 + 0x70]\n 29738: u64 [s1 + 0x650] = a0\n 29742: u64 [s1 + 0x630] = t0\n 29746: a2 = s1 + 0x660\n 29750: a3 = s1 + 0x640\n 29754: a4 = s1 + 0x620\n 29758: a0 = u64 [s1 + 0x78]\n 29761: u64 [s1 + 0x658] = a0\n 29765: a0 = u64 [s1 + 0x1a0]\n 29769: ra = 0x7a\n 29772: jump @27\n      : @361 (gas: 4)\n 29775: a0 = 0\n 29777: a1 = 0\n 29779: ra = 0xde\n 29783: jump @0\n      : @362 (gas: 2)\n 29786: a1 = 0\n 29788: ra = 222, jump @0\n      : @363 [@dyn 111] (gas: 7)\n 29794: i32 a1 = a0 + 0\n 29796: a0 = 0x1\n 29799: a2 = 0\n 29801: ecalli 13 // 'seal_return'\n 29803: a0 = 0\n 29805: ra = 0xde\n 29809: jump @0\n      : @364 (gas: 3)\n 29812: a0 = 0\n 29814: ra = 0xde\n 29818: jump @0\n      : @365 (gas: 8)\n 29821: u64 [s1 + 1488] = 0\n 29825: u64 [s1 + 1480] = 0\n 29829: u64 [s1 + 1472] = 0\n 29833: a0 = 0x4e487b7100000000\n 29843: a1 = s1 + 0x5c0\n 29847: u64 [s1 + 0x5d8] = a0\n 29851: a0 = 0\n 29853: ra = 224, jump @23\n      : @366 [@dyn 112] (gas: 8)\n 29859: u64 [s1 + 1464] = 0\n 29863: u64 [s1 + 1456] = 0\n 29867: u64 [s1 + 1440] = 0x41\n 29872: a0 = 0x4\n 29875: a1 = s1 + 0x5a0\n 29879: u64 [s1 + 1448] = 0\n 29883: ra = 0xee\n 29887: jump @23\n      : @367 (gas: 9)\n 29890: u64 [s1 + 1008] = 0\n 29894: u64 [s1 + 1000] = 0\n 29898: u64 [s1 + 992] = 0\n 29902: a0 = 0x30cd747100000000\n 29912: a1 = s1 + 0x3e0\n 29916: u64 [s1 + 0x3f8] = a0\n 29920: a0 = 0\n 29922: ra = 0xe4\n 29926: jump @23\n      : @368 (gas: 9)\n 29929: u64 [s1 + 848] = 0\n 29933: u64 [s1 + 840] = 0\n 29937: u64 [s1 + 832] = 0\n 29941: a0 = 0x6806da6800000000\n 29951: a1 = s1 + 0x340\n 29955: u64 [s1 + 0x358] = a0\n 29959: a0 = 0\n 29961: ra = 0xe4\n 29965: jump @23\n      : @369 (gas: 8)\n 29968: u64 [s1 + 1424] = 0\n 29972: u64 [s1 + 1416] = 0\n 29976: u64 [s1 + 1408] = 0\n 29980: a0 = 0x4e487b7100000000\n 29990: a1 = s1 + 0x580\n 29994: u64 [s1 + 0x598] = a0\n 29998: a0 = 0\n 30000: ra = 226, jump @23\n      : @370 [@dyn 113] (gas: 8)\n 30006: u64 [s1 + 1400] = 0\n 30010: u64 [s1 + 1392] = 0\n 30014: u64 [s1 + 1376] = 0x41\n 30019: a0 = 0x4\n 30022: a1 = s1 + 0x560\n 30026: u64 [s1 + 1384] = 0\n 30030: ra = 0xee\n 30034: jump @23\n      : @371 (gas: 9)\n 30037: u64 [s1 + 1040] = 0\n 30041: u64 [s1 + 1032] = 0\n 30045: u64 [s1 + 1024] = 0\n 30049: a0 = 0xb7b2409700000000\n 30059: a1 = s1 + 0x400\n 30063: u64 [s1 + 0x418] = a0\n 30067: a0 = 0\n 30069: ra = 0xe4\n 30073: jump @23\n      : @372 (gas: 9)\n 30076: u64 [s1 + 1328] = 0\n 30080: u64 [s1 + 1320] = 0\n 30084: u64 [s1 + 1312] = 0\n 30088: a0 = 0xbd8a3eb00000000\n 30098: a1 = s1 + 0x520\n 30102: u64 [s1 + 0x538] = a0\n 30106: a0 = 0\n 30108: ra = 0xe4\n 30112: jump @23\n      : @373 (gas: 9)\n 30115: u64 [s1 + 1296] = 0\n 30119: u64 [s1 + 1288] = 0\n 30123: u64 [s1 + 1280] = 0\n 30127: a0 = 0x52df9fe500000000\n 30137: a1 = s1 + 0x500\n 30141: u64 [s1 + 0x518] = a0\n 30145: a0 = 0\n 30147: ra = 0xe4\n 30151: jump @23\n      : @374 (gas: 9)\n 30154: u64 [s1 + 1264] = 0\n 30158: u64 [s1 + 1256] = 0\n 30162: u64 [s1 + 1248] = 0\n 30166: a0 = 0xcd1c886700000000\n 30176: a1 = s1 + 0x4e0\n 30180: u64 [s1 + 0x4f8] = a0\n 30184: a0 = 0\n 30186: ra = 0xe4\n 30190: jump @23\n      : @375 (gas: 8)\n 30193: u64 [s1 + 1232] = 0\n 30197: u64 [s1 + 1224] = 0\n 30201: u64 [s1 + 1216] = 0\n 30205: a0 = 0x1a43bf6300000000\n 30215: a1 = s1 + 0x4c0\n 30219: u64 [s1 + 0x4d8] = a0\n 30223: a0 = 0\n 30225: ra = 228, jump @23\n      : @376 [@dyn 114] (gas: 3)\n 30231: a1 = 0x4\n 30234: a0 = 0\n 30236: ra = 230, jump @0\n      : @377 [@dyn 115] (gas: 5)\n 30242: i32 a1 = a0 + 0\n 30244: a0 = 0x1\n 30247: a2 = 0x4\n 30250: ecalli 13 // 'seal_return'\n 30252: fallthrough\n      : @378 (gas: 8)\n 30253: u64 [s1 + 1104] = 0\n 30257: u64 [s1 + 1096] = 0\n 30261: u64 [s1 + 1088] = 0\n 30265: a0 = 0x4e487b7100000000\n 30275: a1 = s1 + 0x440\n 30279: u64 [s1 + 0x458] = a0\n 30283: a0 = 0\n 30285: ra = 232, jump @23\n      : @379 [@dyn 116] (gas: 8)\n 30291: u64 [s1 + 1080] = 0\n 30295: u64 [s1 + 1072] = 0\n 30299: u64 [s1 + 1056] = 0x11\n 30304: a0 = 0x4\n 30307: a1 = s1 + 0x420\n 30311: u64 [s1 + 1064] = 0\n 30315: ra = 0xee\n 30319: jump @23\n      : @380 (gas: 4)\n 30322: i32 a0 = a2 + 0\n 30324: i32 a1 = a1 + 0\n 30326: u64 [s1 + 0x1d8] = a1\n 30330: ra = 234, jump @0\n      : @381 [@dyn 117] (gas: 5)\n 30336: i32 a1 = a0 + 0\n 30338: a0 = 0\n 30340: a2 = u64 [s1 + 0x1d8]\n 30344: ecalli 13 // 'seal_return'\n 30346: fallthrough\n      : @382 (gas: 8)\n 30347: u64 [s1 + 976] = 0\n 30351: u64 [s1 + 968] = 0\n 30355: u64 [s1 + 960] = 0\n 30359: a0 = 0x4e487b7100000000\n 30369: a1 = s1 + 0x3c0\n 30373: u64 [s1 + 0x3d8] = a0\n 30377: a0 = 0\n 30379: ra = 236, jump @23\n      : @383 [@dyn 118] (gas: 7)\n 30385: u64 [s1 + 952] = 0\n 30389: u64 [s1 + 944] = 0\n 30393: u64 [s1 + 928] = 0x41\n 30398: a0 = 0x4\n 30401: a1 = s1 + 0x3a0\n 30405: u64 [s1 + 936] = 0\n 30409: ra = 238, jump @23\n      : @384 [@dyn 119] (gas: 3)\n 30415: a1 = 0x24\n 30418: a0 = 0\n 30420: ra = 240, jump @0\n      : @385 [@dyn 120] (gas: 5)\n 30426: i32 a1 = a0 + 0\n 30428: a0 = 0x1\n 30431: a2 = 0x24\n 30434: ecalli 13 // 'seal_return'\n 30436: fallthrough\n      : @386 (gas: 14)\n 30437: a0 = s1 + 0x1000\n 30441: u64 [a0 + 4294965552] = 0\n 30445: a0 = s1 + 0x1000\n 30449: u64 [a0 + 4294965544] = 0\n 30453: a0 = s1 + 0x1000\n 30457: u64 [a0 + 4294965536] = 0\n 30461: a0 = 0x30cd747100000000\n 30471: a1 = s1 + 0x7ff\n 30475: a1 = a1 + 0x121\n 30479: a2 = s1 + 0x1000\n 30483: u64 [a2 + 0xfffffffffffff938] = a0\n 30487: a0 = 0\n 30489: ra = 0xe4\n 30493: jump @23\n      : @387 (gas: 8)\n 30496: u64 [s1 + 1552] = 0\n 30500: u64 [s1 + 1544] = 0\n 30504: u64 [s1 + 1536] = 0\n 30508: a0 = 0x4e487b7100000000\n 30518: a1 = s1 + 0x600\n 30522: u64 [s1 + 0x618] = a0\n 30526: a0 = 0\n 30528: ra = 242, jump @23\n      : @388 [@dyn 121] (gas: 8)\n 30534: u64 [s1 + 1528] = 0\n 30538: u64 [s1 + 1520] = 0\n 30542: u64 [s1 + 1504] = 0x41\n 30547: a0 = 0x4\n 30550: a1 = s1 + 0x5e0\n 30554: u64 [s1 + 1512] = 0\n 30558: ra = 0xee\n 30562: jump @23\n      : @389 (gas: 33)\n 30565: sp = sp + 0xffffffffffffffa0\n 30568: u64 [sp + 0x58] = ra\n 30571: u64 [sp + 0x50] = s0\n 30574: u64 [sp + 0x48] = s1\n 30577: s0 = sp + 0x60\n 30580: sp = sp & 0xfffffffffffffff0\n 30583: a2 = u64 [a1 + 0x10]\n 30586: a5 = u64 [a1 + 0x8]\n 30589: a4 = u64 [a1]\n 30591: a1 = u64 [a1 + 0x18]\n 30594: t0 = a2 << 0x3f\n 30597: a3 = a5 >> 0x1\n 30600: t0 = a3 | t0\n 30603: a3 = a1 << 0x3f\n 30606: a2 = a2 >> 0x1\n 30609: a3 = a3 | a2\n 30612: a5 = a5 << 0x3f\n 30615: a2 = a4 >> 0x1\n 30618: a5 = a5 | a2\n 30621: t1 = a1 >> 0x1\n 30624: a4 = a4 & 0x1\n 30627: a1 = -a4\n 30629: s1 = a4 <u 0x1\n 30632: a2 = a5 & 0x7f\n 30635: t2 = a1 & a3\n 30638: a3 = a1 & t0\n 30641: a2 = a5 if a4 != 0\n 30644: a4 = a1 & t1\n 30647: a1 = a2 <u 0x20\n 30650: a1 = 0 if a3 != 0\n 30652: a5 = t2 | a4\n 30655: a1 = 0 if a5 != 0\n 30657: jump @391 if s1 != a1\n      : @390 (gas: 10)\n 30660: u64 [a0] = a2\n 30662: u64 [a0 + 0x8] = a3\n 30665: u64 [a0 + 0x10] = t2\n 30668: u64 [a0 + 0x18] = a4\n 30671: sp = s0 + 0xffffffffffffffa0\n 30674: ra = u64 [sp + 0x58]\n 30677: s0 = u64 [sp + 0x50]\n 30680: s1 = u64 [sp + 0x48]\n 30683: sp = sp + 0x60\n 30686: ret\n      : @391 (gas: 8)\n 30688: u64 [sp + 48] = 0\n 30691: u64 [sp + 40] = 0\n 30694: u64 [sp + 32] = 0\n 30697: a0 = 0x4e487b7100000000\n 30707: a1 = sp + 0x20\n 30710: u64 [sp + 0x38] = a0\n 30713: a0 = 0\n 30715: ra = 244, jump @23\n      : @392 [@dyn 122] (gas: 7)\n 30721: u64 [sp + 24] = 0\n 30724: u64 [sp + 16] = 0\n 30727: u64 [sp + 0] = 0x22\n 30730: a0 = 0x4\n 30733: a1 = sp\n 30735: u64 [sp + 8] = 0\n 30738: ra = 246, jump @23\n      : @393 [@dyn 123] (gas: 3)\n 30744: a1 = 0x24\n 30747: a0 = 0\n 30749: ra = 248, jump @0\n      : @394 [@dyn 124] (gas: 6)\n 30755: i32 a1 = a0 + 0\n 30757: a0 = 0x1\n 30760: a2 = 0x24\n 30763: ra = 0xfa\n 30767: ecalli 13 // 'seal_return'\n 30769: fallthrough\n      : @395 [@dyn 125] (gas: 45)\n 30770: sp = sp + 0xffffffffffffff80\n 30773: u64 [sp + 0x78] = ra\n 30776: u64 [sp + 0x70] = s0\n 30779: u64 [sp + 0x68] = s1\n 30782: s0 = sp + 0x80\n 30786: sp = sp & 0xfffffffffffffff0\n 30789: a4 = u64 [a1]\n 30791: t1 = u64 [a0 + 0x8]\n 30794: a5 = u64 [a1 + 0x8]\n 30797: ra = u64 [a0]\n 30799: s1 = a4 + 0x1f\n 30802: t2 = s1 <u a4\n 30805: a2 = a5 + t2\n 30808: s1 = s1 & 0xffffffffffffffe0\n 30811: u64 [sp + 0x18] = ra\n 30814: ra = ra + s1\n 30817: a4 = ra <u s1\n 30820: a3 = a2 + t1\n 30823: t0 = a3 + a4\n 30826: a3 = t0 ^ a2\n 30829: s1 = t0 <u a2\n 30832: s1 = a4 if a3 == 0\n 30835: a4 = u64 [a0 + 0x18]\n 30838: a2 = a2 <u a5\n 30841: a3 = u64 [a1 + 0x10]\n 30844: a0 = u64 [a0 + 0x10]\n 30847: a1 = u64 [a1 + 0x18]\n 30850: a2 = t2 if t2 == 0\n 30853: a2 = a2 + a3\n 30856: a3 = a2 <u a3\n 30859: a5 = a2 + a0\n 30862: t2 = a5 + s1\n 30865: a2 = a5 <u a2\n 30868: s1 = t2 <u a5\n 30871: a1 = a1 + a4\n 30874: a1 = a1 + a3\n 30877: a1 = a1 + a2\n 30880: s1 = s1 + a1\n 30883: a1 = s1 >u 0\n 30885: a2 = t2 >u 0\n 30887: a2 = a1 if s1 != 0\n 30890: a1 = t2 | s1\n 30893: a3 = t0 >u 0\n 30895: a3 = a2 if a1 != 0\n 30898: jump @399 if a3 != 0\n      : @396 (gas: 13)\n 30902: a1 = u64 [sp + 0x18]\n 30905: a1 = ra <u a1\n 30908: a2 = t0 ^ t1\n 30911: a3 = t0 <u t1\n 30914: a3 = a1 if a2 == 0\n 30917: a1 = t2 <u a0\n 30920: a2 = s1 ^ a4\n 30923: a4 = s1 <u a4\n 30926: a4 = a1 if a2 == 0\n 30929: a0 = t2 ^ a0\n 30932: a0 = a0 | a2\n 30935: a4 = a3 if a0 == 0\n 30938: jump @399 if a4 != 0\n      : @397 (gas: 6)\n 30942: a0 = 0x40\n 30945: a1 = 0x20\n 30948: u64 [sp + 0x18] = ra\n 30951: u64 [sp + 0x10] = t0\n 30954: u64 [sp + 0x8] = t2\n 30957: ra = 252, jump @0\n      : @398 [@dyn 126] (gas: 73)\n 30963: a1 = reverse s1\n 30965: a2 = u64 [sp + 0x8]\n 30968: a2 = reverse a2\n 30970: a3 = u64 [sp + 0x10]\n 30973: a3 = reverse a3\n 30975: a4 = u64 [sp + 0x18]\n 30978: a4 = reverse a4\n 30980: u8 [a0 + 0x18] = a4\n 30983: a5 = a4 >> 0x38\n 30986: u8 [a0 + 0x1f] = a5\n 30989: a5 = a4 >> 0x30\n 30992: u8 [a0 + 0x1e] = a5\n 30995: a5 = a4 >> 0x28\n 30998: u8 [a0 + 0x1d] = a5\n 31001: a5 = a4 >> 0x20\n 31004: u8 [a0 + 0x1c] = a5\n 31007: a5 = a4 >> 0x18\n 31010: u8 [a0 + 0x1b] = a5\n 31013: a5 = a4 >> 0x10\n 31016: u8 [a0 + 0x1a] = a5\n 31019: a4 = a4 >> 0x8\n 31022: u8 [a0 + 0x19] = a4\n 31025: u8 [a0 + 0x10] = a3\n 31028: a4 = a3 >> 0x38\n 31031: u8 [a0 + 0x17] = a4\n 31034: a4 = a3 >> 0x30\n 31037: u8 [a0 + 0x16] = a4\n 31040: a4 = a3 >> 0x28\n 31043: u8 [a0 + 0x15] = a4\n 31046: a4 = a3 >> 0x20\n 31049: u8 [a0 + 0x14] = a4\n 31052: a4 = a3 >> 0x18\n 31055: u8 [a0 + 0x13] = a4\n 31058: a4 = a3 >> 0x10\n 31061: u8 [a0 + 0x12] = a4\n 31064: a3 = a3 >> 0x8\n 31067: u8 [a0 + 0x11] = a3\n 31070: u8 [a0 + 0x8] = a2\n 31073: a3 = a2 >> 0x38\n 31076: u8 [a0 + 0xf] = a3\n 31079: a3 = a2 >> 0x30\n 31082: u8 [a0 + 0xe] = a3\n 31085: a3 = a2 >> 0x28\n 31088: u8 [a0 + 0xd] = a3\n 31091: a3 = a2 >> 0x20\n 31094: u8 [a0 + 0xc] = a3\n 31097: a3 = a2 >> 0x18\n 31100: u8 [a0 + 0xb] = a3\n 31103: a3 = a2 >> 0x10\n 31106: u8 [a0 + 0xa] = a3\n 31109: a2 = a2 >> 0x8\n 31112: u8 [a0 + 0x9] = a2\n 31115: u8 [a0] = a1\n 31117: a2 = a1 >> 0x38\n 31120: u8 [a0 + 0x7] = a2\n 31123: a2 = a1 >> 0x30\n 31126: u8 [a0 + 0x6] = a2\n 31129: a2 = a1 >> 0x28\n 31132: u8 [a0 + 0x5] = a2\n 31135: a2 = a1 >> 0x20\n 31138: u8 [a0 + 0x4] = a2\n 31141: a2 = a1 >> 0x18\n 31144: u8 [a0 + 0x3] = a2\n 31147: a2 = a1 >> 0x10\n 31150: u8 [a0 + 0x2] = a2\n 31153: a1 = a1 >> 0x8\n 31156: u8 [a0 + 0x1] = a1\n 31159: sp = s0 + 0xffffffffffffff80\n 31162: ra = u64 [sp + 0x78]\n 31165: s0 = u64 [sp + 0x70]\n 31168: s1 = u64 [sp + 0x68]\n 31171: sp = sp + 0x80\n 31175: ret\n      : @399 (gas: 8)\n 31177: u64 [sp + 80] = 0\n 31180: u64 [sp + 72] = 0\n 31183: u64 [sp + 64] = 0\n 31186: a0 = 0x4e487b7100000000\n 31196: a1 = sp + 0x40\n 31199: u64 [sp + 0x58] = a0\n 31202: a0 = 0\n 31204: ra = 254, jump @23\n      : @400 [@dyn 127] (gas: 7)\n 31210: u64 [sp + 56] = 0\n 31213: u64 [sp + 48] = 0\n 31216: u64 [sp + 32] = 0x41\n 31220: a0 = 0x4\n 31223: a1 = sp + 0x20\n 31226: u64 [sp + 40] = 0\n 31229: ra = 256, jump @23\n      : @401 [@dyn 128] (gas: 3)\n 31235: a1 = 0x24\n 31238: a0 = 0\n 31240: ra = 258, jump @0\n      : @402 [@dyn 129] (gas: 6)\n 31246: i32 a1 = a0 + 0\n 31248: a0 = 0x1\n 31251: a2 = 0x24\n 31254: ra = 0x104\n 31258: ecalli 13 // 'seal_return'\n 31260: fallthrough\n      : @403 [@dyn 130] (gas: 19)\n 31261: sp = sp + 0xfffffffffffffda0\n 31265: u64 [sp + 0x258] = ra\n 31269: u64 [sp + 0x250] = s0\n 31273: u64 [sp + 0x248] = s1\n 31277: s0 = sp + 0x260\n 31281: sp = sp & 0xffffffffffffffe0\n 31284: s1 = sp\n 31286: a2 = u64 [a1]\n 31288: u64 [s1 + 0x178] = a2\n 31292: a2 = u64 [a1 + 0x8]\n 31295: u64 [s1 + 0x170] = a2\n 31299: a2 = u64 [a1 + 0x10]\n 31302: u64 [s1 + 0x168] = a2\n 31306: a1 = u64 [a1 + 0x18]\n 31309: u64 [s1 + 0x160] = a1\n 31313: u64 [s1 + 0x10] = a0\n 31316: a0 = 0x40\n 31319: a1 = 0x20\n 31322: ra = 262, jump @0\n      : @404 [@dyn 131] (gas: 84)\n 31328: a1 = u8 [a0 + 0x18]\n 31331: u64 [s1 + 0x60] = a1\n 31334: a1 = u8 [a0 + 0x19]\n 31337: u64 [s1 + 0x40] = a1\n 31340: a1 = u8 [a0 + 0x1a]\n 31343: u64 [s1 + 0x50] = a1\n 31346: a1 = u8 [a0 + 0x1b]\n 31349: u64 [s1 + 0x48] = a1\n 31352: a1 = u8 [a0 + 0x1c]\n 31355: u64 [s1 + 0x78] = a1\n 31358: a1 = u8 [a0 + 0x1d]\n 31361: u64 [s1 + 0x58] = a1\n 31364: a1 = u8 [a0 + 0x1e]\n 31367: u64 [s1 + 0x70] = a1\n 31370: a1 = u8 [a0 + 0x1f]\n 31373: u64 [s1 + 0x68] = a1\n 31376: a1 = u8 [a0 + 0x10]\n 31379: u64 [s1 + 0xa0] = a1\n 31383: a1 = u8 [a0 + 0x11]\n 31386: u64 [s1 + 0x80] = a1\n 31390: a1 = u8 [a0 + 0x12]\n 31393: u64 [s1 + 0x90] = a1\n 31397: a1 = u8 [a0 + 0x13]\n 31400: u64 [s1 + 0x88] = a1\n 31404: a1 = u8 [a0 + 0x14]\n 31407: u64 [s1 + 0xb8] = a1\n 31411: a1 = u8 [a0 + 0x15]\n 31414: u64 [s1 + 0x98] = a1\n 31418: a1 = u8 [a0 + 0x16]\n 31421: u64 [s1 + 0xb0] = a1\n 31425: a1 = u8 [a0 + 0x17]\n 31428: u64 [s1 + 0xa8] = a1\n 31432: a1 = u8 [a0 + 0x8]\n 31435: u64 [s1 + 0xe0] = a1\n 31439: a1 = u8 [a0 + 0x9]\n 31442: u64 [s1 + 0xc0] = a1\n 31446: a1 = u8 [a0 + 0xa]\n 31449: u64 [s1 + 0xd0] = a1\n 31453: a1 = u8 [a0 + 0xb]\n 31456: u64 [s1 + 0xc8] = a1\n 31460: a1 = u8 [a0 + 0xc]\n 31463: u64 [s1 + 0xf8] = a1\n 31467: a1 = u8 [a0 + 0xd]\n 31470: u64 [s1 + 0xd8] = a1\n 31474: a1 = u8 [a0 + 0xe]\n 31477: u64 [s1 + 0xf0] = a1\n 31481: a1 = u8 [a0 + 0xf]\n 31484: u64 [s1 + 0xe8] = a1\n 31488: a1 = u8 [a0]\n 31490: u64 [s1 + 0x140] = a1\n 31494: a1 = u8 [a0 + 0x1]\n 31497: u64 [s1 + 0x120] = a1\n 31501: a1 = u8 [a0 + 0x2]\n 31504: u64 [s1 + 0x130] = a1\n 31508: a1 = u8 [a0 + 0x3]\n 31511: u64 [s1 + 0x128] = a1\n 31515: a1 = u8 [a0 + 0x4]\n 31518: u64 [s1 + 0x158] = a1\n 31522: a1 = u8 [a0 + 0x5]\n 31525: u64 [s1 + 0x138] = a1\n 31529: a1 = u8 [a0 + 0x6]\n 31532: u64 [s1 + 0x150] = a1\n 31536: a0 = u8 [a0 + 0x7]\n 31539: u64 [s1 + 0x148] = a0\n 31543: u32 [s1 + 576] = 0x20\n 31548: a0 = u64 [s1 + 0x160]\n 31552: u64 [s1 + 0x218] = a0\n 31556: a0 = u64 [s1 + 0x168]\n 31560: u64 [s1 + 0x210] = a0\n 31564: a0 = u64 [s1 + 0x170]\n 31568: u64 [s1 + 0x208] = a0\n 31572: a0 = u64 [s1 + 0x178]\n 31576: u64 [s1 + 0x200] = a0\n 31580: u64 [s1 + 568] = 0\n 31584: u64 [s1 + 560] = 0\n 31588: u64 [s1 + 552] = 0\n 31592: u64 [s1 + 544] = 0\n 31596: i32 a1 = s1 + 0x200\n 31600: i32 a3 = s1 + 0x220\n 31604: i32 a4 = s1 + 0x240\n 31608: a2 = 0xffffffffffffffff\n 31611: a0 = 0\n 31613: ecalli 7 // 'get_storage'\n 31615: fallthrough\n      : @405 (gas: 32)\n 31616: t1 = u64 [s1 + 0x230]\n 31620: t2 = u64 [s1 + 0x228]\n 31624: t0 = u64 [s1 + 0x238]\n 31628: a5 = u64 [s1 + 0x220]\n 31632: a0 = t1 << 0x3f\n 31635: a1 = t2 >> 0x1\n 31638: a0 = a0 | a1\n 31641: a1 = t0 << 0x3f\n 31644: a2 = t1 >> 0x1\n 31647: a1 = a1 | a2\n 31650: a2 = t2 << 0x3f\n 31653: a3 = a5 >> 0x1\n 31656: a4 = a3 | a2\n 31659: a2 = t0 >> 0x1\n 31662: u64 [s1 + 0x18] = a5\n 31665: a5 = a5 & 0x1\n 31668: a3 = -a5\n 31670: ra = a3 & a1\n 31673: a1 = a3 & a0\n 31676: a2 = a2 & a3\n 31679: a3 = a4 & 0x7f\n 31682: a4 = a3 if a5 == 0\n 31685: u64 [s1 + 0x118] = a4\n 31689: a0 = a4 <u 0x20\n 31692: u64 [s1 + 0x108] = a1\n 31696: a0 = 0 if a1 != 0\n 31698: u64 [s1 + 0x110] = ra\n 31702: u64 [s1 + 0x100] = a2\n 31706: a1 = ra | a2\n 31709: a0 = 0 if a1 != 0\n 31711: a1 = a5 <u 0x1\n 31714: jump @429 if a1 != a0\n      : @406 (gas: 108)\n 31718: u64 [s1 + 0x38] = a5\n 31721: u64 [s1 + 0x8] = a3\n 31724: u64 [s1 + 0x20] = t2\n 31727: u64 [s1 + 0x28] = t1\n 31730: u64 [s1 + 0x30] = t0\n 31733: a0 = u64 [s1 + 0x40]\n 31736: a0 = a0 << 0x8\n 31739: a1 = u64 [s1 + 0x60]\n 31742: a0 = a0 | a1\n 31745: a1 = u64 [s1 + 0x50]\n 31748: a1 = a1 << 0x10\n 31751: a2 = u64 [s1 + 0x48]\n 31754: a2 = a2 << 0x18\n 31757: a1 = a1 | a2\n 31760: a0 = a0 | a1\n 31763: a1 = u64 [s1 + 0x58]\n 31766: a1 = a1 << 0x8\n 31769: a2 = u64 [s1 + 0x78]\n 31772: a1 = a1 | a2\n 31775: a2 = u64 [s1 + 0x70]\n 31778: a2 = a2 << 0x10\n 31781: a3 = u64 [s1 + 0x68]\n 31784: a3 = a3 << 0x18\n 31787: a2 = a2 | a3\n 31790: a1 = a1 | a2\n 31793: a1 = a1 << 0x20\n 31796: t0 = a1 | a0\n 31799: a1 = u64 [s1 + 0x80]\n 31803: a1 = a1 << 0x8\n 31806: a0 = u64 [s1 + 0xa0]\n 31810: a1 = a1 | a0\n 31813: a2 = u64 [s1 + 0x90]\n 31817: a2 = a2 << 0x10\n 31820: a3 = u64 [s1 + 0x88]\n 31824: a3 = a3 << 0x18\n 31827: a2 = a2 | a3\n 31830: a1 = a1 | a2\n 31833: a2 = u64 [s1 + 0x98]\n 31837: a2 = a2 << 0x8\n 31840: a0 = u64 [s1 + 0xb8]\n 31844: a2 = a2 | a0\n 31847: a3 = u64 [s1 + 0xb0]\n 31851: a3 = a3 << 0x10\n 31854: a4 = u64 [s1 + 0xa8]\n 31858: a4 = a4 << 0x18\n 31861: a3 = a3 | a4\n 31864: a2 = a2 | a3\n 31867: a2 = a2 << 0x20\n 31870: a1 = a1 | a2\n 31873: a2 = u64 [s1 + 0xc0]\n 31877: a2 = a2 << 0x8\n 31880: a0 = u64 [s1 + 0xe0]\n 31884: a2 = a2 | a0\n 31887: a3 = u64 [s1 + 0xd0]\n 31891: a3 = a3 << 0x10\n 31894: a4 = u64 [s1 + 0xc8]\n 31898: a4 = a4 << 0x18\n 31901: a3 = a3 | a4\n 31904: a2 = a2 | a3\n 31907: a3 = u64 [s1 + 0xd8]\n 31911: a3 = a3 << 0x8\n 31914: a0 = u64 [s1 + 0xf8]\n 31918: a3 = a3 | a0\n 31921: a4 = u64 [s1 + 0xf0]\n 31925: a4 = a4 << 0x10\n 31928: a5 = u64 [s1 + 0xe8]\n 31932: a5 = a5 << 0x18\n 31935: a4 = a4 | a5\n 31938: a3 = a3 | a4\n 31941: a3 = a3 << 0x20\n 31944: a2 = a2 | a3\n 31947: a3 = u64 [s1 + 0x120]\n 31951: a3 = a3 << 0x8\n 31954: a0 = u64 [s1 + 0x140]\n 31958: a3 = a3 | a0\n 31961: a4 = u64 [s1 + 0x130]\n 31965: a4 = a4 << 0x10\n 31968: a5 = u64 [s1 + 0x128]\n 31972: a5 = a5 << 0x18\n 31975: a4 = a4 | a5\n 31978: a3 = a3 | a4\n 31981: a4 = u64 [s1 + 0x138]\n 31985: a4 = a4 << 0x8\n 31988: a0 = u64 [s1 + 0x158]\n 31992: a4 = a4 | a0\n 31995: a5 = u64 [s1 + 0x150]\n 31999: a5 = a5 << 0x10\n 32002: a0 = u64 [s1 + 0x148]\n 32006: a0 = a0 << 0x18\n 32009: a0 = a0 | a5\n 32012: a0 = a0 | a4\n 32015: a0 = a0 << 0x20\n 32018: a0 = a0 | a3\n 32021: a3 = reverse a0\n 32023: a2 = reverse a2\n 32025: a1 = reverse a1\n 32027: a4 = reverse t0\n 32029: a0 = a4 | a2\n 32032: u64 [s1 + 0xd0] = a3\n 32036: u64 [s1 + 0xc8] = a1\n 32040: a1 = a1 | a3\n 32043: a0 = a0 | a1\n 32046: a0 = a0 >> 0x20\n 32049: u64 [s1 + 0xd8] = a2\n 32053: a1 = a1 | a2\n 32056: a1 = a1 << 0x20\n 32059: a0 = a0 | a1\n 32062: jump @426 if a0 != 0\n      : @407 (gas: 5)\n 32066: i32 a0 = a4 + 0\n 32068: a1 = 0x20\n 32071: u64 [s1 + 0x158] = a0\n 32075: u64 [s1 + 0xc0] = a4\n 32079: ra = 264, jump @0\n      : @408 [@dyn 132] (gas: 70)\n 32085: a1 = u64 [s1 + 0x118]\n 32089: a1 = reverse a1\n 32091: a2 = a1 >> 0x38\n 32094: u8 [a0 + 0x1f] = a2\n 32097: a2 = a1 >> 0x30\n 32100: u8 [a0 + 0x1e] = a2\n 32103: a2 = a1 >> 0x28\n 32106: u8 [a0 + 0x1d] = a2\n 32109: a2 = a1 >> 0x20\n 32112: u8 [a0 + 0x1c] = a2\n 32115: a2 = a1 >> 0x18\n 32118: u8 [a0 + 0x1b] = a2\n 32121: a2 = a1 >> 0x10\n 32124: u8 [a0 + 0x1a] = a2\n 32127: a2 = a1 >> 0x8\n 32130: u8 [a0 + 0x19] = a2\n 32133: a2 = u64 [s1 + 0x108]\n 32137: a2 = reverse a2\n 32139: u8 [a0 + 0x18] = a1\n 32142: a1 = a2 >> 0x38\n 32145: u8 [a0 + 0x17] = a1\n 32148: a1 = a2 >> 0x30\n 32151: u8 [a0 + 0x16] = a1\n 32154: a1 = a2 >> 0x28\n 32157: u8 [a0 + 0x15] = a1\n 32160: a1 = a2 >> 0x20\n 32163: u8 [a0 + 0x14] = a1\n 32166: a1 = a2 >> 0x18\n 32169: u8 [a0 + 0x13] = a1\n 32172: a1 = a2 >> 0x10\n 32175: u8 [a0 + 0x12] = a1\n 32178: a1 = u64 [s1 + 0x110]\n 32182: a1 = reverse a1\n 32184: u8 [a0 + 0x10] = a2\n 32187: a2 = a2 >> 0x8\n 32190: u8 [a0 + 0x11] = a2\n 32193: a2 = a1 >> 0x38\n 32196: u8 [a0 + 0xf] = a2\n 32199: a2 = a1 >> 0x30\n 32202: u8 [a0 + 0xe] = a2\n 32205: a2 = a1 >> 0x28\n 32208: u8 [a0 + 0xd] = a2\n 32211: a2 = a1 >> 0x20\n 32214: u8 [a0 + 0xc] = a2\n 32217: a2 = a1 >> 0x18\n 32220: u8 [a0 + 0xb] = a2\n 32223: a2 = a1 >> 0x10\n 32226: u8 [a0 + 0xa] = a2\n 32229: a2 = u64 [s1 + 0x100]\n 32233: a2 = reverse a2\n 32235: u8 [a0 + 0x8] = a1\n 32238: a1 = a1 >> 0x8\n 32241: u8 [a0 + 0x9] = a1\n 32244: a1 = a2 >> 0x38\n 32247: u8 [a0 + 0x7] = a1\n 32250: a1 = a2 >> 0x30\n 32253: u8 [a0 + 0x6] = a1\n 32256: a1 = a2 >> 0x28\n 32259: u8 [a0 + 0x5] = a1\n 32262: a1 = a2 >> 0x20\n 32265: u8 [a0 + 0x4] = a1\n 32268: a1 = a2 >> 0x18\n 32271: u8 [a0 + 0x3] = a1\n 32274: a1 = a2 >> 0x10\n 32277: u8 [a0 + 0x2] = a1\n 32280: u8 [a0] = a2\n 32282: a2 = a2 >> 0x8\n 32285: u8 [a0 + 0x1] = a2\n 32288: a0 = u64 [s1 + 0x38]\n 32291: jump @412 if a0 != 0\n      : @409 (gas: 10)\n 32295: a0 = u64 [s1 + 0xd8]\n 32299: a1 = u64 [s1 + 0xd0]\n 32303: a0 = a0 | a1\n 32306: a1 = 0xffffffe0\n 32316: a2 = u64 [s1 + 0xc0]\n 32320: a1 = a2 <u a1\n 32323: a2 = u64 [s1 + 0xc8]\n 32327: a1 = 0 if a2 != 0\n 32329: a1 = 0 if a0 != 0\n 32331: jump @426 if a1 == 0\n      : @410 (gas: 7)\n 32335: a0 = u64 [s1 + 0x18]\n 32338: a0 = a0 & 0xffffffffffffff00\n 32342: u64 [s1 + 0x170] = a0\n 32346: a0 = u64 [s1 + 0x158]\n 32350: i32 a0 = a0 + 0x20\n 32353: a1 = 0x20\n 32356: ra = 266, jump @0\n      : @411 [@dyn 133] (gas: 74)\n 32362: t0 = 0\n 32364: t1 = 0\n 32366: u64 [s1 + 376] = 0\n 32370: a1 = u64 [s1 + 0x170]\n 32374: a3 = reverse a1\n 32376: a4 = a3 >> 0x30\n 32379: u8 [a0 + 0x1e] = a4\n 32382: a4 = a3 >> 0x28\n 32385: u8 [a0 + 0x1d] = a4\n 32388: a4 = a3 >> 0x20\n 32391: u8 [a0 + 0x1c] = a4\n 32394: a4 = a3 >> 0x18\n 32397: u8 [a0 + 0x1b] = a4\n 32400: a4 = a3 >> 0x10\n 32403: u8 [a0 + 0x1a] = a4\n 32406: a1 = u64 [s1 + 0x20]\n 32409: a4 = reverse a1\n 32411: u8 [a0 + 0x18] = a3\n 32414: a3 = a3 >> 0x8\n 32417: u8 [a0 + 0x19] = a3\n 32420: a3 = a4 >> 0x38\n 32423: u8 [a0 + 0x17] = a3\n 32426: a3 = a4 >> 0x30\n 32429: u8 [a0 + 0x16] = a3\n 32432: a3 = a4 >> 0x28\n 32435: u8 [a0 + 0x15] = a3\n 32438: a3 = a4 >> 0x20\n 32441: u8 [a0 + 0x14] = a3\n 32444: a3 = a4 >> 0x18\n 32447: u8 [a0 + 0x13] = a3\n 32450: a3 = a4 >> 0x10\n 32453: u8 [a0 + 0x12] = a3\n 32456: a1 = u64 [s1 + 0x28]\n 32459: a3 = reverse a1\n 32461: u8 [a0 + 0x10] = a4\n 32464: a4 = a4 >> 0x8\n 32467: u8 [a0 + 0x11] = a4\n 32470: a4 = a3 >> 0x38\n 32473: u8 [a0 + 0xf] = a4\n 32476: a4 = a3 >> 0x30\n 32479: u8 [a0 + 0xe] = a4\n 32482: a4 = a3 >> 0x28\n 32485: u8 [a0 + 0xd] = a4\n 32488: a4 = a3 >> 0x20\n 32491: u8 [a0 + 0xc] = a4\n 32494: a4 = a3 >> 0x18\n 32497: u8 [a0 + 0xb] = a4\n 32500: a4 = a3 >> 0x10\n 32503: u8 [a0 + 0xa] = a4\n 32506: a1 = u64 [s1 + 0x30]\n 32509: a4 = reverse a1\n 32511: u8 [a0 + 31] = 0\n 32514: u8 [a0 + 0x8] = a3\n 32517: a3 = a3 >> 0x8\n 32520: u8 [a0 + 0x9] = a3\n 32523: u8 [a0] = a4\n 32525: a3 = a4 >> 0x38\n 32528: u8 [a0 + 0x7] = a3\n 32531: a3 = a4 >> 0x30\n 32534: u8 [a0 + 0x6] = a3\n 32537: a3 = a4 >> 0x28\n 32540: u8 [a0 + 0x5] = a3\n 32543: a3 = a4 >> 0x20\n 32546: u8 [a0 + 0x4] = a3\n 32549: a3 = a4 >> 0x18\n 32552: u8 [a0 + 0x3] = a3\n 32555: a3 = a4 >> 0x10\n 32558: u8 [a0 + 0x2] = a3\n 32561: a4 = a4 >> 0x8\n 32564: u8 [a0 + 0x1] = a4\n 32567: a0 = u64 [s1 + 0x8]\n 32570: a0 = a0 >u 0\n 32572: ra = a0 << 0x5\n 32575: jump @422\n      : @412 (gas: 3)\n 32578: a1 = 0x20\n 32581: a0 = 0\n 32583: ra = 268, jump @0\n      : @413 [@dyn 134] (gas: 71)\n 32589: a1 = u64 [s1 + 0x160]\n 32593: a1 = reverse a1\n 32595: a2 = u64 [s1 + 0x168]\n 32599: a2 = reverse a2\n 32601: a3 = u64 [s1 + 0x170]\n 32605: a3 = reverse a3\n 32607: a4 = u64 [s1 + 0x178]\n 32611: a4 = reverse a4\n 32613: u8 [a0 + 0x18] = a4\n 32616: a5 = a4 >> 0x38\n 32619: u8 [a0 + 0x1f] = a5\n 32622: a5 = a4 >> 0x30\n 32625: u8 [a0 + 0x1e] = a5\n 32628: a5 = a4 >> 0x28\n 32631: u8 [a0 + 0x1d] = a5\n 32634: a5 = a4 >> 0x20\n 32637: u8 [a0 + 0x1c] = a5\n 32640: a5 = a4 >> 0x18\n 32643: u8 [a0 + 0x1b] = a5\n 32646: a5 = a4 >> 0x10\n 32649: u8 [a0 + 0x1a] = a5\n 32652: a4 = a4 >> 0x8\n 32655: u8 [a0 + 0x19] = a4\n 32658: u8 [a0 + 0x10] = a3\n 32661: a4 = a3 >> 0x38\n 32664: u8 [a0 + 0x17] = a4\n 32667: a4 = a3 >> 0x30\n 32670: u8 [a0 + 0x16] = a4\n 32673: a4 = a3 >> 0x28\n 32676: u8 [a0 + 0x15] = a4\n 32679: a4 = a3 >> 0x20\n 32682: u8 [a0 + 0x14] = a4\n 32685: a4 = a3 >> 0x18\n 32688: u8 [a0 + 0x13] = a4\n 32691: a4 = a3 >> 0x10\n 32694: u8 [a0 + 0x12] = a4\n 32697: a3 = a3 >> 0x8\n 32700: u8 [a0 + 0x11] = a3\n 32703: u8 [a0 + 0x8] = a2\n 32706: a3 = a2 >> 0x38\n 32709: u8 [a0 + 0xf] = a3\n 32712: a3 = a2 >> 0x30\n 32715: u8 [a0 + 0xe] = a3\n 32718: a3 = a2 >> 0x28\n 32721: u8 [a0 + 0xd] = a3\n 32724: a3 = a2 >> 0x20\n 32727: u8 [a0 + 0xc] = a3\n 32730: a3 = a2 >> 0x18\n 32733: u8 [a0 + 0xb] = a3\n 32736: a3 = a2 >> 0x10\n 32739: u8 [a0 + 0xa] = a3\n 32742: a2 = a2 >> 0x8\n 32745: u8 [a0 + 0x9] = a2\n 32748: u8 [a0] = a1\n 32750: a2 = a1 >> 0x38\n 32753: u8 [a0 + 0x7] = a2\n 32756: a2 = a1 >> 0x30\n 32759: u8 [a0 + 0x6] = a2\n 32762: a2 = a1 >> 0x28\n 32765: u8 [a0 + 0x5] = a2\n 32768: a2 = a1 >> 0x20\n 32771: u8 [a0 + 0x4] = a2\n 32774: a2 = a1 >> 0x18\n 32777: u8 [a0 + 0x3] = a2\n 32780: a2 = a1 >> 0x10\n 32783: u8 [a0 + 0x2] = a2\n 32786: a1 = a1 >> 0x8\n 32789: u8 [a0 + 0x1] = a1\n 32792: a1 = 0x20\n 32795: a0 = 0\n 32797: ra = 270, jump @0\n      : @414 [@dyn 135] (gas: 9)\n 32804: a1 = sp + 0xffffffffffffffe0\n 32807: a1 = a1 & 0xffffffffffffffe0\n 32810: sp = a1\n 32812: i32 a0 = a0 + 0\n 32814: u64 [s1 + 0x158] = a1\n 32818: i32 a2 = a1 + 0\n 32820: a1 = 0x20\n 32823: ecalli 8 // 'hash_keccak_256'\n 32825: fallthrough\n      : @415 (gas: 9)\n 32826: a0 = u64 [s1 + 0x18]\n 32829: a0 = a0 <u 0x2\n 32832: a1 = u64 [s1 + 0x20]\n 32835: a0 = 0 if a1 != 0\n 32837: a1 = u64 [s1 + 0x30]\n 32840: a2 = u64 [s1 + 0x28]\n 32843: a1 = a1 | a2\n 32846: a0 = 0 if a1 != 0\n 32848: jump @417 if a0 == 0\n      : @416 (gas: 5)\n 32851: ra = 0\n 32853: t0 = 0\n 32855: t1 = 0\n 32857: u64 [s1 + 376] = 0\n 32861: jump @422\n      : @417 (gas: 30)\n 32864: u64 [s1 + 360] = 0\n 32868: u64 [s1 + 352] = 0\n 32872: u64 [s1 + 368] = 0\n 32876: u64 [s1 + 376] = 0\n 32880: a0 = u64 [s1 + 0x158]\n 32884: a4 = u64 [a0]\n 32886: a1 = u64 [s1 + 0xc0]\n 32890: a2 = a1 + 0x20\n 32893: u64 [s1 + 0xf8] = a2\n 32897: a1 = a2 <u a1\n 32900: a2 = u64 [s1 + 0xc8]\n 32904: a3 = a2 + a1\n 32907: u64 [s1 + 0xf0] = a3\n 32911: a3 = a3 <u a2\n 32914: a3 = a1 if a1 == 0\n 32917: a1 = u64 [a0 + 0x8]\n 32920: a2 = u64 [a0 + 0x10]\n 32923: a0 = u64 [a0 + 0x18]\n 32926: a5 = reverse a4\n 32928: a4 = reverse a1\n 32930: a2 = reverse a2\n 32932: t2 = reverse a0\n 32934: a0 = u64 [s1 + 0xd8]\n 32938: a3 = a3 + a0\n 32941: u64 [s1 + 0xe8] = a3\n 32945: a0 = a3 <u a0\n 32948: a1 = u64 [s1 + 0xd0]\n 32952: a0 = a0 + a1\n 32955: u64 [s1 + 0xe0] = a0\n 32959: fallthrough\n      : @418 (gas: 20)\n 32960: u64 [s1 + 0x140] = a4\n 32964: u64 [s1 + 0x210] = a4\n 32968: u64 [s1 + 0x150] = a2\n 32972: u64 [s1 + 0x208] = a2\n 32976: u64 [s1 + 0x148] = t2\n 32980: u64 [s1 + 0x200] = t2\n 32984: u64 [s1 + 0x158] = a5\n 32988: u64 [s1 + 0x218] = a5\n 32992: u64 [s1 + 568] = 0\n 32996: u64 [s1 + 560] = 0\n 33000: u64 [s1 + 552] = 0\n 33004: u64 [s1 + 544] = 0\n 33008: u32 [s1 + 576] = 0x20\n 33013: i32 a1 = s1 + 0x200\n 33017: i32 a3 = s1 + 0x220\n 33021: i32 a4 = s1 + 0x240\n 33025: a2 = 0xffffffffffffffff\n 33028: a0 = 0\n 33030: ecalli 7 // 'get_storage'\n 33032: fallthrough\n      : @419 (gas: 30)\n 33033: a1 = u64 [s1 + 0xf8]\n 33037: a0 = u64 [s1 + 0x168]\n 33041: a0 = a0 + a1\n 33044: a1 = a0 <u a1\n 33047: a4 = u64 [s1 + 0xf0]\n 33051: a2 = u64 [s1 + 0x160]\n 33055: a2 = a2 + a4\n 33058: a2 = a2 + a1\n 33061: a3 = a2 ^ a4\n 33064: a4 = a2 <u a4\n 33067: a4 = a1 if a3 == 0\n 33070: a3 = u64 [s1 + 0xe8]\n 33074: a1 = u64 [s1 + 0x170]\n 33078: a1 = a1 + a3\n 33081: t0 = a1 <u a3\n 33084: a5 = u64 [s1 + 0x178]\n 33088: a3 = u64 [s1 + 0xe0]\n 33092: a5 = a5 + a3\n 33095: a3 = a5 + t0\n 33098: a4 = a4 + a1\n 33101: a1 = a4 <u a1\n 33104: a1 = a1 + a3\n 33107: a1 = a1 | a2\n 33110: a2 = a0 | a4\n 33113: a2 = a2 | a1\n 33116: a1 = a1 | a4\n 33119: a2 = a2 >> 0x20\n 33122: a1 = a1 << 0x20\n 33125: a1 = a1 | a2\n 33128: jump @426 if a1 != 0\n      : @420 (gas: 11)\n 33132: a1 = u64 [s1 + 0x238]\n 33136: u64 [s1 + 0x130] = a1\n 33140: a1 = u64 [s1 + 0x230]\n 33144: u64 [s1 + 0x138] = a1\n 33148: a1 = u64 [s1 + 0x228]\n 33152: u64 [s1 + 0x128] = a1\n 33156: a1 = u64 [s1 + 0x220]\n 33160: u64 [s1 + 0x120] = a1\n 33164: i32 a0 = a0 + 0\n 33166: a1 = 0x20\n 33169: ra = 272, jump @0\n      : @421 [@dyn 136] (gas: 114)\n 33176: a1 = u64 [s1 + 0x120]\n 33180: a1 = reverse a1\n 33182: a2 = a1 >> 0x38\n 33185: u8 [a0 + 0x1f] = a2\n 33188: a2 = a1 >> 0x30\n 33191: u8 [a0 + 0x1e] = a2\n 33194: a2 = a1 >> 0x28\n 33197: u8 [a0 + 0x1d] = a2\n 33200: a2 = a1 >> 0x20\n 33203: u8 [a0 + 0x1c] = a2\n 33206: a2 = a1 >> 0x18\n 33209: u8 [a0 + 0x1b] = a2\n 33212: a2 = a1 >> 0x10\n 33215: u8 [a0 + 0x1a] = a2\n 33218: a2 = a1 >> 0x8\n 33221: u8 [a0 + 0x19] = a2\n 33224: a2 = u64 [s1 + 0x128]\n 33228: a2 = reverse a2\n 33230: u8 [a0 + 0x18] = a1\n 33233: a1 = a2 >> 0x38\n 33236: u8 [a0 + 0x17] = a1\n 33239: a1 = a2 >> 0x30\n 33242: u8 [a0 + 0x16] = a1\n 33245: a1 = a2 >> 0x28\n 33248: u8 [a0 + 0x15] = a1\n 33251: a1 = a2 >> 0x20\n 33254: u8 [a0 + 0x14] = a1\n 33257: a1 = a2 >> 0x18\n 33260: u8 [a0 + 0x13] = a1\n 33263: a1 = a2 >> 0x10\n 33266: u8 [a0 + 0x12] = a1\n 33269: a1 = u64 [s1 + 0x130]\n 33273: a1 = reverse a1\n 33275: a3 = u64 [s1 + 0x138]\n 33279: a3 = reverse a3\n 33281: u8 [a0 + 0x10] = a2\n 33284: a2 = a2 >> 0x8\n 33287: u8 [a0 + 0x11] = a2\n 33290: u8 [a0 + 0x8] = a3\n 33293: a2 = a3 >> 0x38\n 33296: u8 [a0 + 0xf] = a2\n 33299: a2 = a3 >> 0x30\n 33302: u8 [a0 + 0xe] = a2\n 33305: a2 = a3 >> 0x28\n 33308: u8 [a0 + 0xd] = a2\n 33311: a2 = a3 >> 0x20\n 33314: u8 [a0 + 0xc] = a2\n 33317: a2 = a3 >> 0x18\n 33320: u8 [a0 + 0xb] = a2\n 33323: a2 = a3 >> 0x10\n 33326: u8 [a0 + 0xa] = a2\n 33329: a3 = a3 >> 0x8\n 33332: u8 [a0 + 0x9] = a3\n 33335: u8 [a0] = a1\n 33337: a2 = a1 >> 0x38\n 33340: u8 [a0 + 0x7] = a2\n 33343: a2 = a1 >> 0x30\n 33346: u8 [a0 + 0x6] = a2\n 33349: a2 = a1 >> 0x28\n 33352: u8 [a0 + 0x5] = a2\n 33355: a2 = a1 >> 0x20\n 33358: u8 [a0 + 0x4] = a2\n 33361: a2 = a1 >> 0x18\n 33364: u8 [a0 + 0x3] = a2\n 33367: a2 = a1 >> 0x10\n 33370: u8 [a0 + 0x2] = a2\n 33373: a1 = a1 >> 0x8\n 33376: u8 [a0 + 0x1] = a1\n 33379: t2 = u64 [s1 + 0x148]\n 33383: t2 = t2 + 0x1\n 33386: a0 = t2 <u 0x1\n 33389: a2 = u64 [s1 + 0x150]\n 33393: a2 = a2 + a0\n 33396: a0 = u64 [s1 + 0x168]\n 33400: ra = a0 + 0x20\n 33403: a1 = ra <u a0\n 33406: a0 = u64 [s1 + 0x160]\n 33410: t0 = a0 + a1\n 33413: a3 = t0 <u a0\n 33416: a3 = a1 if a1 == 0\n 33419: a0 = u64 [s1 + 0x170]\n 33423: t1 = a0 + a3\n 33426: a3 = t1 <u a0\n 33429: a4 = u64 [s1 + 0x178]\n 33433: a4 = a4 + a3\n 33436: a0 = u64 [s1 + 0x110]\n 33440: a1 = t1 <u a0\n 33443: u64 [s1 + 0x170] = a1\n 33447: a1 = u64 [s1 + 0x118]\n 33451: a5 = ra <u a1\n 33454: a3 = u64 [s1 + 0x108]\n 33458: a1 = t0 ^ a3\n 33461: a3 = t0 <u a3\n 33464: a3 = a5 if a1 == 0\n 33467: a5 = u64 [s1 + 0x100]\n 33471: a1 = a4 ^ a5\n 33474: u64 [s1 + 0x178] = a4\n 33478: a5 = a4 <u a5\n 33481: a4 = u64 [s1 + 0x170]\n 33485: a5 = a4 if a1 == 0\n 33488: a4 = t1 ^ a0\n 33491: a1 = a1 | a4\n 33494: a4 = t2 | a2\n 33497: a4 = a4 <u 0x1\n 33500: a0 = u64 [s1 + 0x140]\n 33504: a4 = a4 + a0\n 33507: a0 = a4 <u a0\n 33510: a3 = a5 if a1 != 0\n 33513: a5 = u64 [s1 + 0x158]\n 33517: a5 = a5 + a0\n 33520: u64 [s1 + 0x168] = ra\n 33524: u64 [s1 + 0x160] = t0\n 33528: u64 [s1 + 0x170] = t1\n 33532: jump @418 if a3 != 0\n      : @422 (gas: 37)\n 33536: a3 = ra + 0x3f\n 33539: a0 = a3 <u ra\n 33542: a4 = t0 + a0\n 33545: a1 = a4 <u t0\n 33548: a1 = a0 if a0 == 0\n 33551: a1 = a1 + t1\n 33554: a0 = a1 <u t1\n 33557: a2 = u64 [s1 + 0x178]\n 33561: a0 = a0 + a2\n 33564: a3 = a3 & 0xffffffffffffffe0\n 33567: t1 = u64 [s1 + 0xc0]\n 33571: a2 = a3 + t1\n 33574: u64 [s1 + 0x170] = a2\n 33578: a2 = a2 <u a3\n 33581: t0 = u64 [s1 + 0xc8]\n 33585: a3 = a4 + t0\n 33588: a3 = a3 + a2\n 33591: a5 = a3 ^ a4\n 33594: a4 = a3 <u a4\n 33597: a4 = a2 if a5 == 0\n 33600: t2 = u64 [s1 + 0xd8]\n 33604: a2 = a1 + t2\n 33607: a4 = a4 + a2\n 33610: a5 = a4 <u a2\n 33613: a1 = a2 <u a1\n 33616: ra = u64 [s1 + 0xd0]\n 33620: a0 = a0 + ra\n 33623: a0 = a0 + a1\n 33626: a5 = a5 + a0\n 33629: a0 = a5 >u 0\n 33631: a1 = a4 >u 0\n 33633: a1 = a0 if a5 != 0\n 33636: a0 = a4 | a5\n 33639: u64 [s1 + 0x178] = a3\n 33643: a2 = a3 >u 0\n 33645: a2 = a1 if a0 != 0\n 33648: jump @427 if a2 != 0\n      : @423 (gas: 14)\n 33652: a0 = u64 [s1 + 0x170]\n 33656: a0 = a0 <u t1\n 33659: a2 = u64 [s1 + 0x178]\n 33663: a1 = a2 ^ t0\n 33666: a2 = a2 <u t0\n 33669: a2 = a0 if a1 == 0\n 33672: a0 = a4 <u t2\n 33675: a1 = a5 ^ ra\n 33678: a3 = a5 <u ra\n 33681: a3 = a0 if a1 == 0\n 33684: a0 = a4 ^ t2\n 33687: a0 = a0 | a1\n 33690: a3 = a2 if a0 == 0\n 33693: jump @427 if a3 != 0\n      : @424 (gas: 5)\n 33697: a0 = 0x40\n 33700: a1 = 0x20\n 33703: u64 [s1 + 0x168] = a5\n 33707: u64 [s1 + 0x160] = a4\n 33711: ra = 274, jump @0\n      : @425 [@dyn 137] (gas: 83)\n 33718: a1 = u64 [s1 + 0x170]\n 33722: a1 = reverse a1\n 33724: a2 = a1 >> 0x38\n 33727: u8 [a0 + 0x1f] = a2\n 33730: a2 = a1 >> 0x30\n 33733: u8 [a0 + 0x1e] = a2\n 33736: a2 = a1 >> 0x28\n 33739: u8 [a0 + 0x1d] = a2\n 33742: a2 = a1 >> 0x20\n 33745: u8 [a0 + 0x1c] = a2\n 33748: a2 = a1 >> 0x18\n 33751: u8 [a0 + 0x1b] = a2\n 33754: a2 = a1 >> 0x10\n 33757: u8 [a0 + 0x1a] = a2\n 33760: a2 = u64 [s1 + 0x178]\n 33764: a2 = reverse a2\n 33766: u8 [a0 + 0x18] = a1\n 33769: a1 = a1 >> 0x8\n 33772: u8 [a0 + 0x19] = a1\n 33775: a1 = a2 >> 0x38\n 33778: u8 [a0 + 0x17] = a1\n 33781: a1 = a2 >> 0x30\n 33784: u8 [a0 + 0x16] = a1\n 33787: a1 = a2 >> 0x28\n 33790: u8 [a0 + 0x15] = a1\n 33793: a1 = a2 >> 0x20\n 33796: u8 [a0 + 0x14] = a1\n 33799: a1 = a2 >> 0x18\n 33802: u8 [a0 + 0x13] = a1\n 33805: a1 = a2 >> 0x10\n 33808: u8 [a0 + 0x12] = a1\n 33811: a1 = u64 [s1 + 0x160]\n 33815: a1 = reverse a1\n 33817: u8 [a0 + 0x10] = a2\n 33820: a2 = a2 >> 0x8\n 33823: u8 [a0 + 0x11] = a2\n 33826: a2 = a1 >> 0x38\n 33829: u8 [a0 + 0xf] = a2\n 33832: a2 = a1 >> 0x30\n 33835: u8 [a0 + 0xe] = a2\n 33838: a2 = a1 >> 0x28\n 33841: u8 [a0 + 0xd] = a2\n 33844: a2 = a1 >> 0x20\n 33847: u8 [a0 + 0xc] = a2\n 33850: a2 = a1 >> 0x18\n 33853: u8 [a0 + 0xb] = a2\n 33856: a2 = a1 >> 0x10\n 33859: u8 [a0 + 0xa] = a2\n 33862: a2 = u64 [s1 + 0x168]\n 33866: a2 = reverse a2\n 33868: u8 [a0 + 0x8] = a1\n 33871: a1 = a1 >> 0x8\n 33874: u8 [a0 + 0x9] = a1\n 33877: a1 = a2 >> 0x38\n 33880: u8 [a0 + 0x7] = a1\n 33883: a1 = a2 >> 0x30\n 33886: u8 [a0 + 0x6] = a1\n 33889: a1 = a2 >> 0x28\n 33892: u8 [a0 + 0x5] = a1\n 33895: a1 = a2 >> 0x20\n 33898: u8 [a0 + 0x4] = a1\n 33901: a1 = a2 >> 0x18\n 33904: u8 [a0 + 0x3] = a1\n 33907: a1 = a2 >> 0x10\n 33910: u8 [a0 + 0x2] = a1\n 33913: u8 [a0] = a2\n 33915: a2 = a2 >> 0x8\n 33918: u8 [a0 + 0x1] = a2\n 33921: a0 = u64 [s1 + 0x10]\n 33924: a1 = u64 [s1 + 0xc0]\n 33928: u64 [a0] = a1\n 33930: a1 = u64 [s1 + 0xd0]\n 33934: u64 [a0 + 0x18] = a1\n 33937: a1 = u64 [s1 + 0xc8]\n 33941: u64 [a0 + 0x8] = a1\n 33944: a1 = u64 [s1 + 0xd8]\n 33948: u64 [a0 + 0x10] = a1\n 33951: sp = s0 + 0xfffffffffffffda0\n 33955: ra = u64 [sp + 0x258]\n 33959: s0 = u64 [sp + 0x250]\n 33963: s1 = u64 [sp + 0x248]\n 33967: sp = sp + 0x260\n 33971: ret\n      : @426 (gas: 1)\n 33973: trap\n      : @427 (gas: 8)\n 33974: u64 [s1 + 496] = 0\n 33978: u64 [s1 + 488] = 0\n 33982: u64 [s1 + 480] = 0\n 33986: a0 = 0x4e487b7100000000\n 33996: a1 = s1 + 0x1e0\n 34000: u64 [s1 + 0x1f8] = a0\n 34004: a0 = 0\n 34006: ra = 276, jump @23\n      : @428 [@dyn 138] (gas: 8)\n 34013: u64 [s1 + 472] = 0\n 34017: u64 [s1 + 464] = 0\n 34021: u64 [s1 + 448] = 0x41\n 34026: a0 = 0x4\n 34029: a1 = s1 + 0x1c0\n 34033: u64 [s1 + 456] = 0\n 34037: ra = 0x118\n 34041: jump @23\n      : @429 (gas: 8)\n 34045: u64 [s1 + 432] = 0\n 34049: u64 [s1 + 424] = 0\n 34053: u64 [s1 + 416] = 0\n 34057: a0 = 0x4e487b7100000000\n 34067: a1 = s1 + 0x1a0\n 34071: u64 [s1 + 0x1b8] = a0\n 34075: a0 = 0\n 34077: ra = 278, jump @23\n      : @430 [@dyn 139] (gas: 7)\n 34084: u64 [s1 + 408] = 0\n 34088: u64 [s1 + 400] = 0\n 34092: u64 [s1 + 384] = 0x22\n 34097: a0 = 0x4\n 34100: a1 = s1 + 0x180\n 34104: u64 [s1 + 392] = 0\n 34108: ra = 280, jump @23\n      : @431 [@dyn 140] (gas: 3)\n 34115: a1 = 0x24\n 34118: a0 = 0\n 34120: ra = 282, jump @0\n      : @432 [@dyn 141] (gas: 6)\n 34127: i32 a1 = a0 + 0\n 34129: a0 = 0x1\n 34132: a2 = 0x24\n 34135: ra = 0x11c\n 34139: ecalli 13 // 'seal_return'\n 34141: fallthrough\n      : @433 [@dyn 142] (gas: 16)\n 34142: sp = sp + 0xffffffffffffff80\n 34145: u64 [sp + 0x78] = ra\n 34148: u64 [sp + 0x70] = s0\n 34151: u64 [sp + 0x68] = s1\n 34154: a5 = u64 [a1 + 0x10]\n 34157: s1 = u64 [a1 + 0x18]\n 34160: a4 = u64 [a1 + 0x8]\n 34163: s0 = u64 [a1]\n 34165: a1 = a4 | s1\n 34168: a3 = s0 | a5\n 34171: a3 = a3 | a1\n 34174: a3 = a3 >> 0x20\n 34177: a1 = a1 | a5\n 34180: a1 = a1 << 0x20\n 34183: a1 = a1 | a3\n 34186: jump @446 if a1 != 0\n      : @434 (gas: 16)\n 34190: u64 [sp + 0x30] = s1\n 34193: u64 [sp + 0x38] = a5\n 34196: u64 [sp + 0x40] = a4\n 34199: u64 [sp + 0x8] = a0\n 34202: a0 = u64 [a2 + 0x18]\n 34205: u64 [sp + 0x60] = a0\n 34208: s1 = u64 [a2 + 0x10]\n 34211: a0 = u64 [a2 + 0x8]\n 34214: u64 [sp + 0x58] = a0\n 34217: a0 = u64 [a2]\n 34219: u64 [sp + 0x50] = a0\n 34222: u64 [sp + 0x28] = s0\n 34225: i32 a0 = s0 + 0\n 34227: a1 = 0x20\n 34230: u64 [sp + 0x10] = a0\n 34233: ra = 286, jump @0\n      : @435 [@dyn 143] (gas: 12)\n 34240: t0 = u64 [sp + 0x50]\n 34243: a1 = t0 | s1\n 34246: a2 = u64 [sp + 0x60]\n 34249: a3 = u64 [sp + 0x58]\n 34252: a2 = a2 | a3\n 34255: a1 = a1 | a2\n 34258: a1 = a1 >> 0x20\n 34261: u64 [sp + 0x48] = s1\n 34264: a2 = a2 | s1\n 34267: a2 = a2 << 0x20\n 34270: a1 = a1 | a2\n 34273: jump @446 if a1 != 0\n      : @436 (gas: 94)\n 34277: a1 = u8 [a0 + 0x19]\n 34280: a2 = u8 [a0 + 0x18]\n 34283: a3 = u8 [a0 + 0x1a]\n 34286: a4 = u8 [a0 + 0x1b]\n 34289: a1 = a1 << 0x8\n 34292: a1 = a1 | a2\n 34295: a3 = a3 << 0x10\n 34298: a4 = a4 << 0x18\n 34301: a3 = a3 | a4\n 34304: a1 = a1 | a3\n 34307: a2 = u8 [a0 + 0x1d]\n 34310: a3 = u8 [a0 + 0x1c]\n 34313: a4 = u8 [a0 + 0x1e]\n 34316: a5 = u8 [a0 + 0x1f]\n 34319: a2 = a2 << 0x8\n 34322: a2 = a2 | a3\n 34325: a4 = a4 << 0x10\n 34328: a5 = a5 << 0x18\n 34331: a4 = a4 | a5\n 34334: a2 = a2 | a4\n 34337: a2 = a2 << 0x20\n 34340: a1 = a1 | a2\n 34343: u64 [sp + 0x20] = a1\n 34346: a1 = u8 [a0 + 0x11]\n 34349: a2 = u8 [a0 + 0x10]\n 34352: a3 = u8 [a0 + 0x12]\n 34355: a4 = u8 [a0 + 0x13]\n 34358: a1 = a1 << 0x8\n 34361: a1 = a1 | a2\n 34364: a3 = a3 << 0x10\n 34367: a4 = a4 << 0x18\n 34370: a3 = a3 | a4\n 34373: a1 = a1 | a3\n 34376: a2 = u8 [a0 + 0x15]\n 34379: a3 = u8 [a0 + 0x14]\n 34382: a4 = u8 [a0 + 0x16]\n 34385: a5 = u8 [a0 + 0x17]\n 34388: a2 = a2 << 0x8\n 34391: a2 = a2 | a3\n 34394: a4 = a4 << 0x10\n 34397: a5 = a5 << 0x18\n 34400: a4 = a4 | a5\n 34403: a2 = a2 | a4\n 34406: a2 = a2 << 0x20\n 34409: a1 = a1 | a2\n 34412: u64 [sp + 0x18] = a1\n 34415: a1 = u8 [a0 + 0x9]\n 34418: a2 = u8 [a0 + 0x8]\n 34421: a3 = u8 [a0 + 0xa]\n 34424: a4 = u8 [a0 + 0xb]\n 34427: a1 = a1 << 0x8\n 34430: a1 = a1 | a2\n 34433: a3 = a3 << 0x10\n 34436: a4 = a4 << 0x18\n 34439: a3 = a3 | a4\n 34442: a1 = a1 | a3\n 34445: a2 = u8 [a0 + 0xd]\n 34448: a3 = u8 [a0 + 0xc]\n 34451: a4 = u8 [a0 + 0xe]\n 34454: a5 = u8 [a0 + 0xf]\n 34457: a2 = a2 << 0x8\n 34460: a2 = a2 | a3\n 34463: a4 = a4 << 0x10\n 34466: a5 = a5 << 0x18\n 34469: a4 = a4 | a5\n 34472: a2 = a2 | a4\n 34475: a2 = a2 << 0x20\n 34478: s0 = a2 | a1\n 34481: a1 = u8 [a0 + 0x1]\n 34484: a2 = u8 [a0]\n 34486: a3 = u8 [a0 + 0x2]\n 34489: a4 = u8 [a0 + 0x3]\n 34492: a1 = a1 << 0x8\n 34495: a1 = a1 | a2\n 34498: a3 = a3 << 0x10\n 34501: a4 = a4 << 0x18\n 34504: a3 = a3 | a4\n 34507: a1 = a1 | a3\n 34510: a2 = u8 [a0 + 0x5]\n 34513: a3 = u8 [a0 + 0x4]\n 34516: a4 = u8 [a0 + 0x6]\n 34519: a0 = u8 [a0 + 0x7]\n 34522: a2 = a2 << 0x8\n 34525: a2 = a2 | a3\n 34528: a4 = a4 << 0x10\n 34531: a0 = a0 << 0x18\n 34534: a0 = a0 | a4\n 34537: a0 = a0 | a2\n 34540: a0 = a0 << 0x20\n 34543: s1 = a0 | a1\n 34546: i32 a0 = t0 + 0\n 34548: a1 = 0x20\n 34551: u64 [sp] = a0\n 34553: ra = 288, jump @0\n      : @437 [@dyn 144] (gas: 72)\n 34560: a1 = s0 >> 0x38\n 34563: u8 [a0 + 0xf] = a1\n 34566: a1 = s0 >> 0x30\n 34569: u8 [a0 + 0xe] = a1\n 34572: a1 = s0 >> 0x28\n 34575: u8 [a0 + 0xd] = a1\n 34578: a1 = s0 >> 0x20\n 34581: u8 [a0 + 0xc] = a1\n 34584: a1 = s0 >> 0x18\n 34587: u8 [a0 + 0xb] = a1\n 34590: a1 = s0 >> 0x10\n 34593: u8 [a0 + 0xa] = a1\n 34596: a1 = s0 >> 0x8\n 34599: u8 [a0 + 0x9] = a1\n 34602: a1 = s1 >> 0x38\n 34605: u8 [a0 + 0x7] = a1\n 34608: a1 = s1 >> 0x30\n 34611: u8 [a0 + 0x6] = a1\n 34614: a1 = s1 >> 0x28\n 34617: u8 [a0 + 0x5] = a1\n 34620: a1 = s1 >> 0x20\n 34623: u8 [a0 + 0x4] = a1\n 34626: a1 = s1 >> 0x18\n 34629: u8 [a0 + 0x3] = a1\n 34632: a1 = s1 >> 0x10\n 34635: u8 [a0 + 0x2] = a1\n 34638: a1 = s1 >> 0x8\n 34641: u8 [a0 + 0x1] = a1\n 34644: t0 = u64 [sp + 0x18]\n 34647: a1 = t0 >> 0x38\n 34650: u8 [a0 + 0x17] = a1\n 34653: a1 = t0 >> 0x30\n 34656: u8 [a0 + 0x16] = a1\n 34659: a1 = t0 >> 0x28\n 34662: u8 [a0 + 0x15] = a1\n 34665: a1 = t0 >> 0x20\n 34668: u8 [a0 + 0x14] = a1\n 34671: a1 = t0 >> 0x18\n 34674: u8 [a0 + 0x13] = a1\n 34677: a1 = t0 >> 0x10\n 34680: u8 [a0 + 0x12] = a1\n 34683: a1 = t0 >> 0x8\n 34686: u8 [a0 + 0x11] = a1\n 34689: a5 = u64 [sp + 0x20]\n 34692: a1 = a5 >> 0x38\n 34695: u8 [a0 + 0x1f] = a1\n 34698: a1 = a5 >> 0x30\n 34701: u8 [a0 + 0x1e] = a1\n 34704: a1 = a5 >> 0x28\n 34707: u8 [a0 + 0x1d] = a1\n 34710: a1 = a5 >> 0x20\n 34713: u8 [a0 + 0x1c] = a1\n 34716: a1 = a5 >> 0x18\n 34719: u8 [a0 + 0x1b] = a1\n 34722: a1 = a5 >> 0x10\n 34725: u8 [a0 + 0x1a] = a1\n 34728: a1 = a5 >> 0x8\n 34731: u8 [a0 + 0x19] = a1\n 34734: a1 = u64 [sp + 0x48]\n 34737: a2 = u64 [sp + 0x60]\n 34740: a2 = a2 | a1\n 34743: a1 = 0xffffffe0\n 34753: a3 = u64 [sp + 0x50]\n 34756: a3 = a3 <u a1\n 34759: a4 = u64 [sp + 0x58]\n 34762: a3 = 0 if a4 != 0\n 34764: a3 = 0 if a2 != 0\n 34766: u8 [a0 + 0x10] = t0\n 34769: u8 [a0 + 0x8] = s0\n 34772: u8 [a0] = s1\n 34774: u8 [a0 + 0x18] = a5\n 34777: jump @446 if a3 == 0\n      : @438 (gas: 9)\n 34781: a0 = u64 [sp + 0x38]\n 34784: a3 = u64 [sp + 0x30]\n 34787: a0 = a0 | a3\n 34790: a3 = u64 [sp + 0x28]\n 34793: a1 = a3 <u a1\n 34796: a3 = u64 [sp + 0x40]\n 34799: a1 = 0 if a3 != 0\n 34801: a1 = 0 if a0 != 0\n 34803: jump @446 if a1 == 0\n      : @439 (gas: 15)\n 34807: a1 = reverse s1\n 34809: a3 = reverse s0\n 34811: a4 = reverse t0\n 34813: s1 = reverse a5\n 34815: a0 = s1 | a3\n 34818: u64 [sp + 0x40] = a1\n 34821: u64 [sp + 0x30] = a4\n 34824: a1 = a1 | a4\n 34827: a0 = a0 | a1\n 34830: a0 = a0 >> 0x20\n 34833: u64 [sp + 0x38] = a3\n 34836: a1 = a1 | a3\n 34839: a1 = a1 << 0x20\n 34842: a0 = a0 | a1\n 34845: jump @446 if a0 != 0\n      : @440 (gas: 8)\n 34849: a0 = u64 [sp]\n 34851: i32 a0 = a0 + 0x20\n 34854: a1 = u64 [sp + 0x10]\n 34857: i32 a1 = a1 + 0x20\n 34860: u64 [sp + 0x28] = a1\n 34863: i32 s0 = s1 + 0\n 34865: a1 = s0\n 34867: ra = 290, jump @0\n      : @441 [@dyn 145] (gas: 4)\n 34874: u64 [sp + 0x20] = a0\n 34877: a0 = u64 [sp + 0x28]\n 34880: a1 = s0\n 34882: ra = 292, jump @0\n      : @442 [@dyn 146] (gas: 4)\n 34889: a1 = a0\n 34891: a0 = u64 [sp + 0x20]\n 34894: a2 = s1\n 34896: ra = 294, jump @8\n      : @443 [@dyn 147] (gas: 28)\n 34903: a0 = u64 [sp + 0x50]\n 34906: a0 = a0 + s1\n 34909: u64 [sp + 0x28] = s1\n 34912: a1 = a0 <u s1\n 34915: a2 = u64 [sp + 0x58]\n 34918: a4 = u64 [sp + 0x30]\n 34921: a2 = a2 + a4\n 34924: a2 = a2 + a1\n 34927: a3 = a2 ^ a4\n 34930: a4 = a2 <u a4\n 34933: a4 = a1 if a3 == 0\n 34936: s1 = u64 [sp + 0x48]\n 34939: a5 = u64 [sp + 0x38]\n 34942: a1 = a5 + s1\n 34945: a4 = a4 + a1\n 34948: a3 = a4 <u a1\n 34951: a1 = a1 <u a5\n 34954: a5 = u64 [sp + 0x60]\n 34957: s0 = u64 [sp + 0x40]\n 34960: a5 = a5 + s0\n 34963: a1 = a1 + a5\n 34966: a1 = a1 + a3\n 34969: a1 = a1 | a4\n 34972: a3 = 0xffffffe0\n 34982: a3 = a0 <u a3\n 34985: a3 = 0 if a2 != 0\n 34987: a3 = 0 if a1 != 0\n 34989: jump @446 if a3 == 0\n      : @444 (gas: 3)\n 34993: i32 a0 = a0 + 0x20\n 34996: a1 = 0x20\n 34999: ra = 296, jump @0\n      : @445 [@dyn 148] (gas: 65)\n 35006: u8 [a0 + 31] = 0\n 35009: u8 [a0 + 30] = 0\n 35012: u8 [a0 + 29] = 0\n 35015: u8 [a0 + 28] = 0\n 35018: u8 [a0 + 27] = 0\n 35021: u8 [a0 + 26] = 0\n 35024: u8 [a0 + 25] = 0\n 35027: u8 [a0 + 24] = 0\n 35030: u8 [a0 + 23] = 0\n 35033: u8 [a0 + 22] = 0\n 35036: u8 [a0 + 21] = 0\n 35039: u8 [a0 + 20] = 0\n 35042: u8 [a0 + 19] = 0\n 35045: u8 [a0 + 18] = 0\n 35048: u8 [a0 + 17] = 0\n 35051: u8 [a0 + 16] = 0\n 35054: u8 [a0 + 15] = 0\n 35057: u8 [a0 + 14] = 0\n 35060: u8 [a0 + 13] = 0\n 35063: u8 [a0 + 12] = 0\n 35066: u8 [a0 + 11] = 0\n 35069: u8 [a0 + 10] = 0\n 35072: u8 [a0 + 9] = 0\n 35075: u8 [a0 + 8] = 0\n 35078: u8 [a0 + 7] = 0\n 35081: u8 [a0 + 6] = 0\n 35084: u8 [a0 + 5] = 0\n 35087: u8 [a0 + 4] = 0\n 35090: u8 [a0 + 3] = 0\n 35093: u8 [a0 + 2] = 0\n 35096: u8 [a0 + 1] = 0\n 35099: u8 [a0 + 0] = 0\n 35101: a0 = u64 [sp + 0x28]\n 35104: a0 = a0 + 0x1f\n 35107: s0 = 0x1ffffffe0\n 35117: a0 = a0 & s0\n 35120: a1 = u64 [sp + 0x50]\n 35123: a0 = a0 + a1\n 35126: a1 = a0 <u a1\n 35129: a3 = u64 [sp + 0x58]\n 35132: a2 = a3 + a1\n 35135: a3 = a2 <u a3\n 35138: a3 = a1 if a1 == 0\n 35141: a3 = a3 + s1\n 35144: a1 = a3 <u s1\n 35147: a4 = u64 [sp + 0x60]\n 35150: a1 = a1 + a4\n 35153: a4 = a0 + 0x20\n 35156: a0 = a4 <u a0\n 35159: a5 = a2 + a0\n 35162: a2 = a5 <u a2\n 35165: a2 = a0 if a0 == 0\n 35168: a2 = a2 + a3\n 35171: a0 = a2 <u a3\n 35174: a0 = a0 + a1\n 35177: a1 = u64 [sp + 0x8]\n 35180: u64 [a1] = a4\n 35182: u64 [a1 + 0x8] = a5\n 35185: u64 [a1 + 0x10] = a2\n 35188: u64 [a1 + 0x18] = a0\n 35191: ra = u64 [sp + 0x78]\n 35194: s0 = u64 [sp + 0x70]\n 35197: s1 = u64 [sp + 0x68]\n 35200: sp = sp + 0x80\n 35204: ret\n      : @446 (gas: 1)\n 35206: trap\n      : @447 (gas: 23)\n 35207: sp = sp + 0xfffffffffffffe80\n 35211: u64 [sp + 0x178] = ra\n 35215: u64 [sp + 0x170] = s0\n 35219: u64 [sp + 0x168] = s1\n 35223: s0 = sp + 0x180\n 35227: sp = sp & 0xfffffffffffffff0\n 35230: t1 = u64 [a1 + 0x10]\n 35233: t0 = u64 [a1 + 0x18]\n 35236: s1 = u64 [a1 + 0x8]\n 35239: a1 = u64 [a1]\n 35241: u64 [sp + 0xf0] = s1\n 35245: u64 [sp + 0xd0] = t0\n 35249: t0 = s1 | t0\n 35252: u64 [sp + 0xf8] = a1\n 35256: s1 = a1 | t1\n 35259: s1 = s1 | t0\n 35262: s1 = s1 >> 0x20\n 35265: u64 [sp + 0xd8] = t1\n 35269: a1 = t0 | t1\n 35272: a1 = a1 << 0x20\n 35275: a1 = a1 | s1\n 35278: u64 [sp + 0x40] = a0\n 35281: jump @463 if a1 != 0\n      : @448 (gas: 62)\n 35285: a0 = u64 [s0 + 0x10]\n 35288: a1 = u64 [a0 + 0x18]\n 35291: u64 [sp + 0x18] = a1\n 35294: a1 = u64 [s0 + 0x8]\n 35297: s1 = u64 [a0 + 0x10]\n 35300: u64 [sp] = s1\n 35302: s1 = u64 [a0 + 0x8]\n 35305: u64 [sp + 0x8] = s1\n 35308: a0 = u64 [a0]\n 35310: u64 [sp + 0x10] = a0\n 35313: a0 = u64 [a1 + 0x18]\n 35316: u64 [sp + 0x38] = a0\n 35319: a0 = u64 [s0]\n 35321: s1 = u64 [a1 + 0x10]\n 35324: u64 [sp + 0x20] = s1\n 35327: s1 = u64 [a1 + 0x8]\n 35330: u64 [sp + 0x28] = s1\n 35333: a1 = u64 [a1]\n 35335: u64 [sp + 0x30] = a1\n 35338: a1 = u64 [a0 + 0x18]\n 35341: u64 [sp + 0x48] = a1\n 35344: a1 = u64 [a0 + 0x10]\n 35347: u64 [sp + 0x50] = a1\n 35350: a1 = u64 [a0 + 0x8]\n 35353: u64 [sp + 0x58] = a1\n 35356: a0 = u64 [a0]\n 35358: u64 [sp + 0x60] = a0\n 35361: a0 = u64 [a5 + 0x18]\n 35364: u64 [sp + 0x68] = a0\n 35367: a0 = u64 [a5 + 0x10]\n 35370: u64 [sp + 0x70] = a0\n 35373: a0 = u64 [a5 + 0x8]\n 35376: u64 [sp + 0x78] = a0\n 35379: a0 = u64 [a5]\n 35381: u64 [sp + 0x80] = a0\n 35385: a0 = u64 [a4 + 0x18]\n 35388: u64 [sp + 0x88] = a0\n 35392: a0 = u64 [a4 + 0x10]\n 35395: u64 [sp + 0x90] = a0\n 35399: a0 = u64 [a4 + 0x8]\n 35402: u64 [sp + 0x98] = a0\n 35406: a0 = u64 [a4]\n 35408: u64 [sp + 0xa0] = a0\n 35412: a0 = u64 [a3 + 0x18]\n 35415: u64 [sp + 0xb0] = a0\n 35419: a0 = u64 [a3 + 0x10]\n 35422: u64 [sp + 0xb8] = a0\n 35426: a0 = u64 [a3 + 0x8]\n 35429: u64 [sp + 0xc0] = a0\n 35433: a0 = u64 [a2 + 0x10]\n 35436: a1 = u64 [a3]\n 35438: u64 [sp + 0xa8] = a1\n 35442: a1 = u64 [a2 + 0x8]\n 35445: u64 [sp + 0xc8] = a1\n 35449: a1 = u64 [a2]\n 35451: u64 [sp + 0xe0] = a1\n 35455: a0 = a0 << 0x20\n 35458: s1 = a0 >> 0x20\n 35461: a0 = i32 [sp + 0xf8]\n 35465: a1 = 0x20\n 35468: u64 [sp + 0xe8] = a0\n 35472: ra = 298, jump @0\n      : @449 [@dyn 149] (gas: 68)\n 35479: a1 = reverse s1\n 35481: a2 = u64 [sp + 0xc8]\n 35485: a2 = reverse a2\n 35487: a3 = u64 [sp + 0xe0]\n 35491: a3 = reverse a3\n 35493: a4 = a3 >> 0x38\n 35496: u8 [a0 + 0x1f] = a4\n 35499: a4 = a3 >> 0x30\n 35502: u8 [a0 + 0x1e] = a4\n 35505: a4 = a3 >> 0x28\n 35508: u8 [a0 + 0x1d] = a4\n 35511: a4 = a3 >> 0x20\n 35514: u8 [a0 + 0x1c] = a4\n 35517: a4 = a3 >> 0x18\n 35520: u8 [a0 + 0x1b] = a4\n 35523: a4 = a3 >> 0x10\n 35526: u8 [a0 + 0x1a] = a4\n 35529: a4 = a3 >> 0x8\n 35532: u8 [a0 + 0x19] = a4\n 35535: u8 [a0 + 0x18] = a3\n 35538: u8 [a0 + 0x10] = a2\n 35541: u8 [a0 + 11] = 0\n 35544: u8 [a0 + 10] = 0\n 35547: u8 [a0 + 9] = 0\n 35550: u8 [a0 + 7] = 0\n 35553: u8 [a0 + 6] = 0\n 35556: u8 [a0 + 5] = 0\n 35559: u8 [a0 + 4] = 0\n 35562: u8 [a0 + 3] = 0\n 35565: u8 [a0 + 2] = 0\n 35568: u8 [a0 + 1] = 0\n 35571: u8 [a0 + 0] = 0\n 35573: a3 = a2 >> 0x38\n 35576: u8 [a0 + 0x17] = a3\n 35579: a3 = a2 >> 0x30\n 35582: u8 [a0 + 0x16] = a3\n 35585: a3 = a2 >> 0x28\n 35588: u8 [a0 + 0x15] = a3\n 35591: a3 = a2 >> 0x20\n 35594: u8 [a0 + 0x14] = a3\n 35597: a3 = a2 >> 0x18\n 35600: u8 [a0 + 0x13] = a3\n 35603: a3 = a2 >> 0x10\n 35606: u8 [a0 + 0x12] = a3\n 35609: a2 = a2 >> 0x8\n 35612: u8 [a0 + 0x11] = a2\n 35615: u8 [a0 + 0x8] = a1\n 35618: a2 = a1 >> 0x38\n 35621: u8 [a0 + 0xf] = a2\n 35624: a2 = a1 >> 0x30\n 35627: u8 [a0 + 0xe] = a2\n 35630: a2 = a1 >> 0x28\n 35633: u8 [a0 + 0xd] = a2\n 35636: a1 = a1 >> 0x20\n 35639: a2 = u64 [sp + 0xd8]\n 35643: a4 = u64 [sp + 0xd0]\n 35647: a4 = a4 | a2\n 35650: a2 = 0x100000000\n 35660: u64 [sp + 0xc8] = a2\n 35664: a2 = 0xffffffe0\n 35674: a3 = u64 [sp + 0xf8]\n 35678: a2 = a3 <u a2\n 35681: a3 = u64 [sp + 0xf0]\n 35685: a2 = 0 if a3 != 0\n 35687: u64 [sp + 0xe0] = a4\n 35691: a2 = 0 if a4 != 0\n 35693: u8 [a0 + 0xc] = a1\n 35696: jump @463 if a2 == 0\n      : @450 (gas: 4)\n 35700: a0 = u64 [sp + 0xe8]\n 35704: i32 a0 = a0 + 0x20\n 35707: a1 = 0x20\n 35710: ra = 300, jump @0\n      : @451 [@dyn 150] (gas: 60)\n 35717: u8 [a0 + 31] = 0xe0\n 35722: u8 [a0 + 30] = 0\n 35725: u8 [a0 + 29] = 0\n 35728: u8 [a0 + 28] = 0\n 35731: u8 [a0 + 27] = 0\n 35734: u8 [a0 + 26] = 0\n 35737: u8 [a0 + 25] = 0\n 35740: u8 [a0 + 24] = 0\n 35743: u8 [a0 + 23] = 0\n 35746: u8 [a0 + 22] = 0\n 35749: u8 [a0 + 21] = 0\n 35752: u8 [a0 + 20] = 0\n 35755: u8 [a0 + 19] = 0\n 35758: u8 [a0 + 18] = 0\n 35761: u8 [a0 + 17] = 0\n 35764: u8 [a0 + 16] = 0\n 35767: u8 [a0 + 15] = 0\n 35770: u8 [a0 + 14] = 0\n 35773: u8 [a0 + 13] = 0\n 35776: u8 [a0 + 12] = 0\n 35779: u8 [a0 + 11] = 0\n 35782: u8 [a0 + 10] = 0\n 35785: u8 [a0 + 9] = 0\n 35788: u8 [a0 + 8] = 0\n 35791: u8 [a0 + 7] = 0\n 35794: u8 [a0 + 6] = 0\n 35797: u8 [a0 + 5] = 0\n 35800: u8 [a0 + 4] = 0\n 35803: u8 [a0 + 3] = 0\n 35806: u8 [a0 + 2] = 0\n 35809: u8 [a0 + 1] = 0\n 35812: u8 [a0 + 0] = 0\n 35814: a1 = u64 [sp + 0xf8]\n 35818: a0 = a1 + 0xe0\n 35822: a1 = a0 <u a1\n 35825: s1 = u64 [sp + 0xf0]\n 35829: a2 = s1 + a1\n 35832: a3 = a2 <u s1\n 35835: a3 = a1 if a1 == 0\n 35838: a1 = u64 [sp + 0xd8]\n 35842: a3 = a3 + a1\n 35845: a1 = a3 <u a1\n 35848: a4 = u64 [sp + 0xd0]\n 35852: a4 = a4 + a1\n 35855: u64 [sp + 0x108] = a2\n 35859: u64 [sp + 0x100] = a0\n 35863: a0 = u64 [sp + 0xb0]\n 35867: u64 [sp + 0x138] = a0\n 35871: a0 = u64 [sp + 0xb8]\n 35875: u64 [sp + 0x130] = a0\n 35879: a0 = u64 [sp + 0xc0]\n 35883: u64 [sp + 0x128] = a0\n 35887: a0 = u64 [sp + 0xa8]\n 35891: u64 [sp + 0x120] = a0\n 35895: u64 [sp + 0x110] = a3\n 35899: a0 = sp + 0x140\n 35903: a1 = sp + 0x120\n 35907: a2 = sp + 0x100\n 35911: u64 [sp + 0x118] = a4\n 35915: ra = 302, jump @433\n      : @452 [@dyn 151] (gas: 8)\n 35921: a0 = u64 [sp + 0xc8]\n 35925: a0 = a0 + 0xffffffffffffffc0\n 35928: a1 = u64 [sp + 0xf8]\n 35932: a0 = a1 <u a0\n 35935: a0 = 0 if s1 != 0\n 35937: a1 = u64 [sp + 0xe0]\n 35941: a0 = 0 if a1 != 0\n 35943: jump @463 if a0 == 0\n      : @453 (gas: 12)\n 35947: a0 = u64 [sp + 0x158]\n 35951: u64 [sp + 0xd0] = a0\n 35955: a0 = u64 [sp + 0x150]\n 35959: u64 [sp + 0xd8] = a0\n 35963: a0 = u64 [sp + 0x148]\n 35967: u64 [sp + 0xc8] = a0\n 35971: a0 = u64 [sp + 0x140]\n 35975: u64 [sp + 0xc0] = a0\n 35979: a0 = u64 [sp + 0xe8]\n 35983: i32 a0 = a0 + 0x40\n 35986: a1 = 0x20\n 35989: ra = 304, jump @0\n      : @454 [@dyn 152] (gas: 77)\n 35996: a1 = u64 [sp + 0x88]\n 36000: a1 = reverse a1\n 36002: a2 = u64 [sp + 0x90]\n 36006: a2 = reverse a2\n 36008: a3 = u64 [sp + 0x98]\n 36012: a3 = reverse a3\n 36014: a4 = u64 [sp + 0xa0]\n 36018: a4 = reverse a4\n 36020: a5 = a4 >> 0x38\n 36023: u8 [a0 + 0x1f] = a5\n 36026: a5 = a4 >> 0x30\n 36029: u8 [a0 + 0x1e] = a5\n 36032: a5 = a4 >> 0x28\n 36035: u8 [a0 + 0x1d] = a5\n 36038: a5 = a4 >> 0x20\n 36041: u8 [a0 + 0x1c] = a5\n 36044: a5 = a4 >> 0x18\n 36047: u8 [a0 + 0x1b] = a5\n 36050: a5 = a4 >> 0x10\n 36053: u8 [a0 + 0x1a] = a5\n 36056: a5 = a4 >> 0x8\n 36059: u8 [a0 + 0x19] = a5\n 36062: u8 [a0 + 0x18] = a4\n 36065: u8 [a0 + 0x10] = a3\n 36068: a4 = a3 >> 0x38\n 36071: u8 [a0 + 0x17] = a4\n 36074: a4 = a3 >> 0x30\n 36077: u8 [a0 + 0x16] = a4\n 36080: a4 = a3 >> 0x28\n 36083: u8 [a0 + 0x15] = a4\n 36086: a4 = a3 >> 0x20\n 36089: u8 [a0 + 0x14] = a4\n 36092: a4 = a3 >> 0x18\n 36095: u8 [a0 + 0x13] = a4\n 36098: a4 = a3 >> 0x10\n 36101: u8 [a0 + 0x12] = a4\n 36104: a3 = a3 >> 0x8\n 36107: u8 [a0 + 0x11] = a3\n 36110: u8 [a0 + 0x8] = a2\n 36113: a3 = a2 >> 0x38\n 36116: u8 [a0 + 0xf] = a3\n 36119: a3 = a2 >> 0x30\n 36122: u8 [a0 + 0xe] = a3\n 36125: a3 = a2 >> 0x28\n 36128: u8 [a0 + 0xd] = a3\n 36131: a3 = a2 >> 0x20\n 36134: u8 [a0 + 0xc] = a3\n 36137: a3 = a2 >> 0x18\n 36140: u8 [a0 + 0xb] = a3\n 36143: a3 = a2 >> 0x10\n 36146: u8 [a0 + 0xa] = a3\n 36149: a2 = a2 >> 0x8\n 36152: u8 [a0 + 0x9] = a2\n 36155: u8 [a0] = a1\n 36157: a2 = a1 >> 0x38\n 36160: u8 [a0 + 0x7] = a2\n 36163: a2 = a1 >> 0x30\n 36166: u8 [a0 + 0x6] = a2\n 36169: a2 = a1 >> 0x28\n 36172: u8 [a0 + 0x5] = a2\n 36175: a2 = a1 >> 0x20\n 36178: u8 [a0 + 0x4] = a2\n 36181: a2 = a1 >> 0x18\n 36184: u8 [a0 + 0x3] = a2\n 36187: a2 = a1 >> 0x10\n 36190: u8 [a0 + 0x2] = a2\n 36193: a1 = a1 >> 0x8\n 36196: s1 = 0x100000000\n 36206: a2 = 0xffffffa0\n 36216: a3 = u64 [sp + 0xf8]\n 36220: a2 = a3 <u a2\n 36223: a3 = u64 [sp + 0xf0]\n 36227: a2 = 0 if a3 != 0\n 36229: a3 = u64 [sp + 0xe0]\n 36233: a2 = 0 if a3 != 0\n 36235: u8 [a0 + 0x1] = a1\n 36238: jump @463 if a2 == 0\n      : @455 (gas: 4)\n 36242: a0 = u64 [sp + 0xe8]\n 36246: i32 a0 = a0 + 0x60\n 36249: a1 = 0x20\n 36252: ra = 306, jump @0\n      : @456 [@dyn 153] (gas: 76)\n 36259: a1 = u64 [sp + 0x68]\n 36262: a1 = reverse a1\n 36264: a2 = u64 [sp + 0x70]\n 36267: a2 = reverse a2\n 36269: a3 = u64 [sp + 0x78]\n 36272: a3 = reverse a3\n 36274: a4 = u64 [sp + 0x80]\n 36278: a4 = reverse a4\n 36280: a5 = a4 >> 0x38\n 36283: u8 [a0 + 0x1f] = a5\n 36286: a5 = a4 >> 0x30\n 36289: u8 [a0 + 0x1e] = a5\n 36292: a5 = a4 >> 0x28\n 36295: u8 [a0 + 0x1d] = a5\n 36298: a5 = a4 >> 0x20\n 36301: u8 [a0 + 0x1c] = a5\n 36304: a5 = a4 >> 0x18\n 36307: u8 [a0 + 0x1b] = a5\n 36310: a5 = a4 >> 0x10\n 36313: u8 [a0 + 0x1a] = a5\n 36316: a5 = a4 >> 0x8\n 36319: u8 [a0 + 0x19] = a5\n 36322: u8 [a0 + 0x18] = a4\n 36325: u8 [a0 + 0x10] = a3\n 36328: a4 = a3 >> 0x38\n 36331: u8 [a0 + 0x17] = a4\n 36334: a4 = a3 >> 0x30\n 36337: u8 [a0 + 0x16] = a4\n 36340: a4 = a3 >> 0x28\n 36343: u8 [a0 + 0x15] = a4\n 36346: a4 = a3 >> 0x20\n 36349: u8 [a0 + 0x14] = a4\n 36352: a4 = a3 >> 0x18\n 36355: u8 [a0 + 0x13] = a4\n 36358: a4 = a3 >> 0x10\n 36361: u8 [a0 + 0x12] = a4\n 36364: a3 = a3 >> 0x8\n 36367: u8 [a0 + 0x11] = a3\n 36370: u8 [a0 + 0x8] = a2\n 36373: a3 = a2 >> 0x38\n 36376: u8 [a0 + 0xf] = a3\n 36379: a3 = a2 >> 0x30\n 36382: u8 [a0 + 0xe] = a3\n 36385: a3 = a2 >> 0x28\n 36388: u8 [a0 + 0xd] = a3\n 36391: a3 = a2 >> 0x20\n 36394: u8 [a0 + 0xc] = a3\n 36397: a3 = a2 >> 0x18\n 36400: u8 [a0 + 0xb] = a3\n 36403: a3 = a2 >> 0x10\n 36406: u8 [a0 + 0xa] = a3\n 36409: a2 = a2 >> 0x8\n 36412: u8 [a0 + 0x9] = a2\n 36415: u8 [a0] = a1\n 36417: a2 = a1 >> 0x38\n 36420: u8 [a0 + 0x7] = a2\n 36423: a2 = a1 >> 0x30\n 36426: u8 [a0 + 0x6] = a2\n 36429: a2 = a1 >> 0x28\n 36432: u8 [a0 + 0x5] = a2\n 36435: a2 = a1 >> 0x20\n 36438: u8 [a0 + 0x4] = a2\n 36441: a2 = a1 >> 0x18\n 36444: u8 [a0 + 0x3] = a2\n 36447: a2 = a1 >> 0x10\n 36450: u8 [a0 + 0x2] = a2\n 36453: a1 = a1 >> 0x8\n 36456: a2 = s1 + 0xffffffffffffff80\n 36459: a3 = u64 [sp + 0xf8]\n 36463: a2 = a3 <u a2\n 36466: a3 = u64 [sp + 0xf0]\n 36470: a2 = 0 if a3 != 0\n 36472: a3 = u64 [sp + 0xe0]\n 36476: a2 = 0 if a3 != 0\n 36478: u8 [a0 + 0x1] = a1\n 36481: jump @463 if a2 == 0\n      : @457 (gas: 4)\n 36485: a0 = u64 [sp + 0xe8]\n 36489: i32 a0 = a0 + 0x80\n 36493: a1 = 0x20\n 36496: ra = 308, jump @0\n      : @458 [@dyn 154] (gas: 77)\n 36503: a1 = u64 [sp + 0x48]\n 36506: a1 = reverse a1\n 36508: a2 = u64 [sp + 0x50]\n 36511: a2 = reverse a2\n 36513: a3 = u64 [sp + 0x58]\n 36516: a3 = reverse a3\n 36518: a4 = u64 [sp + 0x60]\n 36521: a4 = reverse a4\n 36523: a5 = a4 >> 0x38\n 36526: u8 [a0 + 0x1f] = a5\n 36529: a5 = a4 >> 0x30\n 36532: u8 [a0 + 0x1e] = a5\n 36535: a5 = a4 >> 0x28\n 36538: u8 [a0 + 0x1d] = a5\n 36541: a5 = a4 >> 0x20\n 36544: u8 [a0 + 0x1c] = a5\n 36547: a5 = a4 >> 0x18\n 36550: u8 [a0 + 0x1b] = a5\n 36553: a5 = a4 >> 0x10\n 36556: u8 [a0 + 0x1a] = a5\n 36559: a5 = a4 >> 0x8\n 36562: u8 [a0 + 0x19] = a5\n 36565: u8 [a0 + 0x18] = a4\n 36568: u8 [a0 + 0x10] = a3\n 36571: a4 = a3 >> 0x38\n 36574: u8 [a0 + 0x17] = a4\n 36577: a4 = a3 >> 0x30\n 36580: u8 [a0 + 0x16] = a4\n 36583: a4 = a3 >> 0x28\n 36586: u8 [a0 + 0x15] = a4\n 36589: a4 = a3 >> 0x20\n 36592: u8 [a0 + 0x14] = a4\n 36595: a4 = a3 >> 0x18\n 36598: u8 [a0 + 0x13] = a4\n 36601: a4 = a3 >> 0x10\n 36604: u8 [a0 + 0x12] = a4\n 36607: a3 = a3 >> 0x8\n 36610: u8 [a0 + 0x11] = a3\n 36613: u8 [a0 + 0x8] = a2\n 36616: a3 = a2 >> 0x38\n 36619: u8 [a0 + 0xf] = a3\n 36622: a3 = a2 >> 0x30\n 36625: u8 [a0 + 0xe] = a3\n 36628: a3 = a2 >> 0x28\n 36631: u8 [a0 + 0xd] = a3\n 36634: a3 = a2 >> 0x20\n 36637: u8 [a0 + 0xc] = a3\n 36640: a3 = a2 >> 0x18\n 36643: u8 [a0 + 0xb] = a3\n 36646: a3 = a2 >> 0x10\n 36649: u8 [a0 + 0xa] = a3\n 36652: a2 = a2 >> 0x8\n 36655: u8 [a0 + 0x9] = a2\n 36658: u8 [a0] = a1\n 36660: a2 = a1 >> 0x38\n 36663: u8 [a0 + 0x7] = a2\n 36666: a2 = a1 >> 0x30\n 36669: u8 [a0 + 0x6] = a2\n 36672: a2 = a1 >> 0x28\n 36675: u8 [a0 + 0x5] = a2\n 36678: a2 = a1 >> 0x20\n 36681: u8 [a0 + 0x4] = a2\n 36684: a2 = a1 >> 0x18\n 36687: u8 [a0 + 0x3] = a2\n 36690: a2 = a1 >> 0x10\n 36693: u8 [a0 + 0x2] = a2\n 36696: a1 = a1 >> 0x8\n 36699: s1 = 0x100000000\n 36709: a2 = 0xffffff60\n 36719: a3 = u64 [sp + 0xf8]\n 36723: a2 = a3 <u a2\n 36726: a3 = u64 [sp + 0xf0]\n 36730: a2 = 0 if a3 != 0\n 36732: a3 = u64 [sp + 0xe0]\n 36736: a2 = 0 if a3 != 0\n 36738: u8 [a0 + 0x1] = a1\n 36741: jump @463 if a2 == 0\n      : @459 (gas: 4)\n 36745: a0 = u64 [sp + 0xe8]\n 36749: i32 a0 = a0 + 0xa0\n 36753: a1 = 0x20\n 36756: ra = 310, jump @0\n      : @460 [@dyn 155] (gas: 76)\n 36763: a1 = u64 [sp + 0x38]\n 36766: a1 = reverse a1\n 36768: a2 = u64 [sp + 0x20]\n 36771: a2 = reverse a2\n 36773: a3 = u64 [sp + 0x28]\n 36776: a3 = reverse a3\n 36778: a4 = u64 [sp + 0x30]\n 36781: a4 = reverse a4\n 36783: a5 = a4 >> 0x38\n 36786: u8 [a0 + 0x1f] = a5\n 36789: a5 = a4 >> 0x30\n 36792: u8 [a0 + 0x1e] = a5\n 36795: a5 = a4 >> 0x28\n 36798: u8 [a0 + 0x1d] = a5\n 36801: a5 = a4 >> 0x20\n 36804: u8 [a0 + 0x1c] = a5\n 36807: a5 = a4 >> 0x18\n 36810: u8 [a0 + 0x1b] = a5\n 36813: a5 = a4 >> 0x10\n 36816: u8 [a0 + 0x1a] = a5\n 36819: a5 = a4 >> 0x8\n 36822: u8 [a0 + 0x19] = a5\n 36825: u8 [a0 + 0x18] = a4\n 36828: u8 [a0 + 0x10] = a3\n 36831: a4 = a3 >> 0x38\n 36834: u8 [a0 + 0x17] = a4\n 36837: a4 = a3 >> 0x30\n 36840: u8 [a0 + 0x16] = a4\n 36843: a4 = a3 >> 0x28\n 36846: u8 [a0 + 0x15] = a4\n 36849: a4 = a3 >> 0x20\n 36852: u8 [a0 + 0x14] = a4\n 36855: a4 = a3 >> 0x18\n 36858: u8 [a0 + 0x13] = a4\n 36861: a4 = a3 >> 0x10\n 36864: u8 [a0 + 0x12] = a4\n 36867: a3 = a3 >> 0x8\n 36870: u8 [a0 + 0x11] = a3\n 36873: u8 [a0 + 0x8] = a2\n 36876: a3 = a2 >> 0x38\n 36879: u8 [a0 + 0xf] = a3\n 36882: a3 = a2 >> 0x30\n 36885: u8 [a0 + 0xe] = a3\n 36888: a3 = a2 >> 0x28\n 36891: u8 [a0 + 0xd] = a3\n 36894: a3 = a2 >> 0x20\n 36897: u8 [a0 + 0xc] = a3\n 36900: a3 = a2 >> 0x18\n 36903: u8 [a0 + 0xb] = a3\n 36906: a3 = a2 >> 0x10\n 36909: u8 [a0 + 0xa] = a3\n 36912: a2 = a2 >> 0x8\n 36915: u8 [a0 + 0x9] = a2\n 36918: u8 [a0] = a1\n 36920: a2 = a1 >> 0x38\n 36923: u8 [a0 + 0x7] = a2\n 36926: a2 = a1 >> 0x30\n 36929: u8 [a0 + 0x6] = a2\n 36932: a2 = a1 >> 0x28\n 36935: u8 [a0 + 0x5] = a2\n 36938: a2 = a1 >> 0x20\n 36941: u8 [a0 + 0x4] = a2\n 36944: a2 = a1 >> 0x18\n 36947: u8 [a0 + 0x3] = a2\n 36950: a2 = a1 >> 0x10\n 36953: u8 [a0 + 0x2] = a2\n 36956: a1 = a1 >> 0x8\n 36959: a2 = s1 + 0xffffffffffffff40\n 36963: a3 = u64 [sp + 0xf8]\n 36967: a2 = a3 <u a2\n 36970: a3 = u64 [sp + 0xf0]\n 36974: a2 = 0 if a3 != 0\n 36976: a3 = u64 [sp + 0xe0]\n 36980: a2 = 0 if a3 != 0\n 36982: u8 [a0 + 0x1] = a1\n 36985: jump @463 if a2 == 0\n      : @461 (gas: 4)\n 36989: a0 = u64 [sp + 0xe8]\n 36993: i32 a0 = a0 + 0xc0\n 36997: a1 = 0x20\n 37000: ra = 312, jump @0\n      : @462 [@dyn 156] (gas: 83)\n 37007: a1 = u64 [sp + 0x18]\n 37010: a1 = reverse a1\n 37012: a2 = u64 [sp]\n 37014: a2 = reverse a2\n 37016: a3 = u64 [sp + 0x8]\n 37019: a3 = reverse a3\n 37021: a4 = u64 [sp + 0x10]\n 37024: a4 = reverse a4\n 37026: a5 = a4 >> 0x38\n 37029: u8 [a0 + 0x1f] = a5\n 37032: a5 = a4 >> 0x30\n 37035: u8 [a0 + 0x1e] = a5\n 37038: a5 = a4 >> 0x28\n 37041: u8 [a0 + 0x1d] = a5\n 37044: a5 = a4 >> 0x20\n 37047: u8 [a0 + 0x1c] = a5\n 37050: a5 = a4 >> 0x18\n 37053: u8 [a0 + 0x1b] = a5\n 37056: a5 = a4 >> 0x10\n 37059: u8 [a0 + 0x1a] = a5\n 37062: a5 = a4 >> 0x8\n 37065: u8 [a0 + 0x19] = a5\n 37068: u8 [a0 + 0x18] = a4\n 37071: u8 [a0 + 0x10] = a3\n 37074: a4 = a3 >> 0x38\n 37077: u8 [a0 + 0x17] = a4\n 37080: a4 = a3 >> 0x30\n 37083: u8 [a0 + 0x16] = a4\n 37086: a4 = a3 >> 0x28\n 37089: u8 [a0 + 0x15] = a4\n 37092: a4 = a3 >> 0x20\n 37095: u8 [a0 + 0x14] = a4\n 37098: a4 = a3 >> 0x18\n 37101: u8 [a0 + 0x13] = a4\n 37104: a4 = a3 >> 0x10\n 37107: u8 [a0 + 0x12] = a4\n 37110: a3 = a3 >> 0x8\n 37113: u8 [a0 + 0x11] = a3\n 37116: u8 [a0 + 0x8] = a2\n 37119: a3 = a2 >> 0x38\n 37122: u8 [a0 + 0xf] = a3\n 37125: a3 = a2 >> 0x30\n 37128: u8 [a0 + 0xe] = a3\n 37131: a3 = a2 >> 0x28\n 37134: u8 [a0 + 0xd] = a3\n 37137: a3 = a2 >> 0x20\n 37140: u8 [a0 + 0xc] = a3\n 37143: a3 = a2 >> 0x18\n 37146: u8 [a0 + 0xb] = a3\n 37149: a3 = a2 >> 0x10\n 37152: u8 [a0 + 0xa] = a3\n 37155: a2 = a2 >> 0x8\n 37158: u8 [a0 + 0x9] = a2\n 37161: u8 [a0] = a1\n 37163: a2 = a1 >> 0x38\n 37166: u8 [a0 + 0x7] = a2\n 37169: a2 = a1 >> 0x30\n 37172: u8 [a0 + 0x6] = a2\n 37175: a2 = a1 >> 0x28\n 37178: u8 [a0 + 0x5] = a2\n 37181: a2 = a1 >> 0x20\n 37184: u8 [a0 + 0x4] = a2\n 37187: a2 = a1 >> 0x18\n 37190: u8 [a0 + 0x3] = a2\n 37193: a2 = a1 >> 0x10\n 37196: u8 [a0 + 0x2] = a2\n 37199: a1 = a1 >> 0x8\n 37202: u8 [a0 + 0x1] = a1\n 37205: a0 = u64 [sp + 0x40]\n 37208: a1 = u64 [sp + 0xc0]\n 37212: u64 [a0] = a1\n 37214: a1 = u64 [sp + 0xd0]\n 37218: u64 [a0 + 0x18] = a1\n 37221: a1 = u64 [sp + 0xc8]\n 37225: u64 [a0 + 0x8] = a1\n 37228: a1 = u64 [sp + 0xd8]\n 37232: u64 [a0 + 0x10] = a1\n 37235: sp = s0 + 0xfffffffffffffe80\n 37239: ra = u64 [sp + 0x178]\n 37243: s0 = u64 [sp + 0x170]\n 37247: s1 = u64 [sp + 0x168]\n 37251: sp = sp + 0x180\n 37255: ret\n      : @463 (gas: 1)\n 37257: trap\n      : @464 (gas: 12)\n 37258: sp = sp + 0xffffffffffffffd0\n 37261: u64 [sp + 0x28] = ra\n 37264: u64 [sp + 0x20] = s0\n 37267: u64 [sp + 0x18] = s1\n 37270: a1 = u64 [a0 + 0x10]\n 37273: a2 = u64 [a0 + 0x18]\n 37276: a3 = u64 [a0 + 0x8]\n 37279: a0 = u64 [a0]\n 37281: a2 = a2 | a3\n 37284: a0 = a0 | a1\n 37287: a0 = a0 | a2\n 37290: jump @466 if a0 == 0\n      : @465 (gas: 5)\n 37293: ra = u64 [sp + 0x28]\n 37296: s0 = u64 [sp + 0x20]\n 37299: s1 = u64 [sp + 0x18]\n 37302: sp = sp + 0x30\n 37305: ret\n      : @466 (gas: 3)\n 37307: a0 = 0x40\n 37310: a1 = 0x20\n 37313: ra = 314, jump @0\n      : @467 [@dyn 157] (gas: 102)\n 37320: a1 = u8 [a0 + 0x11]\n 37323: a2 = u8 [a0 + 0x10]\n 37326: a3 = u8 [a0 + 0x12]\n 37329: a4 = u8 [a0 + 0x13]\n 37332: a1 = a1 << 0x8\n 37335: a1 = a1 | a2\n 37338: a3 = a3 << 0x10\n 37341: a4 = a4 << 0x18\n 37344: a3 = a3 | a4\n 37347: a1 = a1 | a3\n 37350: a2 = u8 [a0 + 0x15]\n 37353: a3 = u8 [a0 + 0x14]\n 37356: a4 = u8 [a0 + 0x16]\n 37359: a5 = u8 [a0 + 0x17]\n 37362: a2 = a2 << 0x8\n 37365: a2 = a2 | a3\n 37368: a4 = a4 << 0x10\n 37371: a5 = a5 << 0x18\n 37374: a4 = a4 | a5\n 37377: a2 = a2 | a4\n 37380: a2 = a2 << 0x20\n 37383: a1 = a1 | a2\n 37386: a2 = u8 [a0 + 0x1]\n 37389: a3 = u8 [a0]\n 37391: a4 = u8 [a0 + 0x2]\n 37394: a5 = u8 [a0 + 0x3]\n 37397: a2 = a2 << 0x8\n 37400: a2 = a2 | a3\n 37403: a4 = a4 << 0x10\n 37406: a5 = a5 << 0x18\n 37409: a4 = a4 | a5\n 37412: a2 = a2 | a4\n 37415: a3 = u8 [a0 + 0x5]\n 37418: a4 = u8 [a0 + 0x4]\n 37421: a5 = u8 [a0 + 0x6]\n 37424: s1 = u8 [a0 + 0x7]\n 37427: a3 = a3 << 0x8\n 37430: a3 = a3 | a4\n 37433: a5 = a5 << 0x10\n 37436: s1 = s1 << 0x18\n 37439: a5 = a5 | s1\n 37442: a3 = a3 | a5\n 37445: a3 = a3 << 0x20\n 37448: a2 = a2 | a3\n 37451: a3 = u8 [a0 + 0x19]\n 37454: a4 = u8 [a0 + 0x18]\n 37457: a5 = u8 [a0 + 0x1a]\n 37460: s1 = u8 [a0 + 0x1b]\n 37463: a3 = a3 << 0x8\n 37466: a3 = a3 | a4\n 37469: a5 = a5 << 0x10\n 37472: s1 = s1 << 0x18\n 37475: a5 = a5 | s1\n 37478: a3 = a3 | a5\n 37481: a4 = u8 [a0 + 0x1d]\n 37484: a5 = u8 [a0 + 0x1c]\n 37487: s1 = u8 [a0 + 0x1e]\n 37490: s0 = u8 [a0 + 0x1f]\n 37493: a4 = a4 << 0x8\n 37496: a4 = a4 | a5\n 37499: s1 = s1 << 0x10\n 37502: s0 = s0 << 0x18\n 37505: s0 = s0 | s1\n 37508: a4 = a4 | s0\n 37511: a4 = a4 << 0x20\n 37514: a3 = a3 | a4\n 37517: a4 = u8 [a0 + 0x9]\n 37520: a5 = u8 [a0 + 0x8]\n 37523: s1 = u8 [a0 + 0xa]\n 37526: s0 = u8 [a0 + 0xb]\n 37529: a4 = a4 << 0x8\n 37532: a4 = a4 | a5\n 37535: s1 = s1 << 0x10\n 37538: s0 = s0 << 0x18\n 37541: s0 = s0 | s1\n 37544: a4 = a4 | s0\n 37547: a5 = u8 [a0 + 0xd]\n 37550: s1 = u8 [a0 + 0xc]\n 37553: s0 = u8 [a0 + 0xe]\n 37556: a0 = u8 [a0 + 0xf]\n 37559: a5 = a5 << 0x8\n 37562: a5 = a5 | s1\n 37565: s0 = s0 << 0x10\n 37568: a0 = a0 << 0x18\n 37571: a0 = a0 | s0\n 37574: a0 = a0 | a5\n 37577: a0 = a0 << 0x20\n 37580: a0 = a0 | a4\n 37583: s0 = reverse a0\n 37585: a3 = reverse a3\n 37587: s1 = reverse a2\n 37589: a0 = reverse a1\n 37591: u64 [sp + 0x8] = a0\n 37594: a0 = a0 | s1\n 37597: u64 [sp + 0x10] = a3\n 37600: a1 = a3 | s0\n 37603: a1 = a1 | a0\n 37606: a1 = a1 >> 0x20\n 37609: a0 = a0 | s0\n 37612: a0 = a0 << 0x20\n 37615: a0 = a0 | a1\n 37618: jump @474 if a0 != 0\n      : @468 (gas: 4)\n 37622: a0 = i32 [sp + 0x10]\n 37625: a1 = 0x20\n 37628: u64 [sp] = a0\n 37630: ra = 316, jump @0\n      : @469 [@dyn 158] (gas: 41)\n 37637: u8 [a0 + 31] = 0\n 37640: u8 [a0 + 30] = 0\n 37643: u8 [a0 + 29] = 0\n 37646: u8 [a0 + 28] = 0\n 37649: u8 [a0 + 27] = 0\n 37652: u8 [a0 + 26] = 0\n 37655: u8 [a0 + 25] = 0\n 37658: u8 [a0 + 24] = 0\n 37661: u8 [a0 + 23] = 0\n 37664: u8 [a0 + 22] = 0\n 37667: u8 [a0 + 21] = 0\n 37670: u8 [a0 + 20] = 0\n 37673: u8 [a0 + 19] = 0\n 37676: u8 [a0 + 18] = 0\n 37679: u8 [a0 + 17] = 0\n 37682: u8 [a0 + 16] = 0\n 37685: u8 [a0 + 15] = 0\n 37688: u8 [a0 + 14] = 0\n 37691: u8 [a0 + 13] = 0\n 37694: u8 [a0 + 12] = 0\n 37697: u8 [a0 + 11] = 0\n 37700: u8 [a0 + 10] = 0\n 37703: u8 [a0 + 9] = 0\n 37706: u8 [a0 + 8] = 0\n 37709: u8 [a0 + 7] = 0\n 37712: u8 [a0 + 6] = 0\n 37715: u8 [a0 + 5] = 0\n 37718: u8 [a0 + 3] = 0xa0\n 37723: u8 [a0 + 2] = 0x79\n 37727: u8 [a0 + 1] = 0xc3\n 37732: u8 [a0 + 0] = 0x8\n 37735: s1 = s1 | s0\n 37738: s0 = 0x100000000\n 37748: a1 = 0xfffffffc\n 37758: a2 = u64 [sp + 0x10]\n 37761: a1 = a2 <u a1\n 37764: a2 = u64 [sp + 0x8]\n 37767: a1 = 0 if a2 != 0\n 37769: a1 = 0 if s1 != 0\n 37771: u8 [a0 + 4] = 0\n 37774: jump @474 if a1 == 0\n      : @470 (gas: 4)\n 37778: a0 = u64 [sp]\n 37780: i32 a0 = a0 + 0x4\n 37783: a1 = 0x20\n 37786: ra = 318, jump @0\n      : @471 [@dyn 159] (gas: 39)\n 37793: u8 [a0 + 31] = 0x20\n 37797: u8 [a0 + 30] = 0\n 37800: u8 [a0 + 29] = 0\n 37803: u8 [a0 + 28] = 0\n 37806: u8 [a0 + 27] = 0\n 37809: u8 [a0 + 26] = 0\n 37812: u8 [a0 + 25] = 0\n 37815: u8 [a0 + 24] = 0\n 37818: u8 [a0 + 23] = 0\n 37821: u8 [a0 + 22] = 0\n 37824: u8 [a0 + 21] = 0\n 37827: u8 [a0 + 20] = 0\n 37830: u8 [a0 + 19] = 0\n 37833: u8 [a0 + 18] = 0\n 37836: u8 [a0 + 17] = 0\n 37839: u8 [a0 + 16] = 0\n 37842: u8 [a0 + 15] = 0\n 37845: u8 [a0 + 14] = 0\n 37848: u8 [a0 + 13] = 0\n 37851: u8 [a0 + 12] = 0\n 37854: u8 [a0 + 11] = 0\n 37857: u8 [a0 + 10] = 0\n 37860: u8 [a0 + 9] = 0\n 37863: u8 [a0 + 8] = 0\n 37866: u8 [a0 + 7] = 0\n 37869: u8 [a0 + 6] = 0\n 37872: u8 [a0 + 5] = 0\n 37875: u8 [a0 + 4] = 0\n 37878: u8 [a0 + 3] = 0\n 37881: u8 [a0 + 2] = 0\n 37884: u8 [a0 + 1] = 0\n 37887: a1 = s0 + 0xffffffffffffffdc\n 37890: a2 = u64 [sp + 0x10]\n 37893: a1 = a2 <u a1\n 37896: a2 = u64 [sp + 0x8]\n 37899: a1 = 0 if a2 != 0\n 37901: a1 = 0 if s1 != 0\n 37903: u8 [a0 + 0] = 0\n 37905: jump @474 if a1 == 0\n      : @472 (gas: 4)\n 37909: a0 = u64 [sp]\n 37911: i32 a0 = a0 + 0x24\n 37914: a1 = 0x20\n 37917: ra = 320, jump @0\n      : @473 [@dyn 160] (gas: 39)\n 37924: u8 [a0 + 31] = 0x14\n 37928: u8 [a0 + 30] = 0\n 37931: u8 [a0 + 29] = 0\n 37934: u8 [a0 + 28] = 0\n 37937: u8 [a0 + 27] = 0\n 37940: u8 [a0 + 26] = 0\n 37943: u8 [a0 + 25] = 0\n 37946: u8 [a0 + 24] = 0\n 37949: u8 [a0 + 23] = 0\n 37952: u8 [a0 + 22] = 0\n 37955: u8 [a0 + 21] = 0\n 37958: u8 [a0 + 20] = 0\n 37961: u8 [a0 + 19] = 0\n 37964: u8 [a0 + 18] = 0\n 37967: u8 [a0 + 17] = 0\n 37970: u8 [a0 + 16] = 0\n 37973: u8 [a0 + 15] = 0\n 37976: u8 [a0 + 14] = 0\n 37979: u8 [a0 + 13] = 0\n 37982: u8 [a0 + 12] = 0\n 37985: u8 [a0 + 11] = 0\n 37988: u8 [a0 + 10] = 0\n 37991: u8 [a0 + 9] = 0\n 37994: u8 [a0 + 8] = 0\n 37997: u8 [a0 + 7] = 0\n 38000: u8 [a0 + 6] = 0\n 38003: u8 [a0 + 5] = 0\n 38006: u8 [a0 + 4] = 0\n 38009: u8 [a0 + 3] = 0\n 38012: u8 [a0 + 2] = 0\n 38015: u8 [a0 + 1] = 0\n 38018: a1 = 0xffffffbc\n 38028: a2 = u64 [sp + 0x10]\n 38031: a1 = a2 <u a1\n 38034: a2 = u64 [sp + 0x8]\n 38037: a1 = 0 if a2 != 0\n 38039: a1 = 0 if s1 != 0\n 38041: u8 [a0 + 0] = 0\n 38043: jump @475 if a1 != 0\n      : @474 (gas: 1)\n 38046: trap\n      : @475 (gas: 4)\n 38047: s0 = u64 [sp]\n 38049: i32 a0 = s0 + 0x44\n 38052: a1 = 0x20\n 38055: ra = 322, jump @0\n      : @476 [@dyn 161] (gas: 38)\n 38062: u8 [a0 + 31] = 0\n 38065: u8 [a0 + 30] = 0\n 38068: u8 [a0 + 29] = 0\n 38071: u8 [a0 + 28] = 0\n 38074: u8 [a0 + 27] = 0\n 38077: u8 [a0 + 26] = 0\n 38080: u8 [a0 + 25] = 0\n 38083: u8 [a0 + 24] = 0\n 38086: u8 [a0 + 23] = 0\n 38089: u8 [a0 + 22] = 0\n 38092: u8 [a0 + 21] = 0\n 38095: u8 [a0 + 20] = 0\n 38098: u8 [a0 + 19] = 0x74\n 38102: u8 [a0 + 18] = 0x73\n 38106: u8 [a0 + 17] = 0x69\n 38110: u8 [a0 + 16] = 0x78\n 38114: u8 [a0 + 15] = 0x65\n 38118: s1 = 0x20\n 38121: u8 [a0 + 0xe] = s1\n 38124: u8 [a0 + 13] = 0x74\n 38128: a4 = 0x6f\n 38131: u8 [a0 + 0xc] = a4\n 38134: a5 = 0x6e\n 38137: u8 [a0 + 0xb] = a5\n 38140: u8 [a0 + 0xa] = s1\n 38143: u8 [a0 + 9] = 0x73\n 38147: u8 [a0 + 8] = 0x65\n 38151: u8 [a0 + 0x7] = a4\n 38154: u8 [a0 + 6] = 0x64\n 38158: u8 [a0 + 0x5] = s1\n 38161: u8 [a0 + 4] = 0x74\n 38165: u8 [a0 + 0x3] = a5\n 38168: u8 [a0 + 2] = 0x65\n 38172: u8 [a0 + 1] = 0x76\n 38176: u8 [a0 + 0] = 0x45\n 38179: a1 = 0x64\n 38182: a0 = s0\n 38184: ra = 324, jump @0\n      : @477 [@dyn 162] (gas: 6)\n 38191: i32 a1 = a0 + 0\n 38193: a0 = 0x1\n 38196: a2 = 0x64\n 38199: ra = 0x146\n 38203: ecalli 13 // 'seal_return'\n 38205: fallthrough\n      : @478 [@dyn 163] (gas: 16)\n 38206: a2 = u64 [a1]\n 38208: t0 = u64 [a1 + 0x18]\n 38211: a3 = u64 [a1 + 0x8]\n 38214: a5 = u64 [a1 + 0x10]\n 38217: a4 = a2 + 0x1\n 38220: a2 = a4 <u 0x1\n 38223: a2 = a2 + a3\n 38226: a3 = a4 | a2\n 38229: a3 = a3 <u 0x1\n 38232: a3 = a3 + a5\n 38235: a5 = a3 <u a5\n 38238: a5 = a5 + t0\n 38241: t0 = a2 | a5\n 38244: a1 = a4 | a3\n 38247: a1 = a1 | t0\n 38250: jump @480 if a1 == 0\n      : @479 (gas: 5)\n 38253: u64 [a0] = a4\n 38255: u64 [a0 + 0x8] = a2\n 38258: u64 [a0 + 0x10] = a3\n 38261: u64 [a0 + 0x18] = a5\n 38264: ret\n      : @480 (gas: 13)\n 38266: sp = sp + 0xffffffffffffffb0\n 38269: u64 [sp + 0x48] = ra\n 38272: u64 [sp + 0x40] = s0\n 38275: s0 = sp + 0x50\n 38278: sp = sp & 0xfffffffffffffff0\n 38281: u64 [sp + 48] = 0\n 38284: u64 [sp + 40] = 0\n 38287: u64 [sp + 32] = 0\n 38290: a0 = 0x4e487b7100000000\n 38300: a1 = sp + 0x20\n 38303: u64 [sp + 0x38] = a0\n 38306: a0 = 0\n 38308: ra = 328, jump @23\n      : @481 [@dyn 164] (gas: 7)\n 38315: u64 [sp + 24] = 0\n 38318: u64 [sp + 16] = 0\n 38321: u64 [sp + 0] = 0x11\n 38324: a0 = 0x4\n 38327: a1 = sp\n 38329: u64 [sp + 8] = 0\n 38332: ra = 330, jump @23\n      : @482 [@dyn 165] (gas: 3)\n 38339: a1 = 0x24\n 38342: a0 = 0\n 38344: ra = 332, jump @0\n      : @483 [@dyn 166] (gas: 7)\n 38351: i32 a1 = a0 + 0\n 38353: a0 = 0x1\n 38356: a2 = 0x24\n 38359: ecalli 13 // 'seal_return'\n 38361: a0 = 0\n 38363: ra = 0x14e\n 38367: jump @29\n      : @484 [export #0: 'call'] (gas: 2)\n 38371: a0 = 0\n 38373: ra = 334, jump @29\n      : @485 [@dyn 167] [export #1: 'deploy'] (gas: 2)\n 38380: a0 = 0x1\n 38383: ra = 336, jump @29\n      : @486 [@dyn 168] (gas: 1)\n 38390: trap\n",
						"bytecode": {
							"object": ""
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"buyTicket(uint256)": "67dd74ca",
							"contractOwner()": "ce606ee0",
							"createEvent(string,uint256,uint256,uint256,uint256)": "dbf3f3c9",
							"events(uint256)": "0b791430",
							"getEventCount()": "d9e48f5c",
							"getEventDetails(uint256)": "ec38d5a0",
							"hasTicket(uint256,address)": "4843d2b1",
							"nextEventId()": "9f9d903a",
							"withdrawFees()": "476343ee"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/EventTickets.sol\"\nobject \"EventTickets_Simple_396\" {\n    code {\n        {\n            /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:2018:2044  \"contractOwner = msg.sender\" */ 0x00, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ or(and(sload(/** @src 0:2018:2044  \"contractOwner = msg.sender\" */ 0x00), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:2034:2044  \"msg.sender\" */ caller()))\n            /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n            let _2 := datasize(\"EventTickets_Simple_396_deployed\")\n            codecopy(_1, dataoffset(\"EventTickets_Simple_396_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/EventTickets.sol\"\n    object \"EventTickets_Simple_396_deployed\" {\n        code {\n            {\n                /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0b791430 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ 2)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let value := and(sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ dataSlot), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\"\n                        let ret_mpos := copy_array_from_storage_to_memory_string(add(dataSlot, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 1))\n                        let _1 := sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ add(dataSlot, 2))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _2 := sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ add(dataSlot, 3))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _3 := sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ add(dataSlot, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 4))\n                        let _4 := sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ add(dataSlot, 5))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _5 := sload(/** @src 0:1068:1111  \"mapping(uint256 => EventInfo) public events\" */ add(dataSlot, 6))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_address_string_uint256_uint256_uint256_uint256_uint256(memPos, value, ret_mpos, _1, _2, _3, _4, _5), memPos))\n                    }\n                    case 0x476343ee {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 0:1892:1942  \"if (msg.sender != contractOwner) revert NotOwner()\"\n                        if /** @src 0:1896:1923  \"msg.sender != contractOwner\" */ iszero(eq(/** @src 0:1896:1906  \"msg.sender\" */ caller(), /** @src 0:1896:1923  \"msg.sender != contractOwner\" */ value_1))\n                        /// @src 0:1892:1942  \"if (msg.sender != contractOwner) revert NotOwner()\"\n                        {\n                            /// @src 0:1932:1942  \"NotOwner()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:1932:1942  \"NotOwner()\" */ shl(224, 0x30cd7471))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:3349:3370  \"address(this).balance\"\n                        let expr := selfbalance()\n                        /// @src 0:3380:3423  \"if (balance == 0) revert NoFeesToWithdraw()\"\n                        if /** @src 0:3384:3396  \"balance == 0\" */ iszero(expr)\n                        /// @src 0:3380:3423  \"if (balance == 0) revert NoFeesToWithdraw()\"\n                        {\n                            /// @src 0:3405:3423  \"NoFeesToWithdraw()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:3405:3423  \"NoFeesToWithdraw()\" */ shl(227, 0x0d00db4d))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:3452:3490  \"contractOwner.call{value: balance}(\\\"\\\")\"\n                        let expr_component := call(gas(), value_1, expr, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 0, 0, 0)\n                        /// @src 0:3452:3490  \"contractOwner.call{value: balance}(\\\"\\\")\"\n                        let data := /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            let _7 := array_allocation_size_string(_6)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _7)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 0x20), 0, returndatasize())\n                        }\n                        if iszero(expr_component)\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 15)\n                            mstore(add(memPtr_1, 68), \"Transfer failed\")\n                            revert(memPtr_1, 100)\n                        }\n                        let value_2 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 0:3550:3587  \"FeesWithdrawn(contractOwner, balance)\"\n                        let _8 := /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ mload(64)\n                        mstore(_8, expr)\n                        /// @src 0:3550:3587  \"FeesWithdrawn(contractOwner, balance)\"\n                        log2(_8, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 32, /** @src 0:3550:3587  \"FeesWithdrawn(contractOwner, balance)\" */ 0xc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a, value_2)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        return(0, 0)\n                    }\n                    case 0x4843d2b1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_3 := calldataload(36)\n                        if iszero(eq(value_3, and(value_3, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:5716:5722  \"events\" */ 0x02)\n                        /// @src 0:5716:5745  \"events[eventId].userHasTicket\"\n                        let _9 := add(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ keccak256(0, 64), /** @src 0:5716:5745  \"events[eventId].userHasTicket\" */ 7)\n                        /// @src 0:5716:5751  \"events[eventId].userHasTicket[user]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ and(/** @src 0:5716:5751  \"events[eventId].userHasTicket[user]\" */ value_3, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:5716:5745  \"events[eventId].userHasTicket\" */ _9)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0x40)\n                        let value_4 := and(sload(/** @src 0:5716:5751  \"events[eventId].userHasTicket[user]\" */ dataSlot_1), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0xff)\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(value_4)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x67dd74ca {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        /// @src 0:3791:3845  \"require(eventId < nextEventId, \\\"Event does not exist\\\")\"\n                        require_helper_stringliteral_d6a0(/** @src 0:3799:3820  \"eventId < nextEventId\" */ lt(value_5, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(1)))\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:3888:3894  \"events\" */ 0x02)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 0:3970:4042  \"if (block.timestamp < currentEvent.saleStartTime) revert SaleNotActive()\"\n                        if /** @src 0:3974:4018  \"block.timestamp < currentEvent.saleStartTime\" */ lt(/** @src 0:3974:3989  \"block.timestamp\" */ timestamp(), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(/** @src 0:3992:4018  \"currentEvent.saleStartTime\" */ add(dataSlot_2, 5)))\n                        /// @src 0:3970:4042  \"if (block.timestamp < currentEvent.saleStartTime) revert SaleNotActive()\"\n                        {\n                            /// @src 0:4027:4042  \"SaleNotActive()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:4027:4042  \"SaleNotActive()\" */ shl(224, 0xb7b24097))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:4052:4119  \"if (block.timestamp >= currentEvent.saleEndTime) revert SaleEnded()\"\n                        if /** @src 0:4056:4099  \"block.timestamp >= currentEvent.saleEndTime\" */ iszero(lt(/** @src 0:3974:3989  \"block.timestamp\" */ timestamp(), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(/** @src 0:4075:4099  \"currentEvent.saleEndTime\" */ add(dataSlot_2, 6))))\n                        /// @src 0:4052:4119  \"if (block.timestamp >= currentEvent.saleEndTime) revert SaleEnded()\"\n                        {\n                            /// @src 0:4108:4119  \"SaleEnded()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:4108:4119  \"SaleEnded()\" */ shl(224, 0x0bd8a3eb))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:4133:4158  \"currentEvent.issuedSupply\"\n                        let _10 := add(dataSlot_2, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 4)\n                        let _11 := sload(/** @src 0:4133:4158  \"currentEvent.issuedSupply\" */ _10)\n                        /// @src 0:4129:4202  \"if (currentEvent.issuedSupply >= currentEvent.maxSupply) revert SoldOut()\"\n                        if /** @src 0:4133:4184  \"currentEvent.issuedSupply >= currentEvent.maxSupply\" */ iszero(lt(_11, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(/** @src 0:4162:4184  \"currentEvent.maxSupply\" */ add(dataSlot_2, 3))))\n                        /// @src 0:4129:4202  \"if (currentEvent.issuedSupply >= currentEvent.maxSupply) revert SoldOut()\"\n                        {\n                            /// @src 0:4193:4202  \"SoldOut()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:4193:4202  \"SoldOut()\" */ shl(224, 0x52df9fe5))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:4229:4247  \"currentEvent.price\"\n                        let _12 := add(dataSlot_2, /** @src 0:3888:3894  \"events\" */ 0x02)\n                        /// @src 0:4212:4277  \"if (msg.value != currentEvent.price) revert InsufficientPayment()\"\n                        if /** @src 0:4216:4247  \"msg.value != currentEvent.price\" */ iszero(eq(/** @src 0:4216:4225  \"msg.value\" */ callvalue(), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(/** @src 0:4229:4247  \"currentEvent.price\" */ _12)))\n                        /// @src 0:4212:4277  \"if (msg.value != currentEvent.price) revert InsufficientPayment()\"\n                        {\n                            /// @src 0:4256:4277  \"InsufficientPayment()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:4256:4277  \"InsufficientPayment()\" */ shl(224, 0xcd1c8867))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:4291:4317  \"currentEvent.userHasTicket\"\n                        let _13 := add(dataSlot_2, 7)\n                        /// @src 0:4291:4329  \"currentEvent.userHasTicket[msg.sender]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ and(/** @src 0:4318:4328  \"msg.sender\" */ caller(), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:4291:4329  \"currentEvent.userHasTicket[msg.sender]\" */ _13)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0x40)\n                        /// @src 0:4287:4357  \"if (currentEvent.userHasTicket[msg.sender]) revert AlreadyOwnsTicket()\"\n                        if /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ and(sload(/** @src 0:4291:4329  \"currentEvent.userHasTicket[msg.sender]\" */ dataSlot_3), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0xff)\n                        /// @src 0:4287:4357  \"if (currentEvent.userHasTicket[msg.sender]) revert AlreadyOwnsTicket()\"\n                        {\n                            /// @src 0:4338:4357  \"AlreadyOwnsTicket()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:4338:4357  \"AlreadyOwnsTicket()\" */ shl(224, 0x1a43bf63))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        /// @src 0:4405:4443  \"currentEvent.userHasTicket[msg.sender]\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ and(/** @src 0:4318:4328  \"msg.sender\" */ caller(), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:4405:4443  \"currentEvent.userHasTicket[msg.sender]\" */ _13)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0x40)\n                        sstore(/** @src 0:4405:4443  \"currentEvent.userHasTicket[msg.sender]\" */ dataSlot_4, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ or(and(sload(/** @src 0:4405:4443  \"currentEvent.userHasTicket[msg.sender]\" */ dataSlot_4), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ not(255)), 1))\n                        sstore(_10, /** @src 0:4460:4487  \"currentEvent.issuedSupply++\" */ increment_uint256(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(/** @src 0:4460:4487  \"currentEvent.issuedSupply++\" */ _10)))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _14 := sload(/** @src 0:4572:4590  \"currentEvent.price\" */ _12)\n                        /// @src 0:4538:4591  \"TicketBought(eventId, msg.sender, currentEvent.price)\"\n                        let _15 := /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ mload(64)\n                        mstore(_15, _14)\n                        /// @src 0:4538:4591  \"TicketBought(eventId, msg.sender, currentEvent.price)\"\n                        log3(_15, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 32, /** @src 0:4538:4591  \"TicketBought(eventId, msg.sender, currentEvent.price)\" */ 0x913d09b391f64143215d9312fd7e8ecaa06001c646789c9d2109dc515bc34fad, value_5, /** @src 0:4318:4328  \"msg.sender\" */ caller())\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        return(0, 0)\n                    }\n                    case 0x9f9d903a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _16 := sload(/** @src 0:1036:1062  \"uint256 public nextEventId\" */ 1)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _16)\n                        return(memPos_2, 32)\n                    }\n                    case 0xce606ee0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_6 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_6)\n                        return(memPos_3, 32)\n                    }\n                    case 0xd9e48f5c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _17 := sload(/** @src 0:4779:4790  \"nextEventId\" */ 0x01)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _17)\n                        return(memPos_4, 32)\n                    }\n                    case 0xdbf3f3c9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        let _18 := array_allocation_size_string(length)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, _18)\n                        mstore(memPtr_2, length)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(add(memPtr_2, 0x20), add(offset, 36), length)\n                        mstore(add(add(memPtr_2, length), 0x20), 0)\n                        let value_7 := calldataload(36)\n                        let value_8 := calldataload(68)\n                        let value_9 := calldataload(100)\n                        let value_10 := calldataload(132)\n                        let value_11 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 0:1892:1942  \"if (msg.sender != contractOwner) revert NotOwner()\"\n                        if /** @src 0:1896:1923  \"msg.sender != contractOwner\" */ iszero(eq(/** @src 0:1896:1906  \"msg.sender\" */ caller(), /** @src 0:1896:1923  \"msg.sender != contractOwner\" */ value_11))\n                        /// @src 0:1892:1942  \"if (msg.sender != contractOwner) revert NotOwner()\"\n                        {\n                            /// @src 0:1932:1942  \"NotOwner()\"\n                            mstore(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, /** @src 0:1932:1942  \"NotOwner()\" */ shl(224, 0x30cd7471))\n                            revert(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0, 4)\n                        }\n                        if iszero(/** @src 0:2422:2451  \"_saleEndTime > _saleStartTime\" */ gt(value_10, value_9))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 0x20)\n                            mstore(add(memPtr_3, 36), 38)\n                            mstore(add(memPtr_3, 68), \"Sale end time must be after star\")\n                            mstore(add(memPtr_3, 100), \"t time\")\n                            revert(memPtr_3, 132)\n                        }\n                        if /** @src 0:2512:2526  \"_maxSupply > 0\" */ iszero(value_8)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 0x20)\n                            mstore(add(memPtr_4, 36), 33)\n                            mstore(add(memPtr_4, 68), \"Max supply must be greater than \")\n                            mstore(add(memPtr_4, 100), \"0\")\n                            revert(memPtr_4, 132)\n                        }\n                        let _19 := sload(1)\n                        mstore(0, _19)\n                        mstore(0x20, /** @src 0:2643:2649  \"events\" */ 0x02)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        sstore(dataSlot_5, or(and(sload(dataSlot_5), shl(160, 0xffffffffffffffffffffffff)), value_11))\n                        /// @src 0:2709:2722  \"newEvent.name\"\n                        let _20 := add(dataSlot_5, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 1)\n                        let newLen := mload(memPtr_2)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _21 := extract_byte_array_length(sload(_20))\n                        if gt(_21, 0x1f)\n                        {\n                            mstore(0, _20)\n                            let data_1 := keccak256(0, 0x20)\n                            let deleteStart := add(data_1, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 0x20) { deleteStart := data_1 }\n                            let _22 := add(data_1, shr(5, add(_21, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _22) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 0x20\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, _20)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n                            {\n                                sstore(dstPtr, mload(add(memPtr_2, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 0x20)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(memPtr_2, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(_20, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_12 := 0\n                            if newLen\n                            {\n                                value_12 := mload(add(memPtr_2, srcOffset))\n                            }\n                            sstore(_20, or(and(value_12, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        sstore(/** @src 0:2745:2759  \"newEvent.price\" */ add(dataSlot_5, /** @src 0:2643:2649  \"events\" */ 0x02), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ value_7)\n                        sstore(/** @src 0:2778:2796  \"newEvent.maxSupply\" */ add(dataSlot_5, 3), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ value_8)\n                        sstore(/** @src 0:2866:2888  \"newEvent.saleStartTime\" */ add(dataSlot_5, 5), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ value_9)\n                        sstore(/** @src 0:2915:2935  \"newEvent.saleEndTime\" */ add(dataSlot_5, 6), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ value_10)\n                        sstore(1, /** @src 0:3004:3017  \"nextEventId++\" */ increment_uint256(/** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(1)))\n                        let value_13 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 0:3032:3130  \"EventCreated(eventId, contractOwner, _eventName, _price, _maxSupply, _saleStartTime, _saleEndTime)\"\n                        let _23 := /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ mload(64)\n                        mstore(_23, 160)\n                        let tail := abi_encode_string(memPtr_2, add(_23, 160))\n                        mstore(add(_23, 0x20), value_7)\n                        mstore(add(_23, 64), value_8)\n                        mstore(add(_23, 96), value_9)\n                        mstore(add(_23, 128), value_10)\n                        /// @src 0:3032:3130  \"EventCreated(eventId, contractOwner, _eventName, _price, _maxSupply, _saleStartTime, _saleEndTime)\"\n                        log3(_23, sub(tail, _23), 0xb6a83ff9d6bbd62d96305d6eb336e501e42317b524fcca1b5ae9d5be9195812a, _19, value_13)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        return(0, 0)\n                    }\n                    case 0xec38d5a0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_14 := calldataload(4)\n                        /// @src 0:5139:5193  \"require(eventId < nextEventId, \\\"Event does not exist\\\")\"\n                        require_helper_stringliteral_d6a0(/** @src 0:5147:5168  \"eventId < nextEventId\" */ lt(value_14, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sload(1)))\n                        mstore(0, value_14)\n                        mstore(32, /** @src 0:5225:5231  \"events\" */ 0x02)\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        let value_15 := and(sload(/** @src 0:5271:5278  \"E.owner\" */ dataSlot_6), /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ sub(shl(160, 1), 1))\n                        let _24 := sload(/** @src 0:5312:5319  \"E.price\" */ add(dataSlot_6, /** @src 0:5225:5231  \"events\" */ 0x02))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _25 := sload(/** @src 0:5333:5344  \"E.maxSupply\" */ add(dataSlot_6, 3))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _26 := sload(/** @src 0:5358:5372  \"E.issuedSupply\" */ add(dataSlot_6, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 4))\n                        let _27 := sload(/** @src 0:5386:5401  \"E.saleStartTime\" */ add(dataSlot_6, 5))\n                        /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                        let _28 := sload(/** @src 0:5415:5428  \"E.saleEndTime\" */ add(dataSlot_6, 6))\n                        /// @src 0:5250:5438  \"return (...\"\n                        let var_name_mpos := /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:5292:5298  \"E.name\" */ add(dataSlot_6, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 1))\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_address_string_uint256_uint256_uint256_uint256_uint256(memPos_5, value_15, var_name_mpos, _24, _25, _26, _27, _28), memPos_5))\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:231:5846  \"contract EventTickets_Simple {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:231:5846  \"contract EventTickets_Simple {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_address_string_uint256_uint256_uint256_uint256_uint256(headStart, value0, value1, value2, value3, value4, value5, value6) -> tail\n            {\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), 224)\n                tail := abi_encode_string(value1, add(headStart, 224))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), value3)\n                mstore(add(headStart, 128), value4)\n                mstore(add(headStart, 160), value5)\n                mstore(add(headStart, 192), value6)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function require_helper_stringliteral_d6a0(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 20)\n                    mstore(add(memPtr, 68), \"Event does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ee6d7c6488acb69ca5c6b47388826dd3afb9d2fb7cc879acd9c65b0b3d70752e64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "14f0e3a56b98ffeed40322aae52f35e4f6deff7696cd306954e701485749f14e",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/EventTickets.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/EventTickets.sol",
					"exportedSymbols": {
						"EventTickets_Simple": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EventTickets_Simple",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:172:0",
								"text": " @title EventTickets_Simple\n @dev Simplified version: Manages creation and sale for events with a single ticket type.\n For EasyA x Polkadot Harvard Hackathon."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "EventTickets_Simple",
							"nameLocation": "240:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EventTickets_Simple.EventInfo",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "370:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "362:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "458:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "451:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 5,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "451:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "511:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "503:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "503:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "maxSupply",
											"nameLocation": "577:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "569:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "569:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"mutability": "mutable",
											"name": "issuedSupply",
											"nameLocation": "639:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "631:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "saleStartTime",
											"nameLocation": "698:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "690:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 13,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "690:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "saleEndTime",
											"nameLocation": "765:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "757:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "757:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "userHasTicket",
											"nameLocation": "902:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "877:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "877:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EventInfo",
									"nameLocation": "342:9:0",
									"nodeType": "StructDefinition",
									"scope": 396,
									"src": "335:629:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce606ee0",
									"id": 23,
									"mutability": "mutable",
									"name": "contractOwner",
									"nameLocation": "1017:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1002:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1002:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f9d903a",
									"id": 25,
									"mutability": "mutable",
									"name": "nextEventId",
									"nameLocation": "1051:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1036:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1036:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b791430",
									"id": 30,
									"mutability": "mutable",
									"name": "events",
									"nameLocation": "1105:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1068:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
										"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo)"
									},
									"typeName": {
										"id": 29,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1068:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
											"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 28,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 27,
												"name": "EventInfo",
												"nameLocations": [
													"1087:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "1087:9:0"
											},
											"referencedDeclaration": 21,
											"src": "1087:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
												"typeString": "struct EventTickets_Simple.EventInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b6a83ff9d6bbd62d96305d6eb336e501e42317b524fcca1b5ae9d5be9195812a",
									"id": 46,
									"name": "EventCreated",
									"nameLocation": "1160:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "eventId",
												"nameLocation": "1189:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1173:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1198:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1221:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1221:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "1257:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1249:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": false,
												"mutability": "mutable",
												"name": "saleStartTime",
												"nameLocation": "1276:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1268:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"mutability": "mutable",
												"name": "saleEndTime",
												"nameLocation": "1299:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1291:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:139:0"
									},
									"src": "1154:158:0"
								},
								{
									"anonymous": false,
									"eventSelector": "913d09b391f64143215d9312fd7e8ecaa06001c646789c9d2109dc515bc34fad",
									"id": 54,
									"name": "TicketBought",
									"nameLocation": "1323:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "eventId",
												"nameLocation": "1352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1336:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1377:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1361:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:63:0"
									},
									"src": "1317:82:0"
								},
								{
									"anonymous": false,
									"eventSelector": "c0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a",
									"id": 60,
									"name": "FeesWithdrawn",
									"nameLocation": "1450:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1464:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1487:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1463:39:0"
									},
									"src": "1444:59:0"
								},
								{
									"errorSelector": "b7b24097",
									"id": 62,
									"name": "SaleNotActive",
									"nameLocation": "1551:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:2:0"
									},
									"src": "1545:22:0"
								},
								{
									"errorSelector": "0bd8a3eb",
									"id": 64,
									"name": "SaleEnded",
									"nameLocation": "1578:9:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:0"
									},
									"src": "1572:18:0"
								},
								{
									"errorSelector": "52df9fe5",
									"id": 66,
									"name": "SoldOut",
									"nameLocation": "1601:7:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1608:2:0"
									},
									"src": "1595:16:0"
								},
								{
									"errorSelector": "cd1c8867",
									"id": 68,
									"name": "InsufficientPayment",
									"nameLocation": "1622:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1641:2:0"
									},
									"src": "1616:28:0"
								},
								{
									"errorSelector": "1a43bf63",
									"id": 70,
									"name": "AlreadyOwnsTicket",
									"nameLocation": "1655:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1672:2:0"
									},
									"src": "1649:26:0"
								},
								{
									"errorSelector": "30cd7471",
									"id": 72,
									"name": "NotOwner",
									"nameLocation": "1686:8:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"src": "1680:17:0"
								},
								{
									"errorSelector": "6806da68",
									"id": 74,
									"name": "NoFeesToWithdraw",
									"nameLocation": "1780:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:0"
									},
									"src": "1774:25:0"
								},
								{
									"errorSelector": "90675ce6",
									"id": 76,
									"name": "EventDoesNotExist",
									"nameLocation": "1810:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:2:0"
									},
									"src": "1804:26:0"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1882:78:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 78,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1896:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1900:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1896:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 80,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1910:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1896:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "1892:50:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 82,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1932:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1932:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 84,
													"nodeType": "RevertStatement",
													"src": "1925:17:0"
												}
											},
											{
												"id": 86,
												"nodeType": "PlaceholderStatement",
												"src": "1952:1:0"
											}
										]
									},
									"id": 88,
									"name": "onlyOwner",
									"nameLocation": "1870:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:2:0"
									},
									"src": "1861:99:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "2008:43:0",
										"statements": [
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2018:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 92,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2034:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2038:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2034:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2018:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2018:26:0"
											}
										]
									},
									"id": 97,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2008:0:0"
									},
									"scope": 396,
									"src": "1994:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2404:733:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "_saleEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2422:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 115,
																"name": "_saleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2437:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2422:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c6520656e642074696d65206d7573742062652061667465722073746172742074696d65",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2453:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bf3b3ab5e8d46652fa9adf60330a61b143fc4cf6a1c9f74d7098d5fb7a3f01f",
																"typeString": "literal_string \"Sale end time must be after start time\""
															},
															"value": "Sale end time must be after start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bf3b3ab5e8d46652fa9adf60330a61b143fc4cf6a1c9f74d7098d5fb7a3f01f",
																"typeString": "literal_string \"Sale end time must be after start time\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2414:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 121,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2512:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2512:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c79206d7573742062652067726561746572207468616e2030",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2528:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f",
																"typeString": "literal_string \"Max supply must be greater than 0\""
															},
															"value": "Max supply must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f",
																"typeString": "literal_string \"Max supply must be greater than 0\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "2504:60:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "eventId",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "2575:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 130,
												"initialValue": {
													"id": 129,
													"name": "nextEventId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2593:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2575:29:0"
											},
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "newEvent",
														"nameLocation": "2632:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "2614:26:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
															"typeString": "struct EventTickets_Simple.EventInfo"
														},
														"typeName": {
															"id": 132,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 131,
																"name": "EventInfo",
																"nameLocations": [
																	"2614:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "2614:9:0"
															},
															"referencedDeclaration": 21,
															"src": "2614:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"baseExpression": {
														"id": 134,
														"name": "events",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2643:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
															"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo storage ref)"
														}
													},
													"id": 136,
													"indexExpression": {
														"id": 135,
														"name": "eventId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2643:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EventInfo_$21_storage",
														"typeString": "struct EventTickets_Simple.EventInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2614:44:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 138,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2678:5:0",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "2669:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "contractOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2686:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2669:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2669:30:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 144,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2709:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2718:4:0",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "2709:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_eventName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2725:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2709:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2709:26:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 150,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2745:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2754:5:0",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2745:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2745:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2745:23:0"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 156,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2778:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2787:9:0",
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2778:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 159,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "2799:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2778:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "2778:31:0"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 162,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2866:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2875:13:0",
														"memberName": "saleStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "2866:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "_saleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "2891:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2866:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "2866:39:0"
											},
											{
												"expression": {
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 168,
															"name": "newEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "2915:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2924:11:0",
														"memberName": "saleEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2915:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 171,
														"name": "_saleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2938:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2915:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2915:35:0"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3004:13:0",
													"subExpression": {
														"id": 174,
														"name": "nextEventId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3004:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "3004:13:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 178,
															"name": "eventId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3045:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 179,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "3054:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "_eventName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "3069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 181,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "3081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 182,
															"name": "_maxSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3089:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 183,
															"name": "_saleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3101:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 184,
															"name": "_saleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3117:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "EventCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3032:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3032:98:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "EmitStatement",
												"src": "3027:103:0"
											}
										]
									},
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "2089:73:0",
										"text": " @notice Creates a new event with a single ticket type."
									},
									"functionSelector": "dbf3f3c9",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 110,
												"name": "onlyOwner",
												"nameLocations": [
													"2394:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "2394:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2394:9:0"
										}
									],
									"name": "createEvent",
									"nameLocation": "2176:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "_eventName",
												"nameLocation": "2211:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2197:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 99,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "2239:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2231:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "2287:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2279:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "_saleStartTime",
												"nameLocation": "2336:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2328:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "_saleEndTime",
												"nameLocation": "2368:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2360:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:199:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:0:0"
									},
									"scope": 396,
									"src": "2167:970:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "3321:273:0",
										"statements": [
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3339:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "3331:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3331:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 198,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3357:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EventTickets_Simple_$396",
																	"typeString": "contract EventTickets_Simple"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EventTickets_Simple_$396",
																	"typeString": "contract EventTickets_Simple"
																}
															],
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 196,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3349:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3349:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3363:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "3349:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3331:39:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 202,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3395:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3384:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "3380:43:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 205,
															"name": "NoFeesToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "3405:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3405:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 207,
													"nodeType": "RevertStatement",
													"src": "3398:25:0"
												}
											},
											{
												"assignments": [
													210,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3439:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 228,
														"src": "3434:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 209,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 217,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3487:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 211,
																"name": "contractOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "3452:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3466:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3452:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 213,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3478:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3452:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3452:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3433:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 219,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3517:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3500:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "3500:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 224,
															"name": "contractOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "3564:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 225,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "3579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 223,
														"name": "FeesWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "3550:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3550:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "EmitStatement",
												"src": "3545:42:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3185:90:0",
										"text": " @notice Allows the contract owner to withdraw all accumulated WND fees."
									},
									"functionSelector": "476343ee",
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 192,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 191,
												"name": "onlyOwner",
												"nameLocations": [
													"3311:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 88,
												"src": "3311:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3311:9:0"
										}
									],
									"name": "withdrawFees",
									"nameLocation": "3289:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3301:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3321:0:0"
									},
									"scope": 396,
									"src": "3280:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3781:817:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "eventId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3799:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 237,
																"name": "nextEventId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3809:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3799:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4576656e7420646f6573206e6f74206578697374",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3822:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b",
																"typeString": "literal_string \"Event does not exist\""
															},
															"value": "Event does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b",
																"typeString": "literal_string \"Event does not exist\""
															}
														],
														"id": 235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3791:54:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentEvent",
														"nameLocation": "3873:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 316,
														"src": "3855:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
															"typeString": "struct EventTickets_Simple.EventInfo"
														},
														"typeName": {
															"id": 243,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 242,
																"name": "EventInfo",
																"nameLocations": [
																	"3855:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "3855:9:0"
															},
															"referencedDeclaration": 21,
															"src": "3855:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"baseExpression": {
														"id": 245,
														"name": "events",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3888:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
															"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo storage ref)"
														}
													},
													"id": 247,
													"indexExpression": {
														"id": 246,
														"name": "eventId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3888:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EventInfo_$21_storage",
														"typeString": "struct EventTickets_Simple.EventInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3855:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 249,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3974:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3980:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3974:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 251,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3992:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4005:13:0",
														"memberName": "saleStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "3992:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3974:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 257,
												"nodeType": "IfStatement",
												"src": "3970:72:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 254,
															"name": "SaleNotActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "4027:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4027:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 256,
													"nodeType": "RevertStatement",
													"src": "4020:22:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 258,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4056:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4062:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4056:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 260,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4075:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4088:11:0",
														"memberName": "saleEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "4075:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4056:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 266,
												"nodeType": "IfStatement",
												"src": "4052:67:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 263,
															"name": "SaleEnded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "4108:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4108:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 265,
													"nodeType": "RevertStatement",
													"src": "4101:18:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 267,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4133:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4146:12:0",
														"memberName": "issuedSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "4133:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 269,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4162:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4175:9:0",
														"memberName": "maxSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "4162:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4133:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "4129:73:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 272,
															"name": "SoldOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "4193:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4193:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 274,
													"nodeType": "RevertStatement",
													"src": "4186:16:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 276,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4216:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4220:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4216:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 278,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4229:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4242:5:0",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "4229:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4216:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "4212:65:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 281,
															"name": "InsufficientPayment",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "4256:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4256:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 283,
													"nodeType": "RevertStatement",
													"src": "4249:28:0"
												}
											},
											{
												"condition": {
													"baseExpression": {
														"expression": {
															"id": 285,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4291:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "userHasTicket",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "4291:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 289,
													"indexExpression": {
														"expression": {
															"id": 287,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4318:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4322:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4318:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4291:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "4287:70:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 290,
															"name": "AlreadyOwnsTicket",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4338:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4338:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 292,
													"nodeType": "RevertStatement",
													"src": "4331:26:0"
												}
											},
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 294,
																"name": "currentEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4405:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4418:13:0",
															"memberName": "userHasTicket",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "4405:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 299,
														"indexExpression": {
															"expression": {
																"id": 296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4432:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4436:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4432:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4405:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4446:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4405:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "4405:45:0"
											},
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4460:27:0",
													"subExpression": {
														"expression": {
															"id": 303,
															"name": "currentEvent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4460:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4473:12:0",
														"memberName": "issuedSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "4460:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "4460:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 309,
															"name": "eventId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "4551:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4560:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4564:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4560:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 312,
																"name": "currentEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4572:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4585:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "4572:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 308,
														"name": "TicketBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4538:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4538:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "4533:58:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3633:92:0",
										"text": " @notice Allows a user to buy a ticket for a specific event (single tier)."
									},
									"functionSelector": "67dd74ca",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTicket",
									"nameLocation": "3739:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "eventId",
												"nameLocation": "3757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3749:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:17:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3781:0:0"
									},
									"scope": 396,
									"src": "3730:868:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "4762:35:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "nextEventId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "4779:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "4772:18:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "4635:67:0",
										"text": " @notice Gets the total number of events created."
									},
									"functionSelector": "d9e48f5c",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEventCount",
									"nameLocation": "4716:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4729:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4753:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4752:9:0"
									},
									"scope": 396,
									"src": "4707:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5129:316:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "eventId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "5147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 348,
																"name": "nextEventId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "5157:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5147:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4576656e7420646f6573206e6f74206578697374",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5170:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b",
																"typeString": "literal_string \"Event does not exist\""
															},
															"value": "Event does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b",
																"typeString": "literal_string \"Event does not exist\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5139:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "5139:54:0"
											},
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "E",
														"nameLocation": "5221:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 376,
														"src": "5203:19:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
															"typeString": "struct EventTickets_Simple.EventInfo"
														},
														"typeName": {
															"id": 354,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 353,
																"name": "EventInfo",
																"nameLocations": [
																	"5203:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 21,
																"src": "5203:9:0"
															},
															"referencedDeclaration": 21,
															"src": "5203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																"typeString": "struct EventTickets_Simple.EventInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"baseExpression": {
														"id": 356,
														"name": "events",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5225:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
															"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo storage ref)"
														}
													},
													"id": 358,
													"indexExpression": {
														"id": 357,
														"name": "eventId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "5232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5225:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EventInfo_$21_storage",
														"typeString": "struct EventTickets_Simple.EventInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:37:0"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 360,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5271:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5273:5:0",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "5271:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 362,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5292:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5294:4:0",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "5292:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 364,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5312:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5314:5:0",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "5312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 366,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5333:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5335:9:0",
															"memberName": "maxSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "5333:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 368,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5358:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5360:12:0",
															"memberName": "issuedSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 12,
															"src": "5358:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 370,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5386:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5388:13:0",
															"memberName": "saleStartTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 14,
															"src": "5386:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 372,
																"name": "E",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5415:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EventInfo_$21_storage_ptr",
																	"typeString": "struct EventTickets_Simple.EventInfo storage pointer"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5417:11:0",
															"memberName": "saleEndTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 16,
															"src": "5415:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 374,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5257:181:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,string storage ref,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 345,
												"id": 375,
												"nodeType": "Return",
												"src": "5250:188:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "4803:61:0",
										"text": " @notice Gets details for a specific event."
									},
									"functionSelector": "ec38d5a0",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEventDetails",
									"nameLocation": "4878:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "eventId",
												"nameLocation": "4902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "4894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:17:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4949:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "4941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4978:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "4964:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5000:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "4992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "maxSupply",
												"nameLocation": "5023:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5015:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "issuedSupply",
												"nameLocation": "5050:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5042:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "saleStartTime",
												"nameLocation": "5080:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5072:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "saleEndTime",
												"nameLocation": "5111:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5103:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4931:197:0"
									},
									"scope": 396,
									"src": "4869:576:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "5612:146:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 387,
																"name": "events",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "5716:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EventInfo_$21_storage_$",
																	"typeString": "mapping(uint256 => struct EventTickets_Simple.EventInfo storage ref)"
																}
															},
															"id": 389,
															"indexExpression": {
																"id": 388,
																"name": "eventId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "5723:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5716:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_EventInfo_$21_storage",
																"typeString": "struct EventTickets_Simple.EventInfo storage ref"
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5732:13:0",
														"memberName": "userHasTicket",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5716:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 392,
													"indexExpression": {
														"id": 391,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "5746:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5716:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 386,
												"id": 393,
												"nodeType": "Return",
												"src": "5709:42:0"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5451:79:0",
										"text": " @notice Checks if a user owns a ticket for a specific event."
									},
									"functionSelector": "4843d2b1",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasTicket",
									"nameLocation": "5544:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "eventId",
												"nameLocation": "5562:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5554:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5579:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5571:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:31:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "5606:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5606:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5605:6:0"
									},
									"scope": 396,
									"src": "5535:223:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "231:5615:0",
							"usedErrors": [
								62,
								64,
								66,
								68,
								70,
								72,
								74,
								76
							],
							"usedEvents": [
								46,
								54,
								60
							]
						}
					],
					"src": "32:5814:0"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}